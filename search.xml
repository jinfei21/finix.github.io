<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[聊聊无印良品的品牌之路]]></title>
    <url>%2F2018%2F10%2F20%2F%E8%81%8A%E8%81%8A%E6%97%A0%E5%8D%B0%E8%89%AF%E5%93%81%E7%9A%84%E5%93%81%E7%89%8C%E4%B9%8B%E8%B7%AF%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;这期本来是要聊挣钱和能力的关系，由于昨天和领导私人会谈亮明了我鲜明的态度，在我看来我是表明立场，在他看来是偏激。我立马说偏激是中性词，请和极端分开。由这个话题呢，我想起前段时间了解的无印良品的品牌逆袭之路，我个人觉得就是偏激策略的成功。中国文化骨子里中庸之道，会导致绝大多数人本能的排斥偏激。我觉得也正因如此才导致国内知名品牌太少了，而中国是一个感性民族，理应产生更多品牌。&emsp;&emsp;无印良品是创立于80年代的日本经济繁荣期，源于一家类似家乐福的超市运营公司西友百货。西友想打造自己的原创品牌，于是有了无印良品这个部门。这就解释了，为什么无印良品什么都做，又是服装，又是食品，又是家居。一般来说，做得这么杂的品牌公司很少见，品类太多，导致给用户传达公司品牌印象会变得非常有挑战和难度。无印良品从最初40种产品扩充到现在的7000种产品，所要面对的难题不是如何生产这些产品，而是如何在品牌产品种类的扩展过程中始终坚持品牌的初衷。&emsp;&emsp;那么无印良品的品牌初衷是什么呢？80年代的日本，消费者面临两级分化的消费习惯，要么是海外奢侈品，非常酷非常高级个性化，但是通常价格都很贵，一般用户消费不起。要么是价格便宜质量粗糙的低端产品市场，这就有点类似国内目前的状况，阿里和京东清理假货和山寨货给了拼多多机会。既然无良印品要走品牌之路，必须要给品牌赋予价值观。无良印品这时候提供给用户第三种选择，既不是山寨别人，是清晰的传达给用户，价格便宜质量够好，注意是指质量够好不是非常好，无印良品想告诉用户回归平常心，不要为了逼格而付出过高的成本，不要迷失在攀比的欲望里不能自拔。所以无印良品和高端路线的产品正好相反，极力去除产品的个性，让它看上去并不酷。 &emsp;&emsp;无印良品的这种策略其实有三个方向的考虑： 1、盲目追求高端、个性化，意味着产品要不断升级、不断换花样，这样会给企业带来过高的研发成本和营销成本，实际上带给用户的价值有限，就像目前苹果遇到的困境一样。而无印良品希望摆脱这种造流行的循环，提供一种无个性通用类的设计，就可以一直生产下去，以不变应万变。 2、成本可控，减少不必要的工序，同时降低成品的成本。 3、日本人的传统审美观念，是追求简洁素雅，和式风格深入日本人心。这种策略有一定的民意基础。 &emsp;&emsp;无良印品在保证质量够好的前提下，通过精选素材、检查工序、精简包装这三板斧降低成本。 精选素材：不是选择最好的材料，而是选择够好的材料，加大可利用率。例如无印良品的三文鱼罐头和碎香菇就是这种思路，保持原始材料的天然属性，不加工，比如不使用漂白剂、染色剂。 检查工序：保证产品可用性基础之上，去掉所有为了装饰而增加的工序，保证工序最简。如果可能的话，挑战传统设计，进一步减少工序和用料。 精简包装：包装不做任何修饰，尽量降低包装成本。 &emsp;&emsp;我们村有人是开服装厂的，有一次我问他他们家生产的羽绒服多少钱一件，他说几十块钱，而我买的明明就是几百块钱，当时我还很吃惊。后面了解营销策略后算是理解了。比如你有100块钱，要完成打广告、产品包装和产品本身这三件事，这100块你如何分配？答案是，花90块打广告，花9块钱包装产品、花1块钱做产品本身。听起来很不合理，但却是最好效益比的策略，这或许就是操纵人性的高明之道吧。你可以说它不合理，但是商家不会告诉你真相，你看了90块广告后，就会错误的认为手上1块钱的东西真值100块。&emsp;&emsp;最初无良印品没有品牌知名度的积累，又面对高端和低端市场的双面夹击，它该如何突围呢？其实它是选择的低端市场，它固执的打广告，将自己又便宜质量又好的定位清晰的传达给用户，便宜不是本事，又便宜又好才是本事，才是自己在低端市场的核心竞争所在。它不仅清晰的传达自己的定位，还告诉用户具体原因，为什么我可以做的又好又便宜？不同于外面那些便宜姚艳货，我们的产品便宜是有原因的。&emsp;&emsp;具体来说，无印良品在两个地方向用户传递着“无印良品便宜是有原因的”，一是报纸广告，二是产品包装袋。报纸广告是引流的，产品包装是进一步强化这个印象，也因此产生了病毒式的传播效应，和拼多多的拼团有点类似了。&emsp;&emsp;我想，用户在做任何一个选择时，一定是脑子里先有一个故事，比如说这家的产品很有逼格、这家的产品质量特别好、这家的产品超级便宜等等，这便是定位，是品牌印象。无印良品很聪明的一点是，它在一开始就选择好了一个切入点，设计好了一个品牌印象，并讲了一个说得通又让人记得住的故事，让人记住了这个品牌。这并不是什么设计问题，这是一个营销问题。无印良品后面讲了环保概念、日本传统文化、去欲望回归平和心态等等故事，在我看来全是编故事，“便宜是有原因的”才是最初无印良品可以立足的真正原因。&emsp;&emsp;但是随后在1999年到2001年期间，无良印品的销量情况急转直下，出现了有史以来的第一次亏损。最初的品牌理念遇到的极大的挑战，严重动摇的创作团队和忠实客户的信心。在经济全球化时代，无印良品没有顺应“代工厂移到用人成本低的不发达国家”这个潮流，而且随着工业时代的推进，不染色的原材料甚至比染色的原材料更贵，导致无印良品的“低价”优势不复存在造成的。“又便宜又好”这个故事，已经不再成立了。&emsp;&emsp;这时候无良印品不得不放弃走低端路线，只有走高端路线这种附加值高的路线，公司才能持续活下去。那么无良印品如何从一个偏激度走到另一偏激度的呢？既要卖的贵，还要不专注品类什么都做，还要不花心思在包装上，同时让用户花大价钱买个看似平淡无奇的东西。这时无良印品讲起了环保、消除欲望、简约而不简单、日本文化之美。不得不说，这次即时的调整改进了公司定位，给了公司后续持续发展的动力。今时今日，无印良品已经华丽地由“又便宜又好的”低端市场，杀向了“大谈价值观，高价得有理”的高端市场，完成了转型，虽然从产品设计上还是遵循他一贯的理念，但是传递的价值观已经变了，在这个过程中，营销定位功不可没。&emsp;&emsp;无良印品改走高端策略，它支撑自己高价策略的资本是什么？它其实和LV、耐克的高端路线不一样，它不能放弃原生态无装饰的特色，但这又和高价冲突。既然你平平无奇，消费者为什么要为你买单？所以一方面无印良品高打价值观输出这张牌，另一方面也在试探价格定在什么价位可以达到用户愿意买单的门槛？&emsp;&emsp;前面讲到过，无印良品的一大特点就是不做出格的设计，只做看似普通的简洁的产品。在日本本土，因为传统的审美观念里就有以朴素为美的基因，所以日本本土的接受度还可以，但如果要做全球化，其他国家的人能接受这种审美吗？特别是价格还卖那么贵？无印良品是如何处理的呢？积极参加一些设计展，推广日本文化，筹备自己的酒店，尽可能将自己的产品理念向外界宣传。&emsp;&emsp;这一点确实佩服日本人，日本人很好地解释了“越是民族的，越是世界的”这句话。不追求外界的流行，坚守自己的传统的文化，最大化地宣扬和输出自己的传统文化。我不跟从你，我突出自己的个性，让你来接受我的差异化理念。&emsp;&emsp;关于无良印品逆袭之路就聊到这。可能中国人的中庸之道，导致国人骨子里总是想柔和各方，这种处世之道在处理某些事情可能有优势，某些情况反而是劣势，我个人认为品牌就是偏激策略的成功。你不可能迎合所有人，你需要有选择懂得放弃，降低你迎合的难度，找准自己的定位发现自己真正的用户，然后采取针对性的策略。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>杂说</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[血酬史观]]></title>
    <url>%2F2018%2F10%2F13%2F%E8%A1%80%E9%85%AC%E5%8F%B2%E8%A7%82%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;在我们以往的历史观中，人类经历了原始社会、奴隶社会、封建社会、资本主义社会、以及社会主义这几个阶段，这都是教科书教给我们的东西。生产力和生产关系的矛盾推动社会从原始社会到奴隶社会，再到封建社会的变迁，这原本是西方马克思唯物历史观的一套历史分析框架。中国人生搬硬套用这套理论来解释中国历史往往会和我们的常识不符合，因为中国没有经历奴隶社会也没有经历资本主义社会。直到大学期间看到吴思的潜规则和血酬史观的相关东西，用这些理论来解释中国历史和社会变迁更符合历史史实，今天就聊聊这一话题。&emsp;&emsp;社会上我们经常听到一种黑话，叫这个人血旺给他放点血，或者我今天出血了。血本身包含着强迫暴力的意思在里面，血酬史观讲的就是通过暴力获得收益来解释历史的一种分析框架，包含着暴力集团和生产集团相互妥协推动着社会制度演化（请注意我用的是演化不是进步），这和生产力与生产关系的理论完全不是一回事。暴力掠夺不创造财富，但暴力跟生产发生了一种关系，这个关系是什么样的关系呢？美国经济学家拉夫尔给总统讲税收的原理，税率和税收总额的关系，被称为拉弗曲线。这条曲线就描绘了暴力集团和生产集团的关系。当暴力集团无限制抢劫生产集团时，超过拉弗曲线的临界值就会导致生产集团和暴力集团的激烈冲突，甚至严重到改朝换代。 拉弗曲线描绘了政府的税收收入与税率之间的关系，当税率在一定的限度以下时，提高税率能增加政府税收收入，但超过这一限度时，再提高税率反而导致政府税收收入减少。 &emsp;&emsp;交代了前面的一些背景，下面从两个历史故事开始：&emsp;&emsp;清朝有个黑彝人叫刘宇青，他在1877年写了一封信，告诉自己的子孙万代将来怎么搞好生产。&emsp;&emsp;彝族社会有三个阶层，最高层的贵族叫黑彝，他们说自己的骨头是黑的，打起仗里英勇无畏。第二层是贫民百姓，跟我们一样，是凡人，骨头是白骨，叫白彝，他们要给黑彝贵族纳税。黑彝带着白彝去打仗，到汉族抢来奴隶叫娃子，就是第三层，外面耕地的一般叫做娃子。&emsp;&emsp;刘宇青说，他的祖先在明万历年间有好几百个娃子，但是这帮奴隶偷懒不干活，下地干活出力不勤，打猎不中，还总偷吃偷喝。最后到年底，发现他们种地、狩猎收获的东西还不够他们自己吃的。&emsp;&emsp;奴隶制闹到这个份上就成了赔本的买卖。所以刘宇青的祖先开始改革。他们把所有的土地分作两半，一半自己留着，另外一半分给所有的娃子，鼓励他们安家立业。原来是集体宿舍，现在全村到处都可以住，最好都成家，一家给一点地，没有农具再分点农具，但是每次种自己的地之前要先把贵族的地种了，收割庄稼之前先把贵族的庄稼给收了，得先公后私。这就有点类似西周历史上的“井田制”。&emsp;&emsp;这个制度带来了巨大的收益，现在一半土地的收益能顶上过去全部土地的收益。这就是过去制度的优越性和大包干的优越性。但是很快这个收益开始下降。&emsp;&emsp;又过了一百年，当年享受政策恩惠的那批人都过世了，他们的子孙觉得天生就应该这样，于是在主人家地里干活偷懒，好好种自己的自留地，不好好种公家的土地。&emsp;&emsp;所以就又改革，把所有的公田全分了，以后收50%的地租。把集体的地分田单干，弱者取得了明显的收益，地主省心了，不用去催他们干活了，收益就来了。&emsp;&emsp;在1913年，四川省广汉县，其境内有一条川陕大道。有五拨土匪经常在这条道上抢来抢去，所以很快就没人走这条路了。没有人可以抢，土匪就没饭吃，这样不行。所以他们就聚在一起商量，达成了一个协议：把这条路分成五段，比如一共100里，那就每帮土匪20里。大家可以收费，但是不能把人给抢完了。所以，土匪们就建立了一个个“收费站”，还定了个收费标准：空手客五毛钱，包袱客、小商小贩一块钱。当时一个现大洋，大约相当于现在30多块人民币的购买力。并且土匪们承诺，保证过路客在他们“管理”的那段路上的安全，绝不会再有第二次收费，也绝不会有别的土匪来抢。&emsp;&emsp;这个承诺大家都遵守吗？大家都遵守的，因为他们要是不遵守，下一拨土匪就绝对不会客气：你们都抢完了，到我这儿就没了。就这样，收费标准有了，规矩有了，渐渐地行人也有了，土匪们也有了固定的收入，于是川陕大道上建立起了一种秩序。这种秩序被称为“匪秩序”。匪秩序让土匪们尝到了甜头，所以很快这个规矩就向广汉全境扩展，然后就变成到处都是土匪，到处都是抢劫的，就没人种田了，所以农业一片凋敝。没有人种田，大家就没吃的了，肯定不行。怎么办呢？土匪们开始“招商引资”，让大家都回来种地，保证不抢，但是得收点保护费，比如一亩地一斗米。当时四川盆地的粮食亩产大概是200斤，也就是两担，一斗是5%，相当于税率是5%。而且土匪们还承诺：别的土匪来了，我们替你打走；有人重复收费，我们也严肃处理。当时真的就有小土匪敲诈勒索，土匪头子就找到这个人，直接就枪毙了。就这样，广汉境内又建立起了一个新的秩序，然后渐渐有了人烟，有了生产，土匪也过上了好生活。&emsp;&emsp;从这两个故事，我们能引出什么？&emsp;&emsp;第一个问题是：暴力集团（土匪或者贵族）叫什么？暴力集团的收入叫什么？&emsp;&emsp;暴力集团的收入是通过暴力掠夺的收入，叫血酬。但是后来人家立了规矩了，也守规矩了，那还是血酬吗？吴思老师把它称为法酬。法酬是血酬的升级版。&emsp;&emsp;1913年的时候，天下未乱蜀先乱，四川军阀混战。一个军阀占了一块地盘后就开始征税。如果上个军阀已经把今年的、明年的都征了，怎么办？就再往下征。所以1917年的时候，军阀的税已经征到了2011年。请问这到底是土匪还是官府？你看土匪只收5%的税率。所以，那时候土匪和政府的边界变得越来越模糊。他们吃的都是法酬，拿的都是暴力掠夺的收入。但是吃多久、吃多狠，这就决定了他们是匪还是官。他们的身份应该是由此来决定的，而不能光看他们的头衔。&emsp;&emsp;第二个问题是，暴力集团都是按什么规矩来办事的？&emsp;&emsp;暴力集团他们都要争取利益的最大化。如果他们得到的太多，就会导致奴隶不干活，农民和行人就绕道了，暴力集团就获得不了收益。从这些行为中，吴思老师发现了一个定律，称之为“生存策略选择定律”，就是当某种生存策略给你带来的收益大于成本时，你就会选择一条收益更高，甚至可能是卖命的路上去。这样身份就发生了转换。此外，吴思老师还在拉弗曲线的基础上，提出了最佳抢劫率的概念，由暴力集团内外关系的演变分析政治制度的变迁。&emsp;&emsp;血酬史观下的中国制度变迁,如果用血酬史观来解释中国历史的变迁，则那些在传统历史观中的争论会得到很好的解答。&emsp;&emsp;暴力产生了部落,部落出现之前，原始人类的基本生活状态是以家庭（家族）为核心的采集和狩猎。为什么会出现部落？用采集狩猎的需要、用生产力和生产关系解释不了部落的产生。那些从事采集和狩猎的人每天从事几个小时的劳动就足以果腹，大猩猩吃饱了就晒太阳抓虱子了，不会形成更大的部落。部落不是生产发展的需要，不是畜牧和狩猎的需要，而是暴力竞争的产物。中国文明史的开端，就是炎帝部落和黄帝部落的战争和联盟，部落之间的对抗就是用暴力争抢地盘。&emsp;&emsp;暴力制造了奴隶制,部落之间的战争和联盟形成了更大和更强的部落，暴力组织的控制能力超过了一个普通人的逃亡能力，那些被抓住的战俘或者掳掠来的劳动力就被强迫劳动，成为奴隶。奴隶制来源于暴力对抗和暴力组织的发展，来源于榨取剩余能力的提高，而不是提供剩余能力的提高。奴隶制不是生产力发展的结果，而是暴力发达的结果，是暴力组织发育的结果。&emsp;&emsp;封建制度也不是生产力发展的结果，农耕时代的生产力在过去2000多年来没什么大的变化。封建制度是利用亲属组织的一种暴力分配和组织机制。它根据暴力服务的能力来分配土地、生产资料和其他资源。封建制解决了一个自卫的问题，但却导致战争不断，周朝到春秋战国时期一直是战祸延绵。因为在封建制度下，打仗是有利可图的。历史记载，每逢发动战争，秦国人就在咸阳欢呼雀跃，因为他们可以有机会通过战争获得土地和财产。在战争结果的分配中，暴力集团首领获得的比例最高，更激发了诸侯发动战争的动力。&emsp;&emsp;作为一种理论框架,“血酬史观”是从暴力的角度对历史演进做出一种解释，它和唯物史观并不冲突。一旦生产集团的首领资本家主控制了军队和国家机器，暴力集团就变成了资本家的保安和守夜人，这个社会就变成了资本主义。在资本主义社会，历史唯物主义就开始有效了，生产力能够决定生产关系，经济基础开始决定上层建筑。但唯物史观的局限性也很快凸显。资本家的剥削导致了工人运动的产生，工人可以投票，工会也可以控制选票了，也能当家作主，那就不是资本家一个人当家作主，历史进入民主时代，这个时候自由史观就开始超出唯物史观。&emsp;&emsp;血酬史观就聊到这。从初中开始学习历史，我个人感觉历史教科书就是一本历史杂志，让人记住一堆历史事件历史人物，到现在很多东西都忘记了。没有教一个贯穿其中的历史逻辑，就是简单的往历史唯物主义里面套，然后还用这套东西考试，我是觉得我们所受的历史教育是很失败的。学不到任何以史为鉴的智慧，其实历史可以很有趣，就像当年明月写的明朝那些事儿，历史不仅有王侯将相，更有家长里短，还有作者个人的评价，你能学到很多历史人物身上表现出来的人生智慧。不过还好，历史不像数学有年龄限制，随着年纪增大，同样的历史事件个人的解读会更丰富更深刻。]]></content>
      <categories>
        <category>历史</category>
      </categories>
      <tags>
        <tag>历史</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[技术人35岁的隐忧]]></title>
    <url>%2F2018%2F10%2F08%2F%E6%8A%80%E6%9C%AF%E4%BA%BA35%E5%B2%81%E7%9A%84%E9%9A%90%E5%BF%A7%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;每周一篇博客，因为国庆回武汉看望老婆小孩，所以耽误了。原定是要发一篇有关历史的博文，只能这周末再发了。这次回家待了7天，今天第一天上班，效率不是很高，早早下班就回家了，因为有心事，正如标题所言我如今也到了这个坎。&emsp;&emsp;本科毕业十年了，上海我始终没有安下家，没能给老婆小孩一个好的物质条件，只能退居二线到老家的省会城市安家。我也是沪漂近十年了，直到去年还是和老婆一起在上海打拼，如今只剩我孤身一人，小孩和老婆成了留守妇女和儿童了。我也不知道我在上海到底在坚守什么？人最怕就是迷失自我。&emsp;&emsp;虽然现在对比7年前，我不用租房子了，住在自己的远破小房子里，再也不用担心房东找茬了，但是和我研究生同学对比，他们都住上千万的房子，和老婆小孩在一起，工作和家庭都能兼顾，而我就是处在底层的平民窟，每次想到这我就不能放弃自己，得逼着自己拼到40岁，实在不行就回武汉。这就是一场赌博，我赔上的是我与家人相聚和参与小孩成长的时光。我希望她们能来上海生活，虽然目前上海还安不下我的灵魂和肉身，但是我骨子里还是喜欢上海的氛围，毕竟我在上海已经生活了十年多了，很多东西都习惯了。&emsp;&emsp;因为每天上班坐地铁一个多小时里看了不少公众号，一个技术人的中年危机时常会让我焦虑。以前我倒没觉得技术人年龄还是一个问题，今年差点从公司离职我是深深体会到了。年龄大了会少了很多年少时的轻狂，意味着失去了更多尝试的勇气，却多了很多世俗的牵绊，很多时候会越来越身不由己，慢慢会让自己变的封闭。&emsp;&emsp;毕业前几年我每天都很充实，现在很久都没有这种感觉了。有太多事情做，时间也不够用，却不知道从何入手，失去目标更是远离了梦想，现在感觉越来越失去自我了，要做回自己太难。我也到了羡慕年轻的年纪了，年轻随时可以说走就走说不干就不干，而中年人不行，有时候你不得不咬紧牙关硬挺。自从老婆回武汉以后，我书读的越来越少了，内心的进步越来越不明显，反而岁月的印记在脸上不断加深。去年一年多整个人都不太好，工作中常常在妥协中徘徊廷难受的，人性的不完美在我心中不断放大，充斥了很多负能量，也颠覆了我很多已有的观念。&emsp;&emsp;过去我一直天真的以为只要努力就会得到认可，就会得到想要的结果，过去一年多的现实彻底击穿了我的心灵。曾经选择来公司，是因为激情，是希望和一帮优秀的人真正做成一件我没有尝试过的事。我对新鲜的事物一直抱有极大的好奇心，总是充满激情地大胆尝试，却在挫折面前撞得头破血流，所有的理想都变成了幻想，一切都变得有些陌生了，难道一开始就错了吗？&emsp;&emsp;转岗有一段时间了，我还有半年的过渡期。夜深人静的时候，我才能感到释放和宁静，不再有胡思乱想的焦虑，剩下的就是所谓的“深思熟虑”。曾今的梦想都变成了遥不可及的记忆，都不敢轻易触碰，只能小心翼翼的闪过。&emsp;&emsp;现实总是让人们又爱又恨，我们需要一个无比强大的内心来适应这个现实，现实可以让我们一次次跌倒，我们只需要+1次爬起来继续努力。生容易，活容易，生活不容易，和与我一样在上海努力奋斗的沪漂们共勉吧！]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>杂说</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基于规则的风控系统]]></title>
    <url>%2F2018%2F09%2F29%2F%E5%9F%BA%E4%BA%8E%E8%A7%84%E5%88%99%E7%9A%84%E9%A3%8E%E6%8E%A7%E7%B3%BB%E7%BB%9F%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;转岗到平研创新Team一直在忙于风险系统的优化升级。上一次聊到对系统问题如何解决的方法论，这次碰到的就是这类问题，因为不是简单的线性问题，所以不能通过优化一个单点解决问题。今天就聊聊这一个多月忙的事情。&emsp;&emsp;当前互联网企业存在很多风险，特别是金融行业，一直被羊毛党，刷单党光顾。比如像一些账号问题，由于用户的使用习惯，会在各个站点注册账号使用相同的用户名和密码，这就给了黑产份子可乘之机。他们会找相对比较小安全防护不严的网站利用SQL注入或者其他漏洞进行拖库，获取用户的账号信息，然后对密码进行清洗，俗称洗库，最后拿到用户登录账号明文信息到一些知名网站去试，俗称撞库，这有可能对用户造成损失。&emsp;&emsp;由于以上一些问题的存在，要面对互联网上的实时攻击。风控系统需要解决如下问题： 哪些业务是有风险的，注册、登录、交易、活动等等，这需要业务方埋点传入合适的参数。 什么事件是有风险的，这需要用到统计学，对异常用户的历史数据做统计分析，找出异于正常用户的特征。 实时性，而且对风险事件必须是毫秒级的响应，有些场景需要尽快拦截，及时给用户挽回损失。 低误报，需要人工风控经验，对各种场景的风险阈值和评分设置，需要长期不断的调整。 支持对历史数据的回溯，能够发现以前的未发现的风险，对现有的策略设定提供参考。 &emsp;&emsp;公司现有的风控系统架构如下所示：&emsp;&emsp;整个系统是一个单体结构，外部系统直接通过接口调用得到实时的风险等级标识，然后业务系统根据风险等级标识采取相应的措施，比如验证码或者拒绝阻塞。接口需要传入策略名称，策略是规则引擎定义的模型对应一组规则，每个规则都对应一组指标。风控系统的核心就是规则引擎，一个好的规则引擎可以方便业务方随时变更验证逻辑而不用重启服务。既要保证服务的稳定又要不失灵活性。规则引擎我们是采用执行groovy脚本，可以灵活变更规则逻辑。这需要对领域模型进行抽象，目前抽象出了策略、规则和指标关系如下图所示：&emsp;&emsp;可以把策略理解成规则集合，策略是最终判别风险的依据。系统根据所有规则的分值汇总得到总和，总和越大说明风险等级越高。规则就是需要执行的脚本逻辑，会查询指标然后和阈值比对，如果大于阈值就返回相应的分值。对业务方而言只需要关心策略配置和阈值等级设定，脚本逻辑不需要关心。脚本逻辑是应对各种场景的关键，里面有一些逻辑处理，需要查询存储数据库查找对应指标值和历史数据。&emsp;&emsp;业务方在接入时首先传入策略名称，这是风控系统定位规则集合的唯一标识，拿到规则集合后会执行相应的规则脚本汇总分值，再根据业务方在后台系统配置的等级规则判别相应的等级，最后返回给业务方，业务方拿到风险等级后再去做一些风险处理。整个过程不是很复杂，但是因为是单体结构，很多代码逻辑耦合在一起，难于维护而且也不好改进。因为一旦涉及到改动就会影响原有逻辑，总结一下目前系统架构有如下不足： 只有统计规则和静态规则，像一些行为规则和关联规则支持不了。 规则阈值和风险等级的设定没有客观评价指标。 系统功能耦合在一起，数据采集、限流和指标计算都在一个接口中。 没有充分利用缓存，仅仅把缓存当配置中心使用。 接入场景单一，只支持同步接入同步处理风险。 &emsp;&emsp;以上是目前系统痛点，更关键的是如果单纯的从系统层面优化没有多大意义。因为对业务方来说是想要需要知道策略的实际效果，进行风险识别时是否影响到了用户体验，是否预防到了真正风险，这些都没有一个离线分析的指标做参考。所以下图所示的一个反馈闭环很重要：&emsp;&emsp;一般来说业务方在接入风控系统时需要先配置策略规则，然后设定每个规则对应的阈值和分值等级，完了就可以应用上线观测实际预测的效果，实际的预测结果只能依赖离线分析，可能需要对用户历史操作轨迹进行分析，如果预测结果拦截的都是正常操作的用户，这时可能就需要调整阈值。有了这个闭环就知道接下来需要做的事情了，后面所有的架构都是围绕这个闭环来进行。经过重新梳理后架构图如下：&emsp;&emsp;新架构对原有逻辑功能进行了拆分。接入层主要是进行数据格式检查和信息丰富，比如ip地址可能需要转化为地区城市，浏览器类型需要打标识，然后将数据落地写入kafka，以便接下来的离线分析和回溯。核心层就是规则同步和策略匹配，这块是比较核心的东西，会随着业务变化架构层面不直接对接业务，所以下沉在接入层后面，接入层对外是不可变的。数据落地后有实时Job进行一些指标分析入库，这样用户在设定指标阈值时可以根据历史数据参考，比如同一个ip最近7天登录次数，这个次数阈值可以基于历史用户来设定，这样业务方在设定阈值时也有一个预期大概会拦截多少用户，多少用户会受影响。接入方式可以有同步和异步，同步需要实时响应用户告诉用户风险等级。异步就是用户发来数据就完事了，后台的实时job会读取kafka的数据利用CEP模型的esper框架进行风险预测然后采取相应的动作。&emsp;&emsp;在功能层面也会更丰富一些，老的架构是直接写入druid，指标分析是实时去查druid的数据做汇总统计。这样做的好处就是实现简单，但性能随着调用量增多会下降，如果能事先把一些指标计算好，使用时直接来查不用做实时计算性能会提升很大。同时加强了后台管理的能力，用户和管理员各自关注不同领域。&emsp;&emsp;开发者也就是管理员会根据业务需求编写规则脚本，然后业务方再配置这些规则脚本的阈值和分值。规则方面可以支持四种： 静态规则基于某个静态值的限制性规则，比如三元验证一致、是否命中黑名单、常用联系人验证、电信服务使用地理范围验证等 统计规则用统计计算的值来作为验证的条件，如来自某个设备或者IP的申请次数大于某个值 关联规则指用户在进行了某个操作之后，又执行另外一个操作，带来的风险。例如，修改账号密码后，进行交易操作 行为规则指用户的异常行为，例如用户在常驻地址或者某个特殊的时间如深夜，进行了交易操作，一般也认为具备一定的风险 &emsp;&emsp;风控系统实际是包含两部分内容，一是识别风险，二是对识别后的风险或是自动的或是人工的进行处理。后台系统增加了惩罚管理，相对于原先风险处理硬编码在业务逻辑中，惩罚管理可以做到配置化的分级处理，当然响应可能没有以前及时，但也是近实时的。整体流程如下所示。&emsp;&emsp;以上就是最近一段时间梳理的风控系统架构。目前只是对原有的逻辑进行拆分，为后期离线分析打下基础。后期会利用elasticsearch做一个超级cube的指标系统，参考平安spark+hive+es的方案，对用户历史行为轨迹做不同维度的分析。让业务方对用户更了解，逐步形成数据驱动风险策略的设定。]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>风控</tag>
        <tag>规则引擎</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[从线性思维到系统思维]]></title>
    <url>%2F2018%2F09%2F22%2F%E4%BB%8E%E7%BA%BF%E6%80%A7%E6%80%9D%E7%BB%B4%E5%88%B0%E7%B3%BB%E7%BB%9F%E6%80%9D%E7%BB%B4%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;最近从公司内部转岗到平台研发部，到现在已经有一个多月了。这一个多月一直在规划重构现有的风控系统，目前已经完成了第一期规划架构，正在coding阶段。得益于以前学到的系统思维理论，所以做这件事对我来说游刃有余，这期就聊聊这个理论，下期就聊我如何运用这个理论规划设计风控系统2.0的。&emsp;&emsp;现实生活中有些问题很严重，虽然严重，但是简单。比如你最近头疼到医院就诊，医生首先要你去做一堆检测，首先搞清楚你是病毒性感冒还是病菌性感冒，然后才能对症下药，如果严重可能还要住院。像这种有明确因果关系的问题就是简单问题，他们的共同点就是有一个“因”，只要解决了这个因，问题也就解决了。&emsp;&emsp;但是生活中除了这种简单的线性问题，有着明确因果关系外，还有着大量复杂问题，你很难定义明确的因果关系。前面我写过一篇博客谈论因果关系，有兴趣可以了解下前几期的文章。比如中国足球就是一个复杂问题，你要优化改革就不能简单的用线性思维来解决。比如你也知道，中国足球主教练，足协主席，裁判都换了个遍，可中国足球还是那样。像这种复杂问题是一个系统问题，不能简单的用线性思维来解决问题，你必须具有系统思维。&emsp;&emsp;好，既然说到系统思维，那什么是系统呢？所谓系统，就是一个由很多部分组成的整体，各个部分互相之间有联系，作为整体又有一个共同的目的。人的身体、学校、公司、国家，都是系统。系统有三个特征。 第一、系统里有各种元素，也就是各个部分。比如学校系统，其中有老师、有学生，有教室、有操场，这些元素是系统的组成部分。组成元素是一个系统最明显的东西，而也可能是最不重要的东西，因为它们常常是可替换的。正所谓铁打的营盘流水的兵，学生来了又走，老师、校长都可以换，而学校还是这个学校，系统还是这个系统。第二、系统中各个元素之间，有各种关系。这些关系可以是上下级的命令、谁和谁合作、谁向谁汇报，也可以是规则、物理定律。元素可以随时调换，但关系通常是不变的。所以真正要理解一个系统的运行机制，你就要了解它的关系结构。第三、系统还有一个功能，或者说是一个目的。比如学校的功能就是教育学生。系统的功能往往是不明显的，有时候表面上有个功能，实际上还有个功能。比如学校系统，表面上看，它的目的应该是教育学生；但实际上，它的目的也许是考试能力训练，或者纯粹是为了赚钱。 &emsp;&emsp;系统经常出现问题就是目标不明确，而且有时候组成系统的各个部分的目标和系统总目标是不一致的。要想系统良性运行，必须要把目标协调统一好才行。你解决优化任何一个部分都不能圆满解决问题。&emsp;&emsp;系统思维的反义词，是“线性思维”。所谓线性思维，就是简单明了的因果关系 —— 既然这有这么一个结果，就一定有一个原因，只要解决了原因就能解决问题。手机没电了，你去充电就行了。线性思维就是这么直来直去，适合我们一开头说的那些简单问题。不是说线性思维不行，而是线性思维有它适用的场合。&emsp;&emsp;那有什么标准区分是线性问题还是系统问题呢？系统论的专家认为，如果出现以下症状，那这个问题恐怕不是线性问题，而是系统问题： 看似是个小问题，但是要解决它却要耗费许多资源. 多次试图解决一个问题，却总是无效. 问题本来应该容易解决，可是人们故意不解决. 新人来了就发现问题，老人一笑了之. 类似的问题一再发生，整改了也没用…… &emsp;&emsp;面对系统问题，没有什么快速解决的办法，也不是投入更多资源就能解决。解决系统问题的出发点，是你得抓住两个关键点。&emsp;&emsp;一个概念是库存，也就是系统里面某种东西的保有量。库存可以是任何东西。比如夫妻感情系统，库存就是两个人共同积累了多少正面的感情。输入是互相之间亲密的表示，可以增加库存；输出是各种争吵和矛盾，会消耗情感库存。如果情感库存见底了，婚姻系统就很危险了。&emsp;&emsp;一个概念叫反馈回路，反馈回路分为两种，它们是库存和输入输出之间的关系机制。&emsp;&emsp;一种是正反馈回路，也叫自增强回路。所谓正反馈回路就是库存里的东西越多，输入就会越大，于是就会进一步增大库存。比如挣钱，就得靠正反馈回路。你的钱越多，投资产生的利润就越多；利润越多，你的钱又会进一步增多。投资 — 挣钱 — 投资，这就是一个正反馈回路。导致系统崩溃的往往也是某种正反馈回路。就比如夫妻关系，情感储备越少，看对方就越不顺眼；看对方越不顺眼就越容易发生冲突，结果就是情感储备进一步减少。这不是“正能量”，但是也是“正的”反馈 —— 因为有个叫愤怒的东西在增长。&emsp;&emsp;一种是负反馈回路，也叫平衡回路。负反馈不等于负能量 —— “负”的意思是“减少”。当库存太多了，负反馈回路负责减少库存。比如国家看谁太富了就多收他点税，看谁太穷了就给他发点钱，家里看老婆情绪不对就赶紧哄哄，这都是负反馈回路。负反馈总是让系统回到“正轨”上来。&emsp;&emsp;一个系统中可以有若干个正反馈和若干个负反馈回路。正反馈回路让系统或者增长、或者崩溃，是要偏离平衡；负反馈回路则尽力保持系统的平衡。&emsp;&emsp;对你想要解决的这个问题而言，可能就有一个回路，正在起主导的作用。如果你能发现在系统里起主导作用的回路是什么，你就抓住了系统的主要矛盾，你就找到了问题的关键所在。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>杂说</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[鲁迅先生北漂的一点感想]]></title>
    <url>%2F2018%2F09%2F15%2F%E9%B2%81%E8%BF%85%E5%85%88%E7%94%9F%E5%8C%97%E6%BC%82%E7%9A%84%E4%B8%80%E7%82%B9%E6%84%9F%E6%83%B3%2F</url>
    <content type="text"><![CDATA[前言&emsp;&emsp;学生时代受学校教育的影响，对鲁迅学习的比较多，对其辛辣的文字和深刻的社会批判十分喜欢。如今在社会上打拼多年，可能是职业关系，我不太喜欢只谈问题不给方案的处理方式。渐渐的对鲁迅看的就不多了，相反对胡适的思想越来越推崇，其少谈主义多研究问题的态度比较契合我现在的风格。今天不聊鲁迅的思想，是聊鲁迅的北漂经历。 正文&emsp;&emsp;鲁迅原本是一个书香门第，也算是官三代。怎奈时运不济家道中落，在鲁迅小时候因为祖父的案件吃了官司，家庭的突然变故，也让小时候的鲁迅体会到了世态炎凉，估计是受了不少白眼，对鲁迅的人格朔造特别明显，成年以后性格特别坚韧文字特别刻薄。他两个弟弟当时还小，可能没有感受鲁迅体会到的人情冷漠，也造成三兄弟性格迥异。&emsp;&emsp;因为童年的苦痛记忆，鲁迅小时候特别想出人头地，作为家中长子，必须当起这个家。在当时可能只有贫家子弟才去的学堂，鲁迅先生也去。甚至为了学费问题，去东渡日本留学。我们现在看东渡日本留学，可能是优秀的人才去，实际不是的。大部分都是家道中落，却想出人头地的那些家庭子弟才会去。但凡有条件的都不会去外国留学。&emsp;&emsp;鲁迅先生其实去日本也没有好好学习获得一个正经的文凭。他的文章写的藤野先生，介绍了一段弃医从文的经历，实际他的医学成绩并不突出。只是在日本翻译了几本文学著作和朋友合办了几本杂志，还都没有挣到钱。最后在留学经费花完的情况下，才不得不回国谋个差事，一是家庭也需要他供养，二来日本也没有出路。我接下来要说的就是回国后鲁迅先生北漂的经历。&emsp;&emsp;现在80后被高房价折腾的死去活来，年轻人要靠死工资在北上广一线城市买房简直太难太难了。鲁迅先生北漂也遇到这个坎。新任的教育部长蔡元培邀请同乡鲁迅共事，那个年代也没有说面试要文凭，凡是留过洋，即使是野鸡大学的，只要有朋友圈推荐都能获得一份差事。鲁迅先生就这样在老乡的推荐下，从浙江绍兴县城拎着个箱子来到大城市北京（当时他还是一个人民教师），就这样成为了一个光荣的科级公务员。&emsp;&emsp;基层公务员工资也不高，家里也没有多余的钱接济他，相反这个时候他还要供养家庭和在日本留学的弟弟。每个月发完薪水寄给家人，剩下留给自己的就不多了。没办法，他只能在砍头集散地菜市口找了个隔断间，开始了自己的租房生活。&emsp;&emsp;入住没多少天，他就后悔了。这个地方太脏了，蟑螂又大又黑，油光闪亮，一看就知道营养不错。最膈应的是床铺，一小时能逮30多只跳蚤。为了不被咬肿，鲁迅只能趴桌子上睡，第二天起床继续逮跳蚤。而且周围住的人也是鱼目混珠，各色人等都有。鲁迅被吵的神经衰弱，但是初来乍到，没钱换房，就这样鲁迅在这样的环境忍受生活了4年，你可以想象作为一个海外归国的高级知识分子的心理阴影。&emsp;&emsp;有一次房东说，隔壁有个名叫「补树书屋」的三居室，是个凶宅，院子槐树上吊死过人，白送都没人住。鲁迅听到这个消息乐坏了，不多日，他就迅速搬进去了。终于有个安静的地方能向往诗和远方，夫复何求。他还专门跑到小商品市场琉璃厂买下4幅画，3个小摆设，合计10个大洋。回家迎着夕阳，感觉自己终于过上中产阶级生活，满脸小确幸。&emsp;&emsp;新房唯一的缺点是猫叫太扰人，隔三差五的野猫调情，整晚闹得鲁迅睡不着，他抄起竹竿上去就打，但没过一会，几只野猫又浪回来了。好在凶宅风水不错，鲁迅的生活慢慢发生改变。&emsp;&emsp;在单位作为新来的外地人也不受待见，老油条们尸位素餐，什么事也不干，鲁迅无奈下只好在家里喝茶、写文章，当个「佛系青年」，时不时的给新青年投稿。就这样，在他北漂第6年，他原创的白话小说《狂人日记》发表，当即成为轰动一时的爆文，各大媒体疯狂转发。连北大的李大钊和胡适都夸赞鲁迅的才华。&emsp;&emsp;终于凶宅里默默码字的鲁迅，成为了北京城最著名的爆文大神，写一篇爆一篇，名气和稿费水涨船高，连北大学者钱玄同也来拜访。&emsp;&emsp;随着名气见涨，鲁迅大名在老家广为流传，家里人纷纷过来投靠。一大家子住三居室肯定不够，加上这时候他经济状况也有好转，人出名了来钱也快，他决定买一个大房子。为了找房，只懂学术的鲁迅开始研究房价。彼时北京作为准一线城市，房价低于上海、广州、天津、南京。鲁迅存款不多，想找个地段好、户型好的房子仍是费劲。从东五环到西五环来回折腾半年，看了30多套，总算相中什刹海西北一套二手四合院。这里临近北大沙滩红楼，文化气息浓郁，符合鲁迅高级知识分子身份。南北通透， 适合老人孩子居住。30多间屋子，足以住下一大家子外加保姆、厨子、司机。&emsp;&emsp;但房子总价3500大洋，拉黄包车的干30年也买不起。鲁迅托关系，找浙江兴业银行老乡贷了500大洋，卖了老家的房子，加上存款，总算全款买下。&emsp;&emsp;北漂第7年，房子搞定了，鲁迅以为以后一家人会幸福的生活在一起，特意安排2个弟弟住主卧，自己住次卧。谁知道2个弟妹的生活日常就是作，厨子刚端上一盘日料，她们死活要吃饺子。没事就去买奢侈品，刷爆鲁迅好几张信用卡。住进新家不满一年，就把自家弟弟从日本接过来。&emsp;&emsp;作，也就算了，最可怕的是家庭关系不和谐。鲁迅偶尔提醒几句，俩姑娘就能到自己老公那挑拨离间，一大家子鸡飞狗跳。纯种直男鲁迅根本应付不了，气得饭也不和他们吃，天天闷在小房里。没过多久，鲁迅受不了家里鸡毛蒜皮，搬出去租房。中途回家拿书，本想找二弟聊聊。结果周作人说他小家子气，跟女人计较，把鲁迅的书扔一地，还拿鲁迅的古玩砸他。鲁迅怒了，抄起瓷枕就反击。&emsp;&emsp;最终，鲁迅和弟弟全家绝交，带着母亲和童养媳净身出户。他在西四环的砖塔胡同租了个破开间，晚上睡觉连门都关不上，冬天把老婆冻得直哆嗦。只好找两个朋友各借400大洋在西二环阜成门的城中村，买了套小四合院。安顿好母亲和老婆，身无分文的鲁迅又背上800大洋的房贷，这钱他2年后离开北京也没还完。为了早日还款，鲁迅连着在北大和北师大教书，2份兼职加上正职工作让他在西单、北大、阜成门之间来回跑，每天少说3、4小时在路上。&emsp;&emsp;北漂14年，从30到44岁间鲁迅经历了租房、买房、还房贷各种辛酸。在他从县城教师变成新文化运动的开创者，思想先驱，背后就是一地鸡毛。 感想&emsp;&emsp;鲁迅先生北漂这段经历可以看出，先生的生活也不轻松。生活从来就不是轻松的，没有哪一代人是容易的，生活从来不是一件简单的事。现代社会相比鲁迅时代确实要先进很多，各种资讯也很发达，但是很容易就淹没在信息的海洋，你读不到真正的智慧。就比如我身处的P2P行业，我就真搞不懂那些借钱消费的都是些什么人？年轻本是挣钱的年纪，你可以挣多少花多少，量力而为，怎么还能借钱消费呢？人的欲望是无穷的。虽然现在财富的增长可以是指数级的，不像过去是线性增长，如果考虑人口比例，能享受财富指数级增长的毕竟是塔尖那部分少数人群。不过也没有什么好抱怨的，人类社会的演化法则就是这样。大部分可以大概率的预期自己将来不会有大的财富和阶层变化，认识到这点你就应该适时调整自己的行为方式，相反你能更容易获得幸福。而如果你报着不切实际的幻想，大概率你会很痛苦，当然你可以说你有梦想，会不会成功？当然会成功，但是成功毕竟是一个偶然事件。一个人一生能在晚年有一个幸福的家庭已经很了不起了，有时不必对自己过于苛刻。有位哲人曾经说过，人生不在你取得了多大的成功，而在于你经历了多少事情提升了多少维度。&emsp;&emsp;再拉回到现实，我身处P2P行业，我很清楚这行对小年轻意味着什么。当金融资本开始对屌丝阶层进行收割时，说明这个时代真的留给年轻人的机会不多。那这群花未来钱进行透资消费的小年轻，等到将来他们老的那天谁来养他们？难道像日本现在的年轻人一样做一个佛系青年，整个社会透着无欲望的下流氛围？这是我们80后90后未来必须要面对的一个社会问题。我是从农村走向城市，从小就有个根深蒂固的观念任何事情都有代价，你要想获得必须首先付出，这份付出还包含着未来不确定性的高风险。罗永浩曾经说过，年轻人就应该在年轻的时候把挣的钱花掉，不要年纪轻轻想着存钱，要相信未来会挣大钱。我对这句话也深表认同，前提是你是否准备好付出代价，你是否能像罗永浩一样足够牛逼。所以人合理认识自己很重要，这样你就能把握一个度的问题。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>杂说</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[足球透着的历史]]></title>
    <url>%2F2018%2F09%2F08%2F%E8%B6%B3%E7%90%83%E9%80%8F%E7%9D%80%E7%9A%84%E5%8E%86%E5%8F%B2%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;今年是2018年距离北京奥运会已经过去了十年。话说十年树木百年树人，中国足球如一块朽木一样一如既往的烂。中国足球进世界杯的时候，那时我还在读高中，至今已经十几年过去了。我也不是一个足球迷，今年俄罗斯的世界杯也只全程看完最后一场。说实话，现在世界杯足球越来越无趣了。 &emsp;&emsp;2018世界杯可以说是有史以来最无趣的一届杯赛。整个32支队基本分为两拨： 传控足球的膜拜者，不顾自身实际情况盲目追求传控，为了传球而传球，不仅丢了自身的特点，反而显得球队很沉闷无聊，例如德国、英国。 防守反击的功利打法，在自家禁区前重兵防守，防守层次繁复，移动速度快，抓住机会，依靠快速传球简练配合，给对方致命一击，例如法国。 &emsp;&emsp;上面说的都不是重点，欧洲依靠这些年不断研发、迭代升级原有打法，逐渐弱化了球星的作用。所以现在很难再出现马拉多纳和球王贝利这样一人雄起整个球队的巨星。&emsp;&emsp;传控足球打法名叫Tiki-Taka，最早始于荷兰足球，后被巴萨教父克鲁伊夫带到西班牙，经荷兰三剑客之一的里杰卡尔德发展，在瓜迪奥拉的手中发扬光大，最终帮助巴萨横扫欧洲，实现惊人的六连冠。&emsp;&emsp;防守反击不是过去那种游击打法，后场找一个大脚前锋，能不能偷袭成功全靠运气。现在的反击蕴含在防守的整个体系中，反击不再是单点联线碰运气，而是渗透进了西班牙的传控、意大利的集体快速推进、英超的前场直线突进等打法的精髓，多点配合，几秒之内射门，成功概率非常高。&emsp;&emsp;这两拨都是一个整体体系，是对过去足球战术的升级，建立在严谨的、理性的科学思维基础上。在这背后，运动员的饮食结构、训练方式、身体机能数据监控调节、康复机制、心理调节、对手数据分析等一系列后勤保障。这一项一项早已经过层层分析，建立起了非常高的技术壁垒，这种科学思维正是近代西方工业文明在全球竞争中的领先之道。&emsp;&emsp;正如亚洲、非洲两大洲唯一小组出线，打进16强的球队竟然是受限于身材劣势、从上到下一心想脱亚入欧的日本。事实上，八强打完以后，世界杯就变成欧洲杯了，欧洲包揽了四强，统治了足球。&emsp;&emsp;欧洲不是今天才控制足球。时间越接近现在，欧洲控制足球的优势越明显。未来，这种趋势会更加明显。以前人们一直有一个印象，就是以巴西、阿根廷、乌拉圭、哥伦比亚为代表的美洲球队，时不时在世界杯上战胜欧洲强队，而且巴西、阿根廷一直都是夺冠热门，好像足球就是美洲和欧洲两大集团对抗。但是其实一个隐蔽的事实是美洲足球也是欧洲足球的产品。为什么这么说？看看巴西、阿根廷乌拉圭国家队的球员构成，主力基本都是来自欧洲的五大联赛：意甲、西甲、德甲、法甲、英超。&emsp;&emsp;前几年，央视拍了《大国崛起》的纪录片，深入分析了荷兰、西班牙、葡萄牙、英国、法国、德国、意大利等国的崛起之路。我惊讶的发现榜单上都是当今世界第一流的足球强国。&emsp;&emsp;简而言之，足球是现实社会的滞后历史缩影。&emsp;&emsp;许多年来，中国足球成为全民调侃对象，始终没有人说清它背后的原因。被骂的最多的就是国足和足协主席。国足当然踢得差劲，足协主席也够无耻，但是站在大历史的角度，他们都是历史中的无辜个体。单就个人能力而言，历任足协主席其实也不错，如果他们去创业，成功的概率肯定高于大部分骂他们的人。&emsp;&emsp;还有人说人种问题，说黄种人不适合踢足球。这完全是胡说，在足球世界里，运动员的天赋固然重要，但不是最核心的。不然，拥有第一流运动天赋的非洲球队就不会被集体团灭，连亚洲都不如，而同样拥有14个非洲裔的法国队却夺冠了。&emsp;&emsp;究其原因，工业文明与后工业文明降维攻击的胜利。国足这些年搞得人神共愤，就是因为当代中国足球还处在封建社会末期，刚刚处于近代社会接触到了现代世界，但是离得很远。这种情况有点类似刚刚经历过鸦片战争，火烧圆明园、甲午战争的近代中国。&emsp;&emsp;上世纪90年代，中国和日本在面对西方力量的冲击下，面对现实的巨大差距决心变法图强。不过他们进行的不是明治维新也不是戊戌变法，而是足球的市场化改革。&emsp;&emsp;日本足球职业化改革几乎和中国同时进行，和中国一样同属菜鸟级别，由于身体力量速度等天赋不行，日本足球常常被中国足球虐菜。不同的是，1993年开始日本足球职业J联赛从正式推出就获得巨大成功，很快就成为亚洲最成功的职业联赛。日本足球也由此称雄亚洲，不久更是走向世界，自1998年后，日本每次都能入围世界杯，更是三次打进16强。&emsp;&emsp;而进行市场化改革后的中国足球是什么现状呢？除了2002年打进一次世界杯，一球未进，一分未得之外，再无入围记录。而且中国足球每况愈下，到后来连十强赛等外围赛都进不去，常常沦为叙利亚、科威特等亚洲二流足球的背景板。&emsp;&emsp;中国足球职业化市场化改革失败，日本职业化大获成功，正如19世纪差不多时间进行的明治维新、戊戌变法结局的翻版。当同为儒家文明体系的下的中日两国面对西方的冲击，日本明治维新导致了社会空前发展，先后在日俄战争中、甲午战争中打败对手，从此跻身世界强国。而中国戊戌变法则一地鸡毛。&emsp;&emsp;2004年亚洲杯在中国本土进行，中国队一路过关斩将，甚至将亚洲足球强国伊朗拉下马，眼看就要夺得第一座大赛冠军，却在决赛中遇到日本二队。正如甲午战争中依靠偷袭得手，决赛中，日本依靠一粒决定胜负的犯规手球偷袭成功，终止了中国足球的发展，中国足球从此每况愈下。&emsp;&emsp;同时起步，基础比日本好，为什么中国足球失败了？在大历史的眼里没有什么是偶然的。中国足球失败和戊戌变法的原因是一样的。&emsp;&emsp;由于权力崇拜的封建历史足够长，惯性缓冲力量足够大，中国任何的变法和革新都注定艰难而曲折，顽固的保守派绝对不会轻易放下手中的权力。足球领域的市场化改革就如张之洞、左宗棠、李鸿章的洋务运动一样注定是失败的。&emsp;&emsp;中国足球的罪魁祸首不只是足协这么简单，更根本的是牢牢抓住皇权不放的体育总局。1992年红山口会议之后，开始职业化市场化改革了，中国职业联赛就应该像日本J联赛、英超、德甲一样将主导权交给市场。&emsp;&emsp;但是，慈禧太后们不愿意了？这些年，牢牢抓住职业联赛市场化大权的太后们主要办了以下大事。 首先在精神上进行高尚诉求，仁义道德礼义廉耻。每次大赛失败，秉承体育总局意旨的足协一定会大谈爱国主义、艰苦奋斗。爱国这种精神，只能建立在尊重规律、科学的组织制度基础上，泛爱国主义的大刀长矛是打不过训练有素的坚船利炮的。 其次权力胡作非为。在联赛层面，各种神奇的指导意见层出不穷。在国家队层面，什么奥运球员组队打甲A，队委会负责制，赛前讲两句。。。总之是领导灵机一动，大腿一拍，伟大创意就出来了。搞到后来，竟然出现花钱才能进国家队，国家队双主教练的奇葩事。今天学巴西，明天学意大利，后天学英国，大后天学德国、西班牙，领导说啥就是啥。连日本足协主席川渊三郎都不耐烦了，说你们每一任主席都带队来考察学习，每次我们都跟你们讲了同样的东西，为什么要不停重复呢？ &emsp;&emsp;为什么？因为他们都不懂足球啊。&emsp;&emsp;看看历任足协主席都是如何从天而降的吧：阎世铎是体育总局办公厅主任出身、谢亚龙由体育总局电子信息中心转任（后被捕入狱，一起被判刑的还有足协副主席南勇、杨一民）、韦迪由汽摩中心转任、蔡振华由乒羽中心转任、张剑来自体育总局政策法规司……没有一个是足球专业的。&emsp;&emsp;权力说你行，你就是领导。至于你把中国足球领导到哪里去，那就听天由命吧，反正你只对领导负责就行。&emsp;&emsp;一个人不懂足球也不是完全不能领导足球。只要潜行学习，掌握科学，尊重规律，也能推动足球事业发展的。但悲剧的是，这些人往往刚摸清楚足球是怎么回事，就调走了，再调来一个新手重新学习，胡作非为再来一遍。&emsp;&emsp;最新的一任足协负责人杜兆才来自田径，据说他正在搞田径+足球混合选材制度。别人家的足球已经在科学的路上越走越远，连美洲都将被欧洲拉开差距，我们还在折腾中国特色的足球之路。&emsp;&emsp;鲁迅说拿来主义，别的领域不好说，足球领域一定是通行的道理。好的东西，拿来用就行，足球能有什么特色？别人已经探索了一百多年的东西，就真的不如你的特色高明？&emsp;&emsp;学习“胡服骑射”的赵国，不丢人。权力应该退出不属于它的地方，做好监督、调节、服务就好。要相信人民，人民有能力做好人民自己的事情。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>杂说</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[知的三座山]]></title>
    <url>%2F2018%2F09%2F02%2F%E7%9F%A5%E7%9A%84%E4%B8%89%E5%BA%A7%E5%B1%B1%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;今天聊一个关于知和认识的话题。说到这个话题，我们先从一段禅宗公案开始。&emsp;&emsp;宋代有过一个著名的禅宗公案，一位大师说，自己在悟道之前，看山是山，看水是水；悟道之后，看山不是山，看水不是水；但是到功力更深了之后，看山还是山，看水还是水。&emsp;&emsp;有过佛学经历的人对上面这段公案应该是再熟悉不过了。各家解释也各不相同，但是不管怎样都有点类似苏格拉底说的不经思考的人生是不值得过的意味。最初我们认识事物的时候，总是从表像去认识事物，等到认识深了总想搞清里面的原理，不能从表象认识事物，等到原理搞清楚了，回过头来看当时认识的事物，这时你会更深刻。对应到这段公案，大师在最初的看山是山，那是第一层山，从表象认识事物，等到大师悟道一定境界，意识到山不过是一大推石头堆起来的，这堆石头因为偶然的机缘而堆在一起，于是被称为山，山只是石头的集合体而已。如果这堆石头分散在世界各地，石头还是那些石头，但就不是那座山了。在这种情况下，你意识到山只不过是你对一堆这样的石头赋予的一种称谓，它是你赋予的。它不是实质性的存在，你到这层就到了见山不是山的境界了。这个时候你的世界是崩塌的，你还想继续深入。到更深一层境界，你终于认识到人的认知能力是有限的，人的理性也是有限的。人只能以这种方式去理解世界，尽管我所理解的世界它不是客观存在，也不是客观真实，甚至什么事客观存在，什么事客观真实都说不清。你在理会这层以后，你就见山还是山，见水还是水了。因为你已经意识到人只能以这种方式思考，不能脱离它之外去说事。这就是第三层山，你说出来还是山，但和你说第一层山的时候，意思已经极为不同了，&emsp;&emsp;上面的解释中，我们知道认识和知是有三座山，你只有看到第三座山才算真正悟道了。但是话又说回来，三座山的难度一座比一座大，特别是第二座山，你的世界观是崩溃的。这估计也是禅宗经常表现为各种顿悟公案的原因。就是你能悟道就悟道，不能悟道就拉倒，免得因为悟性不够搞乱自己的世界。&emsp;&emsp;其实西方哲学家柏拉图对这个问题也有一套说法。柏拉图在他的哲学里面提出过这样一个问题，他说“学习究竟是如何成为可能的？”。&emsp;&emsp;你学的是你已经知道的东西吗？不是。已经知道的东西你用不着学。那你学的是你不知道的东西吗？也不是。因为你不知道的东西，你都不知道你不知道，你不知道你不知道的时候，你根本就不会去学。而你已经知道的你也不会去学，那你要学的究竟是什么呢？你要学的实际上是，你知道你不知道的东西。只有你知道你不知道，你才有可能学。你不知道你不知道，你根本不可能学。那么，“你知道你不知道”这东西是哪来的？它不可能别人教给你，这不是别人教给你的，实际上是天赋的。就像我们骑自行车，刚开始你不会骑，保持不了平衡，也没有人教你一套保持平衡的方法，你上去骑就是了，你最终学会了会保持平衡了，但是你也不知道你是如何保持平衡的。如果你不反思的话，你甚至都意识不到你不知道。直到你反思，你才意识到你会保持平衡了，但确实你不知道你是如何保持平衡的。&emsp;&emsp;已经比较烧脑了，再举个例子。世界上有一种大马哈鱼，它每一到它成熟的季节，就是到它成熟的这种年龄，它就一定要洄游，要洄游到当初它出生的地方，回到那儿来产卵，产完卵就死了。等那卵孵出来之后，在蛋壳长一段儿，进入大海。然后等到它成熟的年龄，再回到它当初出生的地方。为啥一定要洄游？它自己不知道，我们也不知道。而且也不是它父母教它们的，因为它生出来的时候它父母已经死了。而且它究竟是如何找到洄游这地儿的，也都说不清楚。但是它就是非得洄游，而且它知道如何去找到它出生那地儿，但它说不清楚为啥一定要洄游，类似于这种的，都是属于你知道你不知道的东西。&emsp;&emsp;柏拉图说，只有这个东西，才是需要去学的。其它东西都是你不必学或者不可能学的。而这个你知道你不知道的东西，柏拉图称之为“天赋的理念”。这个天赋的理念，把它赋在人的精神世界里，赋在人的精神能力里面。人不知道它从哪来的，这是一方面。另一方面，它其中有一部分是语言可表达的。但其中还有一部分，甚至超出了语言的表达能力之外。&emsp;&emsp;比如把唐诗翻译为英文，当你用汉语读唐诗的时候，你能从语调和画面意境感受到唐诗的美。但是当用英文读唐诗时，你会觉得失去了什么？丢了什么你也说不清，但你明确的知道丢失了，你表达不出来，却能直接感受到它。&emsp;&emsp;柏拉图的老师苏格拉底被雅典公民大会判处死刑，说他败坏青年。因为苏格拉底在雅典城邦到处找人辩论，说你不要孝敬父母，如果不明白为什么要孝敬父母，你就去孝敬，此时根本不叫孝敬，直到你明白为什么要孝敬父母后，然后你再去孝敬，这时才叫真正的孝敬。&emsp;&emsp;实际上，苏格拉底的意思就是说，如果你盲目的孝敬父母，那就是第一层，“见山是山”。但是，你懂得“我不要盲目地去孝敬父母”的时候，就进到第二层了，见山就不是山了。因为我必须得懂得孝敬父母的意义是什么。但是你到了第二层不够，你还必须继续往前走，走到第三层，就是我终于搞明白，孝敬父母的意义是什么了，此时我再去孝敬父母，这才是真正的孝敬，就见山还是山了。你见到的还是山，但是山的意义完全不一样，那么在这种情况之下，就到了第三层山。&emsp;&emsp;但是，雅典公民大会最后把他给判处死刑，原因是什么呢？他告诉人们：第一层山是假的，你应该通过第二层山达到第三层山，但是能够达到第三层山的人需要很高的悟性，多一半人到不了。多一半人都只是，“哦，第一层山是假的，那我不进了”，到了第二层山，然后到这儿，打住了，他没能力往前走。于是在这种情况之下，人们全都不孝敬父母了，只有少数人有能力完成足够的反思，进入到第三层山，重新开始孝敬父母。&emsp;&emsp;柏拉图因为对老师的死耿耿于怀，后期写作中对民主是批判的，更是小心翼翼珍藏起自己的表达意图。以至于施特劳斯把他称为一种微言大义的隐微写作高手。什么意思？就是只有真正的高手才能读懂柏拉图，他给你的是三座山。如果你不是高手，你只能看到第一层山。表面上他说的是第一层山，其实他是想给你第三层山。如果你看不到也没有关系，你的世界观或者社会秩序不至于受到颠覆。而他想给出的真正的深刻的东西，也能给的出来。&emsp;&emsp;关于知的三座山聊到这，希望你能做一个看的见、看的明白、最后揣着明白装“糊涂”的人。]]></content>
      <categories>
        <category>哲学</category>
      </categories>
      <tags>
        <tag>哲学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[明朝党争]]></title>
    <url>%2F2018%2F08%2F26%2F%E6%98%8E%E6%9C%9D%E5%85%9A%E4%BA%89%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;最近房租事件和滴滴顺风车事件引发了社会关注，朋友圈也看了不少文章，不过大多都是情绪的发泄，于理性看待世界没有任何益处。我觉得任何朝代灭亡都是不可避免的，他们的本质其实都是一样，都是来自于既得利益者的无限利益膨胀，而挤压了其他几个阶层的利益，导致小部分群体的极度暴富，而大部分群体无立锥之地，阶层分化到最后一定是崩盘的节奏，中国历史二十几个朝代的灭亡本质都是这个。这些事件看似孤立，某种程度也反映了社会演化的方向。&emsp;&emsp;历史上中国都进行过变法改革，期望缓和社会矛盾，但实际上都无法解决。改革就意味着利益重新分配，指望从一个阶层出钱补贴另外一个阶层，最后的结果就是改革还没有开始就让既得利益阶层干掉。很多西方民主国家也面临这个问题，民主的本质就是形式上大部分掌握话语权的过程。西方国家陷入高福利社会的陷阱，其实也是底层利益阶层欲望不断膨胀供给却受到抑制无法增长（大家都不愿加班劳动，强调个人权利），这个时候，你让这些人的利益受损，人家立马就投票让你下台。这也是一个悖论，谁支持你，你必须回报他，否则就被干掉。&emsp;&emsp;有人说明朝亡于党争，这话对也不对，某种程度上对了一大半。明朝社会的知识分子中漫延着一股清流，所谓清流就是只知道每天一堆理想化的看上去各种好却总落不了地的建议，听不得任何人的批评，如果有人批评就各种使绊子。明朝的东林党带来的一系列党争直接改变了明朝的政治格局，不到六十年明朝就结束了，看上去是东林党搞死了明朝，本质上是东林党背后的既得利益群体目光短视害死了明朝政府。明朝最后一次改革是张居正，张非常强势，逼迫既得利益妥协，短暂维持了一段时间，但是人死政亡，立马被清算各种污蔑。&emsp;&emsp;这个就是过去的政治现实，有钱人不肯被利益侵害，文人被有钱人驱使按照有钱人的喜好来评价一个人的是非。绝大部分看到的东西，都是别人想让你看到的。前不久看到一篇文章，说如果张居正如果不死，明朝会不会灭亡？文章有一段话讲的特别好：他说地主不愿意给政府交税，所以政府没钱，也就无法对抗后金，迎接他们的命运最后只能是政府盘剥本来没钱的人来维持统治，而这帮人最后的结果必定是揭竿而起，直接把那些看不到未来舍不得出钱的有钱人搞死。&emsp;&emsp;魏忠贤当政的时候是天启帝，这个皇帝喜欢做木匠，所有事情基本都是安排魏忠贤在做。现在历史上写魏忠贤都不是好词语，魏忠贤总结下来就做了三件事： 第一件事情就是干掉东林党，他每天看到一帮不干正事，整天弹劾这个那个的人特别烦，弄了个东林党名录，给每个人编号，用三年时间，一个个弄死了。这个或许是魏忠贤是大奸臣的直接原因吧！ 第二件事情是大力收税，魏忠贤是农民出身，基本对农民没有加税，关键是农民也没钱加税，张居正改革的时候，大力发展工商业，他就对工商业大力征税，天启一朝光江南的茶叶税一项就20万两进账。相比崇祯皇帝10万都收不上来。 第三件事情关宁防线得以组建，孙承宗，袁崇焕，满桂，祖大寿得到重用，甚至魏忠贤以国事为重接受东林党推荐的熊廷弼。 &emsp;&emsp;天启帝五年，东林党被摒弃后，袁崇焕依然带兵打仗赢得了天启六年的宁锦大捷。天启三年三月，努尔哈赤率领大军攻陷沈阳后，又进攻辽阳，两军在城外部阵激战五日，明军战败，辽阳告陷，辽东经略袁应泰自刎而死。辽沈一失，谁继承袁应泰出任辽东经略成头等大事，各个党派也很重视，因为谁获得了辽东经略位置，就等于取得了军国大计的发言权。&emsp;&emsp;东林党人刘一燝、江秉谦等推荐熊廷弼，浙党一派则力挺张鹤鸣。朝廷还是同意了东林党人的推荐，重新启用熊廷弼。魏忠贤死后呢？魏忠贤死后，孙承宗被罢，袁崇焕被杀。尤其是袁崇焕被杀更是自毁长城。&emsp;&emsp;评价魏忠贤是忠是奸或是贤是恶很难确切的评论。最有发言权的是由天启和崇祯两兄弟回答，因为大明江山是朱家的。 朱由校病重时 “召见阁部、科道诸臣于乾清宫，谕以魏忠贤、王体乾忠贞可计大事”；临死时，让魏忠贤宣召朱由检入宫，“上病亟时，召皇弟信王入，谕以当为尧舜之君，再以善事中宫为托，及委用忠贤语。既崩，忠贤自出迎王入。”（《明史•宦官传》）。 &emsp;&emsp;天启帝临时嘱托崇祯皇帝是：魏忠贤“恪谨忠贞，可计大事”。这“恪谨忠贞，可计大事”八字是值得人们深思的。“恪谨忠贞”说明魏忠贤是忠于大明朝的，而且能以国家大计为重。&emsp;&emsp;崇祯皇帝自认为自己会比哥哥高明，能驾驭东林党这匹野马为己所用。所以一上台，立即“逐忠贤党，东林诸人复进用”。最后崇祯皇帝吃尽这帮人的苦头。东林党这帮人集中在一起，天天读书讨论天下大事，就是不做实事落地。执政的不干活，骂你昏庸，有钱骂你贪污，干活的骂你为了政绩残民以逞…..反正干越多错越多，干活不容易。然后还觉得自己很牛逼，加上这帮人学问好，骂人骂出水平骂出花样。&emsp;&emsp;天启帝开始的时候还是重用东林党人，受益于张居正的改革，还凑合过得去，并没有发生大规模民变，反倒是工商业冲击官府，没有看到农民反抗。也就是富裕的地方反倒有民变，贫穷的地方反倒还好。其实根源就是魏忠贤对工商业大规模征税，引起商人不满。这里说明的问题也很有意思，其实越有钱的人，他的钱越动不得，一动就闹事。越没钱的人，只要不让他真无路可走，反倒可以随便动。所以革命往往跟贫困无关，跟期望有关。动既得利益者群体的利益绝对比动无立锥之地群体的利益更难。崇祯皇帝登基之后面对的困境就是北部后金的侵扰，这个时候东林党人主要做的就是党争。东林党上台以后大部分用来干掉和自己意见不一致的，对辽东提出消极防御的策略，但是防御是需要军饷的，大概占明朝三分之二的财政收入。这边要花钱，那边还不允许皇帝与民争利，不对工商业征税，对农民加税，结果边患没有解决，内乱又起来了。&emsp;&emsp;民变一开始，天下开始混乱，给了后金乘虚而入的机会。魏忠贤还能以国事为重，不拘泥于党派意识形态，但是东林党不行，他们凡是不是自己派系的都极尽挖苦之能，丝毫不以国家为重，最终导致天启帝对东林党很失望，也给了魏忠贤灭掉东林党机会。东林党四处灭人的过程中，也迫使很多人自己建立起小团队对抗东林党，加剧了朝野对抗，纷纷以地域划分，宣党、浙党、楚党、齐党纷纷组织起来，联合起来对抗东林党,互相之间也顺便斗一下。&emsp;&emsp;历朝历代，只要党争一出现，正事就别干了！现在其实也一样，看看现在的台湾，那个民主的地方，两个党把一个小小的台湾搞成了什么地步了。不是说民主不好，也不是说独裁就好，全球民主体系下出现过很多牛逼的国家，当然也出现过很多很破败的国家，很大程度上这还是两件事，独裁不是好体制，但是许多阿拉伯地区，也一样能享受很好的石油红利，过着还不错的生活，新加坡也从来不是民主国家，一样可以靠着马六甲过着不错的日子，严苛峻法下的新加坡，也没人拿他体制说事，本质而言，民主和经济发展这是两件事，不是有了民主发展就更好，也不是独裁一定导致发展不好。&emsp;&emsp;明朝被党争搞得内忧外患，朱由校也就是天启帝，实在烦死了这帮人，就把魏忠贤给推出来灭了这些满口仁义道德不干事的文人。魏公公出政策收这些税吧，东林党不执行。魏忠贤这个人农民出身，反正阴谋诡计也不太会，就是简单粗暴的干干干，就基本上灭了这些人。然后自己派出太监去当税监，去全国收税。太监你能要求他们有多高的素质，肯定收税的时候中饱私囊，横征暴敛什么的免不了有一些。但是现实就是如果不是这几个太监收上了足够的税负，估计天启帝都撑不到崇祯当皇帝。后来好不容易崇祯当皇帝了，终于把魏忠贤干死了，东林党再次上位，结果上位后不吸取教训，第一件事情做啥呢，继续打压其他人，把不是东林党的人都称之为阉党，没小JJ的是阉党，有小JJ的也是阉党。这些人的德行就是说的都很好，做的都很差，所以崇祯皇帝也捉急，崇祯是明朝难得勤勉的一个皇帝，可能在勤劳上。除了朱元璋，朱棣就算他了。上台以后，在位十七年，换了五十个首辅。平均一年仨！一方面是崇祯皇帝多疑，另外一方面铁定也说明东林党的人没一个能用的，都是夸夸其谈的家伙。&emsp;&emsp;后来李自成兵围北京的时候了，国库亏空，崇祯向朝臣们借钱，个个都没有了。这些朝臣平时激昂高亢爱国，到国家需要他们奉献了，个个都没钱，是他们真没钱吗？不是。李自成一进京，从他们身上就收刮到七千万。他们是宁可国破，也不肯出钱。还有莫名其妙的优越感，也不看看现状，在各地流民大规模动乱开始的情况下，有人提出跟后金议和，腾出手来解决国内问题，结果东林党人一个个都叫嚣着天朝怎么可以跟蛮夷谈和，于是内讧不止，崇祯在这些人的扶持下，能成功就是见鬼了。李自成攻入北京的时候，崇祯帝撞钟，文武百官无一觐见的，而唯一一个陪在崇祯帝身边的人，只有一个太监王承恩。&emsp;&emsp;崇祯十七年三月十四日，也就是他煤山上吊自杀殉国前的第五天，崇祯在大势已去、大厦将倾的绝望中，在听到太监曹化淳说的那句“忠贤若在，时事必不至此”的话之后，终于领会到天启皇帝临终前，强调魏忠贤“恪谨忠贞，可计大事”的深意所在。幡然醒悟的同时，无力回天的崇祯在精神上彻底崩溃了，命人秘密将魏忠贤的遗骸收葬于香山碧云寺。收葬魏忠贤遗骸，既是他对魏忠贤价值和功绩的重新肯定，也是对自己17年执政生涯的全盘否定。&emsp;&emsp;明朝的烟雨就这么过去了，虽然没有一个朝代能永远的存在下去，但是大明朝的灭亡，更加的有些值得当下借鉴。往往道貌盎然的人更加注重的不是整体性的利益而是自我的小群体利益在他们眼里，国家可以灭亡，朝代可以更替，但是他们的话语权和身份地位并不会消失，谁当皇帝都一样。&emsp;&emsp;人的高尚和卑劣与文化程度无关，与受教育的程度也无关。从政治角度来看，其实高尚与卑劣没有什么根本的分别，只是在人们的一念之间。一位研究明史的学者，对这段历史有过一段很精辟的论说。他说：“把人分为君子小人本来是孔子一个不高明的发明，然而世界上的事就是这样奇妙，自从发明了君子小人的分野之后，士人果然就分成了君子与小人两个团体。儒学对士人的人格提出了不现实的要求。摆在士人面前的只有两条路：一条是极端道德主义，为了天理而活，灭绝人欲，整天把自己关在圣人之道的刻板模子里，活得战战兢兢，如履深渊，充满了悲壮；另一种则是极端现实主义，这种人承担不起崇高的生命目的，干脆就向身体里的自然欲望投降，既然没能力遵守过高的道德原则，干脆就不要任何原则，为了利益，不择任何手段。明朝士大夫争相标榜道德，崇尚气节，忠臣辈出，为历朝之最。然而，有明一代，士大夫中卸去所有道德负担，不要任何廉耻的人也比历朝为多。”]]></content>
      <categories>
        <category>历史</category>
      </categories>
      <tags>
        <tag>历史</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[为什么共产党能赢]]></title>
    <url>%2F2018%2F08%2F18%2F%E4%B8%BA%E4%BB%80%E4%B9%88%E5%85%B1%E4%BA%A7%E5%85%9A%E8%83%BD%E8%B5%A2%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;最近看了一些近代史方面的东西，琢磨着写点啥，偶然看到徐焰少将的著作《解放军为什么能赢》，顺便拜读了一下。关于党史无论是正史还是野史，我还是在大学入党时期系统学习过。不过那时阅历太浅，很容易被一些肤浅的民主自由的言论所蒙蔽，会遮蔽自己很多理性的判断。最近这些年在社会上打拼，才知道成功的不易。因此再反思中共党史，考虑到客观因素，共产党能取得现在的成绩真是不容易，今天就好好聊聊这一话题。&emsp;&emsp;先回到1921年，这一年中国共产党成立。其实从根上说，中国共产党还真不是受苏联十月革命的启发而建立的。列宁通过暴力夺取政权以后，要在全世界各地建立共产国际分部，支持世界各地的工人阶级运动，建立世界社会主义帝国，这个是要出钱的。建一个党可不是随便玩的，是要真金白银投入的，所以实际情况是当时南北陈独秀和李大钊相约建党是接受共产国际领导的，某种程度上充当了苏联在中国的代言人。最后李大钊死的罪名是俄国间谍，被握有真凭实据的奉系军阀张作霖处以绞刑。&emsp;&emsp;中国共产党的建立一波三折，本来在上海举行的中共一大被法租界巡捕搜查，会议被迫休会，最后不得不转到嘉兴的一个游船上举行。说起来很有意思，共产党的筹建者南陈北李都没有到会，而毛泽东却以最低资历的团员身份参与了共产党的成立，这届与会人员很多后来都叛变革命了，相反最低资历的毛泽东却开创共产党的腾飞，成为事实上中国共产党的缔造者。&emsp;&emsp;中国共产党建立以后仅仅是发一些传单，宣传工人工会，并没有实际掌握政权的举动。这时候中国面临军阀割据，整天都在打战，国家完全在内耗中毫无发展可言。孙中山领导的国民党这时考虑到共产党是一支可以利用的力量，这时两党开始了第一次国共合作，同时接受苏联人的帮助，开始建立黄埔军校，筹建两党自己的军事力量。按说国民党和共产党一样，也是一对难兄难弟，早期孙中山闹革命就是筹钱，依靠各省当地的革命势力推翻清王朝，但是这有个问题，这些当地的力量接受钱，却往往不听指挥。当时国民党只是一个名义组织，毫无统治力。这个时候孙中山开始考虑建立自己的军事力量，所以在黄埔军校建立后，等到力量差不多了，国共开始北伐，像北伐军里面有很多共产党和国民党的将领。&emsp;&emsp;在孙中山在世的时候，国共合作真的是一帮有理性有抱负的人想建立一个统一的现代化中国。谁知道孙中山一死，蒋介石通过非正常手段成为国民党的领导者。他去苏联一番考察发现列宁搞得那套完全有悖人伦，回国后开始筹划清党，导致了国共正式决裂。共产党秘密筹划在各地爆发起义，准备和国民党拼一把建立自己的红色政权。从这个时候开始，共产党被国民党逼着开始真正掌握自己的力量。&emsp;&emsp;建立自己的力量是要养着一支受自己领导的军队，当时却面临着世俗的障碍。中国历史上长期实行兵民隔绝制度，当兵吃粮只是一小部分人的专门职业，在“好男不当兵，好铁不打钉”观念的影响下，民众很少接触军事技术和训练，毫无战斗素养，且行动散漫，仓促组织起来，看上去人山人海，气势壮观，但实际上毫无战斗力。面对纪律严格、训练良好的正规军，根本不是对手，只会一触即溃。所以南昌起义失败以后，其实真的没死多少人，数万人的部队，最后到井冈山的不到千人，大部分中途就退出了。&emsp;&emsp;其实这个时候的国民党军队的情况也差不多，不过国民党的情况好点，国民党掌握政权，有自己的财政基础养自己的军队。共产党这时候不掌握政权，军队的军饷必须要自己想办法解决。秋收起义以后，毛泽东带领部队且战且退，士气低落，士兵不断逃亡。到了江西永新县，找到了一个群山环抱的小山沟，可以暂时摆脱敌人追击休息一下，这就是三湾村。在这里，毛泽东主持了军史上著名的“三湾改编”。这次的改编就是来解决这一个问题的。&emsp;&emsp;三湾改编这次行动让共军和国军有了本质的区别，共军也从此开始了脱胎换骨的蜕变。毛泽东的这次改编就是取消军饷，改为供给制，不发钱只发基本的吃穿，每人每天只有5分钱的伙食费。这样做减少了军队对资金的依赖，相当于节流压缩开支。同时也带来了另一个问题，不发军饷会不会像历史上出现军队哗变和溃散？关于这点毛泽东也想了很好的办法，首先，党支部建在连上，强化政治领导。第二就是实现军内政治民主。建立士兵委员会，军官不允许打骂士兵。第三实行经济民主，虽然没有军饷，伙食也差，但是伙食账公开，士兵参与管理，军官不可能再像过去那样吃空饷、喝兵血、中饱私囊。也正是这些在当时看来微不足道的举动，甚至有点冒险，却空前激发了士兵的热情，让士兵对部队有了很强的责任感，让共军和国军有了本质的不同。&emsp;&emsp;以上介绍了国民党逼着共产党完成了第一步组织上的创新。接下来等到日本人打进来，继续帮助共产党完成第二步蜕变。抗日战争开启了国共的第二次合作，虽然正面战场是国民党在抵抗，共军主要是敌后游击，但是真正有希望的是共军。为什么这么说呢？国军在抗日战争开始还没有完成事实上的统一，蒋介石的中央军只有江浙沪皖等数个省份，其它省份根本不受他控制。以前国军之间混战，都是散兵游勇式的群殴，根本不是正规军队之间的对抗。一支今天拥护中央，明天反对中央的军队，突然被组织起来，对抗一支强大的现代化军队。从来没见过这么多炮、从来没见过飞机坦克，而且从来没见过这么坚韧的对手。弟兄们想死守，不知道敌人从哪儿过来，弟兄们想防守，不知道怎么挖战壕（国内的战壕就是一条线），直到转进台湾，国军才知道，原来防线不是挖一条战壕就行，需要有纵深防御，要多条防线交替。在这种巨大的恐惧面前，当兵吃粮的人本能的开始想家了，在黑夜的撤退中，突然有军队冲过来，长官找不着，军队只好按照传统的内战模式，一哄而散。在这种情况，一个大队击溃一个师并不奇怪。所以我们可以看到，抗战胜利前夕的豫湘桂会战，国军丢失国土20多万平方公里，城池146座。日军缴获了大批美式机枪、火炮。这时起，国军的装备已经优于日军，但战术水平差的很远，战斗意志更糟。&emsp;&emsp;共军这时候是有理想的，士兵明白为何而战，而且总是处于劣势，所以明白撤退的目的，士气不会受到巨大打击。反观国军敌后游击的50w人，要么崩溃，要么投降。八路军彻底放弃了决战，把大战细化为了一系列数不胜数的细小战斗。面对这一点，日本的装备优势和训练优势就SB掉了。越是现代化的军队，分工越细，后勤兵越多，土八路在山沟里蹦，日军的大炮和坦克都2B了，快速机动也2B了，可以说，需要中佐以上官员协调的事情统统2B了。&emsp;&emsp;以时间、空间和人命做代价，八路军在与日本的战斗中锻炼起来了，低水平的战斗好像是高手在给低手喂招，八路军越打越好，虽然他们穷的没有子弹没有枪，他们的战术水平越来越高，唯一欠缺的是大兵团作战能力，他们还没这个资格，这一点是战术水平低下的国军帮八路成长起来。&emsp;&emsp;在敌后游击区，共产党如同一块粘瓜糖，最大的一股力量也不过几百人，建国后的十大元帅都是带着几百人在山里转来转去，不投降，不消停。 你不能指责他们游而不击，他们只要活下去，让日本人不敢撤兵，就是在消耗敌人的实力。拿什么打？山东军区偶尔缴获了一门九二步兵炮，只有3发炮弹。日本人疯狂的追，共军只好把它埋到土里。日本人后来又派汉奸谈判，提出用三挺重机枪和子弹换，共产党就是不答应。无他，有了这门炮，所有的炮楼都紧张，以往几千人攻不下的炮楼，现在感受到威胁了。&emsp;&emsp;河北的地雷战，鬼子踩上去，轰隆一声响，然后看到踩到地雷的鬼子哇哇大叫，全身漆黑——土法做 的黑火药太差了，唯一的办法是在地雷里放上狼毒和大粪，让他伤后感染而死！山东许世友的部队高级点，炸药还行，用的地雷是遥控引爆。也就是一个人藏在离道边 十米的距离，鬼子经过的时候，他手动拉线，一拉一炸，线露出来了。这个人就得赶快跑，那真是玩命。敢干两次的人，肯定记功提干。&emsp;&emsp;日本的步兵连排战术给粗糙的苏联人留下了很深的印象。尽管诺门坎打败日本，可苏联动了倾国之力，日本人以灵活的连排战术创下了两次战术性胜利，这是在缺少反坦克武器的情况下取得的。世界唯一能够在连排战术上克制日本的，只有共军。这是在搏杀中锻炼出来的技巧。共军还有一点好处，由于打惯了败仗，习惯自身的劣势，没有面子问题，说走就走。可日本人不行，你和土八路过招，竟然撤退了，你无能！这方面的典型就是阿部规秀，雁宿崖下，黄土岭上，一心报复的阿部规秀最终把自己也给搭进去了。&emsp;&emsp;1943年6月8日，习惯了东躲西藏的八路军在河北宋庄与日军遭遇，两个正规连对抗着二千五百拥有精良装备绝对优势的敌人。结果杀伤敌寇坂本旅团长以下官兵一千一百人之多，而自己只伤亡七十三人，战斗从白天到黑夜，整整坚持了十四个钟头，而最后胜利突围而出。网络上很多年轻的质疑者还在怀疑杀敌数字的准确性，尽管那个年代的八路很少有撒谎的习惯。放开数字不说，这场遭遇战说明了一个问题，八路军的连排战术，已经开始超越日军。其实，当时制约共军的因素已经不多了，共军正规军的战术水平可以进行一场野战了。从平型关的4:1到宋庄73：1000，这个变化是惊人的。共军被困扰的，一是缺少火炮以及压制敌方火炮的手段，导致部队的大规模机动受到限制，二是缺少组织大规模野战的能力，红军时代组织方面军作战的能力已经严重退化。这再次证明，能力不等同于知识和经验。同样，日军的野战能力也在没完没了的守炮楼的过程中退化掉了。步兵单兵战术是陆军的基础，是日本人最优秀的科目，日本人的精兵开始消磨殆尽，而中共已经在战火的磨砺中成长起来。步兵连排战术也是日本人的强项，可中共在这个科目上更加优秀，不优秀的已经死掉了。&emsp;&emsp;在胜利之后的国共内战，阎锡山至少留了五万日军帮他打内战，但不过是给共军造成一些小的困扰而已，这些日军留下的痕迹，是共军战史上说某某山头或某碉堡防守的特别顽强 —— 但是，我们还是把它打掉了。没有一支日军在战术战役中给共军形成大的威胁。共军的缺陷，全被国军帮忙补上了。战术能力低下的国军为共军送来了火炮和炮手，宽容的和共军一起演练大兵团作战，给了对方犯错的空间 —— 你不给空间也不可能，共军的步兵战术太优良了。万家岭会战，国军歼灭不了106师团，主要就是对方步兵战术优秀，共军此时比日本人更狠。三年演练、一年休整，当共军出现在朝鲜战场的时候，步兵正处于鼎盛时期。&emsp;&emsp;在新中国成立之时，因为国军的在抗战中的表现，世界几大国没人看得起中国军队。甚至连日本人也十分不服气，但是实际上这个时候共军的战斗力已经在日本之上了，共军经过八年抗战和内战的洗礼，已经完成了自身的蜕变。当志愿军出现在朝鲜战场的时候，美国都没有当一回事，因此在初期吃了大亏。这时开始了中美之间硬碰硬的对抗，共军开始向世界证明自己是一流军事强国。&emsp;&emsp;实际上朝鲜战争，中美是互相学习。志愿军的连排战术优良，尤其擅长迂回包抄和穿插。崇尚技术的美国人认为，战斗就是火力的对比与叠加，对后勤看的极重，当后勤线被切断而又无力恢复时，突围就成为第一选择。后来，美国人也学会了穿插，五次战役时，他们的伞兵超低空跳伞，突然出现在志愿军身后的一个山头上，竖起了星条旗。志愿军回头看了看，派了两个岗哨，无动于衷。这让美国人束手无策，在他们的认知中，这一突然行动会让敌军大吃一惊，甚至崩溃。事实上，英军以此法“惊溃”过土耳其，德国人以此法“惊溃”法国人，可习惯了反扫荡的中国人无动于衷。最后，看看前后的红旗，美国伞兵趁夜又穿插了回去。这完全是两种作战思维的问题。砥平里战斗是一个重要的转折点，走投无路的美国人死守砥平里，结果守住了。美国人这才意识到，志愿军的攻坚能力太弱了。自此，美国人坚守，无隙可乘的志愿军也拉开了防线，战争回到了一战模式。&emsp;&emsp;二次战役中攻击与撤退，让美国人刻骨铭心。志愿军拒绝正面进攻，“总是十几个人从出其不意的方面冲上来”，冒着严寒，美军开始了突围。即使在严寒的天气里，美军依旧是撤退而不是溃退，他们的殿后部队尽职尽责的挡住了志愿军的追兵，摧毁了自己认为重要的军事物资，他们的开路部队按照命令，对每一个阵地发起凶猛的冲锋 —— 其中就包括松骨峰。在一条河边，工兵架起了一座钢铁浮桥，这是从日本空运来的。没想，志愿军的敌后侦察兵在突袭中把该桥炸毁。美国空军立刻从美国本土把另一座浮桥的组件空运过来，一天以后，美国人继续撤退。然后，志愿军的敌后侦察兵（估计还是同一伙人），又伪装成韩国人，混上桥去，再次将桥炸毁。美国人艰难的把另一座同样的浮桥从欧洲运了过来。两天以后，志愿军的这支部队只能远远的在山上看着，打几下冷枪，美国人估计，他们的炸药用完了。中国人没有记录这是那一支部队。但美国人的记录展示了两支军队的可敬可畏之处。一支部队把人的能力发挥到了极致，另一支部队则展现了赤裸裸的工业暴力之美。在桥断的时候，美国人并没有溃逃，他们的后继部队继续死守，前面的部队在等待，通车之后，他们井然有序的逃走。所以，正在人们为胜利欢呼的时候，刘伯承惊叹，美军败而不乱，有章有法，果然是盖世强军。&emsp;&emsp;两支军队在交手中互相学习，互相进步。美国人努力学习夜战防御，提高步兵近战火力和炮兵反应速度，中国人则练习在美式炮火下的生存技巧和短促突击。中国人把人的能力发挥到了极限，美国人把工业化能力发挥到了极限。美国人的战术战略源自欧洲，特别是英国给他们的影响巨大。美国军队是火力至上，一切手段都是为了更好的输出火力，训练的目的也是为了更好更快更准确的输出火力。中国军队从美国军队学到的专用战术术语就是“压制”和“盲射”，打那么多炮不是为了消灭敌人，而是让对方趴在地上别动弹。中国的战略观是你死我活的总体战，死一个人，消耗你一发子弹都是值得的。而工业化发达的美国，则认为坚持下去只是面对钢铁的洗礼，有什么意义？ 这两种思维方式造就了美国人觉得投降很正常，而中国人觉得投降可耻。因此朝鲜战争说美国人怕死容易投降，只在美国人觉得反击突围无望的情况下才可能发生，美国人并不是少爷兵的那种。二战的时候美国军方规定：只要飞行员完成25次出击任务，就可以休假半年。到战争结束，没有一个机组享受到这个福利 —— 全被击落了。美国人并不是像某些纪录片上说的那样贪生怕死的那种，美国人也是很顽强的。&emsp;&emsp;1953年以后，战线依旧在缓慢而耐心的向南推进，之所以不打了，是因为苏联人不想打了，我们用士兵的鲜血，换来了苏联的援助，开始了人类历史上最剧烈的工业化进程。从1937年24支军队的集合体（共军只是其中一支），到1953年的强悍步兵，现在可以骄傲的说，中国人的步兵战斗力第一。所以说，无论是日本人的侵略，还是欧美人的铁甲，都不可能击败中国人。读史者看到日本人与美国人交战两年而显颓势，感觉日本军队是渣，进而推论中国人更渣，这完全是站着说话不腰疼。美国人的评判中，有评论日本人的战略失误，有强调日本人的战术得失，有夸大日本人的技术缺陷，却唯独没有贬低日本人战斗力的。&emsp;&emsp;面对二战的王者之师，中国军队没有退缩。中国人经过近代一百多年的磨难，从小米加步枪开始起步，在新中国成立之时，中国军队竟然和世界一流强国的美军打平了，从此让世界开始正视中国力量。这里面不仅有战略战术，更有民族组织动员能力。共产党在付出了惨重代价后，终于带领中华民族开始了现代化历程。&emsp;&emsp;最近中美的贸易对抗沸沸扬扬,我就听到过很多专家学者说要和美国和解，以为一味讨好美国，美国就会放中国一马，完全是幼稚。毛泽东早就说过以妥协求和平则和平亡，以斗争求和平则和平存。还有目前经济形势不好，部分媒体就大加渲染。其实我一直有个观点，好日子都是从苦日子熬过来的，哪可能天天都是好日子。我们的父辈总不是从缺衣少食的苦日子才熬到今天，凭什么今天的年轻人就得立马过上好日子？没有苦日子哪有好日子。这都是经济周期，是正常的现象，只要努力熬过苦日子，好日子总会到来。中美贸易战这场对抗，相比以往中美数次交锋，中国这次的条件更好，所以这次只要中国以破釜沉舟的勇气面对，胜利肯定属于中国，时间这次在中国这边，现在这个时候不比上次大使馆被炸了。虽然中国相比美国国力还相差很远，不仅是科技方面更有人员素质方面，举个很简单的例子，美国有几百万民间飞行爱好者，这在战时都是战斗机飞行员的后备力量，都不用培训直接上战场。日本在二战时因为空军损耗殆尽，导致散失制空权以后强大的陆军毫无作为。必须正确认识到和美国的差距，不能和美国硬碰硬，该合作还是得合作，实在合作不了，也要拿起武器斗争，时间拖得越久对中国越有利。像几次困难时期中共都度过去了，现在的问题比那时小的多，我的结论是共产党这次一定会赢。]]></content>
      <categories>
        <category>历史</category>
      </categories>
      <tags>
        <tag>历史</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[唯识学]]></title>
    <url>%2F2018%2F08%2F12%2F%E5%94%AF%E8%AF%86%E5%AD%A6%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;佛教哲学的一个体系大乘唯识哲学，在民间般若学是显学，读金刚经和心经的比较多，在学界唯识学从出现开始一直到今天都是佛教哲学的显学。按照思想体系来分，唯识学存在两种分类，一类是新旧分类法，另一类是古今分类法。下面就详细聊聊这两块内容。 &emsp;&emsp;唯识学的古今分类法，所谓唯识古学是以世亲大师为代表的，所谓唯识今学是以陈那大师为代表的。两人都是唯识学的宗师，他们学说的区别是古学是顺从旧说，今学则是推演衍新说。唯识学的基本命题是‘唯识无境’，所谓‘唯识无境’是我们如何去认识这个世界的方法问题，世界就是所谓的镜，它是从哪里来的？是从我们的识来的，是我们的识了知来的，所以唯识所以无镜，就是说世界不存在，只是我们识的反映。那我们的识存不存在呢？镜已经不存在了，那识呢？这就是唯识古学和唯识今学的分歧所在。也就是关于识的存在性上两者看法不同。世界已经不存在了，那你感知这个世界的能力到底存不存在？这是唯识无镜的第一个概念。唯识无镜的第二个概念就是识的三分法，识是由三部分组成的，分别是见分，相分，自证分。所谓见分就是我们摄取事物的能力，比如眼睛就是我们看见事物的能力。所谓相分就是世界上的事物反应给我们的形象。见分和相分是如何关联的呢？他们是通过阿赖耶识来相互作用的。见分和相分都是动作，最终我们摄取事物的形象反映在心识上是通过自证分。自证分就是识的本体，它具有认识能力，这个识是实在的。当我们看见一个东西的时候，用我们自己眼睛的见分去摄取物体形象的相分，然后阿赖耶识连接了这个见分和相分，在我们心识的自证分部分感知到了物体的实在性，只是感知了物体的实在性，不是说物体真的实在。这个物体的相分并不是物体自身的，通过我们眼睛的这种见分转化来的，也就是事物的实在性是依托于见分，自证分能感知到事物是依托于见分的，这就是唯识学的依他起性，所以在唯识古学里，这个自证分这个识的本体它必须是实在的。而陈那大师的唯识今学，不承认自证分的实在性。世界不存在，你感知世界的这个能力也不存在。唯识今学认为，所谓的相分并不是世界实体的性质，也并不是眼睛见分去摄取的，而是你眼睛派生出来的幻镜，也就是说你看见什么不是你眼睛的能力问题，是你眼睛的想法问题。当然你眼睛有想法也没用，因为最后真正具有实在性的也不是反映在自证分上的，是梦，也就是相梦。也就是你所看到的东西的形象实际是你先天的经验就知道的是啥东西的梦。这个相梦是实在的，自证分是不实在的。这个先天遗传的相梦说法和西方哲学家康德的先验论有点类似。陈那大师的这套唯识今学后来发展出了一套完整的因明学，也就是逻辑学。 &emsp;&emsp;唯识学的新旧分类法，作为瑜伽行派的中心学说，唯识哲学传入中国以后，它就分成了两套思想体系，一套是旧译的，叫九识说，也就是有九个识：眼、耳、鼻、舌、身、意、末那识、阿赖耶识、无垢净识。这套旧译唯识说也叫如来藏缘起说。还有一套新译的，叫八识说，也就是比旧译的唯识学少一个无垢净识，这个学说也叫阿赖耶识缘起说。在南北朝的晚期，佛教界内部最大的对峙，是北方地论师和南方摄论师之间。北部的学僧是世亲大师的十地经论为指导的，坚持阿赖耶识的八识说，认为末那识是妄识，而第八识阿赖耶识是真识。南方的学僧是以无著大师的摄大乘论为指导的，他们认为阿赖耶识是妄识，他们另立了一个第九识无垢净识为真识。世亲和无著是哥俩，世亲是哥哥，无著是弟弟。当时的时代背景，佛法到底是九识还是八识，一直没有权威来解读。后来玄奘大师为了求取真经，平息心中的疑惑，去印度求取真经来解决这个问题。玄奘大师到印度取的是唯识今学陈那大师的经。不过很遗憾，费尽千辛万苦取回来的经，中国人就读了一百多年，陈那大师的这套学说就没有往下传了。没有往下传的原因主要是印度的逻辑观和中国人有根本冲突，印度人有种姓制度，把人分等级，玄奘大师原汁原味的采取这套学说，中国人是王侯将相宁有种乎？不太认同印度这套说法，这也导致唯识法相宗没有传下去。后来唯识学成为中国佛教理论的武器库，博大精深，只要有需要都可以去拿一点。很快中国人发展出来了自己的一套唯识学体系。不管是新唯识还是旧唯识，他们在传入中国后，就和传入前的都变得不一样了。所以有时我们去看佛经，经常出现偏差，就是因为古人早就做了中国式的改造。改造就是把绝对真理的客体化改造绝对真理的本体化。 &emsp;&emsp;所谓绝对真理客体化就是绝对真理在你外面，是个客体。而绝对真理的本体化就是真理在你心里，在你身上。那唯识学中国化就是把绝对真理客体化转化为内在的本体化。那绝对真理是什么呢？就是真如，无上正等正觉，真谛等等。外域的佛学认为存在一个绝对真理的客体，这个客体不是众生性，也不是自性，是众性和自性以外的实体，这个需要我们去把握和认识。简单说就是真理在外就是客体说。而中国唯识学兴起的代表作是马鸣菩萨的大乘起信论。中国禅宗整整经历了十五代人的努力，用了华严宗的圆融观，用了禅宗的无心观，发挥了中国儒家以一贯百的传统，到了唐朝末期整整十五代人，禅宗五家中的第五家，法眼宗的高僧永明延寿终于用一个一心说统一了新旧唯识。这个概念一出，立刻横扫学界。 &emsp;&emsp;唯识学就介绍到这。我由此得到的启示是：我们总希望通过自己的努力改变外部世界来改变自己命运，但真正要做的是要改变我们自身实现改变自身的外部环境。也就是个人命运不在客体，在本体。]]></content>
      <categories>
        <category>佛学</category>
      </categories>
      <tags>
        <tag>佛学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[哥德尔不完全定理]]></title>
    <url>%2F2018%2F07%2F24%2F%E5%93%A5%E5%BE%B7%E5%B0%94%E4%B8%8D%E5%AE%8C%E5%85%A8%E5%AE%9A%E7%90%86%2F</url>
    <content type="text"><![CDATA[前言&emsp;&emsp;今天聊一个比较严肃的话题，和身边的人交流很多，听过很多关于哥德尔不完全定理的过度解读。学一个东西不会不要紧，最怕的就是一知半解，只学了前半段不了解后半段，所以有时候理解会和作者原意差很远。哥德尔是一个数学家，哥德尔不完全定理也是关于数学方面的定理，我要讲的不是数学，我是尽量给你一个未必准确但是简明的解释，让你通过这个定理对世界有一个深刻的理解。 正文&emsp;&emsp;数学家研究问题的方法是通过逻辑证明出来的，这个和科学家通过观察世界总结规律的方法有着本质的区别。什么意思？比如你考察几个直角三角形，发现他们的直角边的平方和都正好等于斜边的平方，那你能据此就认为这是直角三角形的普遍性吗？不能。你必须通过严格的数学推导证明这个性质，证明了，这个才能称为勾股定理。 &emsp;&emsp;问题来了，那证明这个定理的依据是什么呢？有的是已经被别人证明过的定理。那最初的定理是从哪里来的？最初的定理不叫定理，叫公理。公理就是逻辑极点，不需要证明的，是人们普遍认可的东西。比如常见的两点之间只能有一条直线，这就是一条公理。 &emsp;&emsp;数学家先认可几条公理，然后在公理的基础上证明各种定理，数学理论大厦就此建立起来。比如我们初中学的欧氏几何，总共才五条公理。决定整个几何学大厦的不是那些定理，而是这五条公理。在初中的时候，我们为了证明一个结论，往往会巧妙构思，而且有时候还比较难。 &emsp;&emsp;在20世纪初的时候，有一些数学家想找到一个机械的方法，从最基本的数学公理出发，自动证明所有的数学定理。当时的数学家主要考虑的是有关自然数的理论体系。数学家经过一番努力，貌似有了一些进展。但是在1931年的一个会议上，25岁的哥德尔做了一个报告，说他证明了一个有关自然数公理系统的定理。哥德尔证明了，在自然数的公理系统中，不但你想要的那种机械化的证明不存在，而且对有些命题来说，连证明本身都不存在。这个就是著名的哥德尔不完全定理。什么意思？用大白话说，只要自然数的公理系统只有有限条公理，那就一定存在一些命题，你既不能说它对，也不能说它错。也就是自然数的公理系统是不完全的。 &emsp;&emsp; 请注意上面所说的哥德尔不完全定理是有条件的。很多人把哥德尔不完全定理做引申，认为哥德尔证明了一切有限的公理系统都是不完备的。这个就错了，哥德尔不完全定理只限于自然数系统。事实上，有一个数学家在1948年就证明了如果一个封闭的实数系统，那它就有可能是完备的和自洽的。比如欧氏几何就是一个关于实数的系统，塔斯基就已经证明欧氏几何系统是完备和自洽的。因此不要滥用哥德尔不完全定理。 &emsp;&emsp; 哥德尔不完全定理的确说了，对自然数这个领域来说，你不能从有限的几个公理出发推导出整个自然数论系统大厦。自然数的世界里永远有新东西等着你。 启示&emsp;&emsp;所有可数的系统都等价于自然数系统。那依照哥德尔不完全定理，一个可数的自己，是说明不了自己的。比如某些人迷信炒股宝典，总希望有一个方法，对照方法操作就能在股市上赚钱。宝典上说该做的你就做，不该做的你就不做。如果是哥德尔，他会说总有一些事情，是你的宝典里面没办法判断它对和错的。有时候你得跳出宝典之外，才能判断它对不对。 &emsp;&emsp;哥德尔不完全定理给学术界开了脑洞。后来有人证明了一个类似的理论，说任何一个可以写下来的语言系统，总会有些语句，你用这个语言本身无法判断对和错，你必须跳出这个语言才能判断。也就是说，如果你的全部思考被限制在一种语言里，有些事情对你来说永远不知道怎么做决定。你得跳出这个语言才行，得有一些在这个语言之外的意思才行。 &emsp;&emsp;从计算机的视角看，计算机系统本质上是一个可数的系统，符合哥德尔不完备定理的条件。依照哥德尔不完全定理，在这样的封闭系统内，总有一些语句是这个系统无法判断对错的。如果真实的世界是数字的，我们的大脑都是计算机，那迟早有一天，人类会对这个系统能想明白的全想明白了，剩下的都是永远不可能想明白的。从那天起，人类将浑浑噩噩的活着。 &emsp;&emsp;如果真实的世界不是可数的，是实数，人脑不是计算机，那我们就有可能随时跳出任何能写成文字的认知系统，我们永远都有一个只可意会不可言传的思路。人类可以不断跳出旧系统，探索新知识，发明新语言，建立新系统，科学家可以永远琢磨新的物理定律，艺术家可以永远创造新意境，工程师永远可以发明新模型。]]></content>
      <categories>
        <category>哲学</category>
      </categories>
      <tags>
        <tag>哲学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[软件开发原则]]></title>
    <url>%2F2018%2F07%2F23%2F%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%8E%9F%E5%88%99%2F</url>
    <content type="text"><![CDATA[前言&emsp;&emsp;我从事软件架构设计也有一些年了，以前在学校学习设计模式，当时学习只是当做一门技能，没有实际应用很难体会设计模式带给软件开发的真正好处。GoF传说中的四位大神搞出了23种经典的设计模式，我在实际工作中用到了其中一些，现在回过头来看这23种设计模式其实是遵循了一些原则，今天就聊聊这些原则。 正文1. 单一职责原则（Single Responsibility Principle - SRP）原文：There should never be more than one reason for a class to change. 译文：永远不应该有多于一个原因来改变某个类。 理解：对于一个类而言，应该仅有一个引起它变化的原因。说白了就是，不同的类具备不同的职责，各施其责。这就好比一个团队，大家分工协作，互不影响，各做各的事情。 应用：当我们做系统设计时，如果发现有一个类拥有了两种的职责，那就问自己一个问题：可以将这个类分成两个类吗？如果真的有必要，那就分吧。千万不要让一个类干的事情太多！ 2. 开放封闭原则（Open Closed Principle - OCP）原文：Software entities like classes, modules and functions should be open for extension but closed for modifications. 译文：软件实体，如：类、模块与函数，对于扩展应该是开放的，但对于修改应该是封闭的。 理解：简言之，对扩展开放，对修改封闭。换句话说，可以去扩展类，但不要去修改类。 应用：当需求有改动，要修改代码了，此时要做的是，尽量用继承或组合的方式来扩展类的功能，而不是直接修改类的代码。当然，如果能够确保对整体架构不会产生任何影响，那么也没必要搞得那么复杂了，直接改这个类吧。 3. 里氏替换原则（Liskov Substitution Principle - LSP）原文：Functions that use pointers or references to base classes must be able to use objects of derived classes without knowing it. 译文：使用基类的指针或引用的函数，必须是在不知情的情况下，能够使用派生类的对象。 理解：父类能够替换子类，但子类不一定能替换父类。也就是说，在代码中可以将父类全部替换为子类，程序不会报错，也不会在运行时出现任何异常，但反过来却不一定成立。 应用：在继承类时，务必重写（Override）父类中所有的方法，尤其需要注意父类的 protected 方法（它们往往是让你重写的），子类尽量不要暴露自己的 public 方法供外界调用。 4. 最少知识原则（Least Knowledge Principle - LKP）原文：Only talk to you immediate friends. 译文：只与你最直接的朋友交流。 理解：尽量减少对象之间的交互，从而减小类之间的耦合。简言之，一定要做到：低耦合，高内聚。 应用：在做系统设计时，不要让一个类依赖于太多的其他类，需尽量减小依赖关系，否则，您死都不知道自己怎么死的。 5. 接口隔离原则（Interface Segregation Principle - ISP）原文：The dependency of one class to another one should depend on the smallest possible interface. 译文：一个类与另一个类之间的依赖性，应该依赖于尽可能小的接口。 理解：不要对外暴露没有实际意义的接口。也就是说，接口是给别人调用的，那就不要去为难别人了，尽可能保证接口的实用性吧。她好，我也好。 应用：当需要对外暴露接口时，需要再三斟酌，如果真的没有必要对外提供的，就删了吧。一旦提供了，就意味着，将来要多做一件事情，何苦要给自己找事做呢。 6. 依赖倒置原则（Dependence Inversion Principle - DIP）原文：High level modules should not depends upon low level modules. Both should depend upon abstractions. Abstractions should not depend upon details. Details should depend upon abstractions. 译文：高层模块不应该依赖于低层模块，它们应该依赖于抽象。抽象不应该依赖于细节，细节应该依赖于抽象。 理解：应该面向接口编程，不应该面向实现类编程。面向实现类编程，相当于就是论事，那是正向依赖（正常人思维）；面向接口编程，相当于通过事物表象来看本质，那是反向依赖，即依赖倒置（程序员思维）。 应用：并不是说，所有的类都要有一个对应的接口，而是说，如果有接口，那就尽量使用接口来编程吧。 结束语&emsp;&emsp;将以上六大原则的英文首字母拼在一起就是 SOLID（稳定的），所以也称之为 SOLID 原则。只有满足了这六大原则，才能设计出稳定的软件架构！但它们毕竟只是原则，只是四人帮给我们的建议，有些时候我们还是要学会灵活应变，千万不要生搬硬套，否则只会把简单问题复杂化，切记！&emsp;&emsp;除了以上一些原则，实际上还有其它一些原则： 1. 组合/聚合复用原则（Composition/Aggregation Reuse Principle - CARP）&emsp;&emsp;当要扩展类的功能时，优先考虑使用组合，而不是继承。这条原则在 23 种经典设计模式中频繁使用，如：代理模式、装饰模式、适配器模式等。可见江湖地位非常之高！ 2. 无环依赖原则（Acyclic Dependencies Principle - ADP）&emsp;&emsp;当 A 模块依赖于 B 模块，B 模块依赖于 C 模块，C 依赖于 A 模块，此时将出现循环依赖。在设计中应该避免这个问题，可通过引入“中介者模式”解决该问题。 3. 共同封装原则（Common Closure Principle - CCP）&emsp;&emsp;应该将易变的类放在同一个包里，将变化隔离出来。该原则是“开放-封闭原则”的延生。 4. 共同重用原则（Common Reuse Principle - CRP）&emsp;&emsp;如果重用了包中的一个类，那么也就相当于重用了包中的所有类，我们要尽可能减小包的大小。 5. 好莱坞原则（Hollywood Principle - HP）&emsp;&emsp;好莱坞明星的经纪人一般都很忙，他们不想被打扰，往往会说：Don’t call me, I’ll call you. 翻译为：不要联系我，我会联系你。对应于软件设计而言，最著名的就是“控制反转”（或称为“依赖注入”），我们不需要在代码中主动的创建对象，而是由容器帮我们来创建并管理这些对象。 6. 不要重复你自己（Don’t repeat yourself - DRY）&emsp;&emsp;不要让重复的代码到处都是，要让它们足够的重用，所以要尽可能地封装。 7. 保持它简单与傻瓜（Keep it simple and stupid - KISS）&emsp;&emsp;不要让系统变得复杂，界面简洁，功能实用，操作方便，要让它足够的简单，足够的傻瓜。 8. 高内聚与低耦合（High Cohesion and Low Coupling - HCLC）&emsp;&emsp;模块内部需要做到内聚度高，模块之间需要做到耦合度低。 9. 惯例优于配置（Convention over Configuration - COC）&emsp;&emsp;尽量让惯例来减少配置，这样才能提高开发效率，尽量做到“零配置”。很多开发框架都是这样做的。 10. 命令查询分离（Command Query Separation - CQS）&emsp;&emsp;在定义接口时，要做到哪些是命令，哪些是查询，要将它们分离，而不要揉到一起。 11. 关注点分离（Separation of Concerns - SOC）&emsp;&emsp;将一个复杂的问题分离为多个简单的问题，然后逐个解决这些简单的问题，那么这个复杂的问题就解决了。难就难在如何进行分离。 12. 契约式设计（Design by Contract - DBC）&emsp;&emsp;模块或系统之间的交互，都是基于契约（接口或抽象）的，而不要依赖于具体实现。该原则建议我们要面向契约编程。 13. 你不需要它（You aren’t gonna need it - YAGNI）&emsp;&emsp;不要一开始就把系统设计得非常复杂，不要陷入“过度设计”的深渊。应该让系统足够的简单，而却又不失扩展性，这是其中的难点。]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[科学、宗教和信仰]]></title>
    <url>%2F2018%2F07%2F21%2F%E7%A7%91%E5%AD%A6%E3%80%81%E5%AE%97%E6%95%99%E5%92%8C%E4%BF%A1%E4%BB%B0%2F</url>
    <content type="text"><![CDATA[前言&emsp;&emsp;昨天下班和一拨同事吃了顿散伙饭，席间聊到了以前携程一个同事出家了，我虽然学佛久矣，但是极不赞成在没有安排好家人后代后半生物质生活时，男人抛家舍业去求心灵解脱修佛。今天我就借着这次契机，聊聊科学宗教信仰这个话题。 正文&emsp;&emsp;大体上人类思想经历了主要三个阶段：神学，哲学，科学阶段。这三个阶段我个人看法：人类的理性主观能动性到达极致的就是哲学，神学阶段是人类把生存危机的思考交给神，自己保留一份对大自然未知的敬畏，科学阶段则是对人类精神宁静的极大破坏。关于科学我极其赞成王东岳老师的看法，科学不是真理，它是人类生存能力弱化的代偿现象，科学只有工具性，没有真理性。但是国内的科普读物好像有点科学宗教主义了，人要相信科学，把科学当真理。 &emsp;&emsp;宗教来自于古人对世界的解读，在科学和知识不完备的时候，古人先哲们试图解释世界的缘由，并为苦难的人生带来慰藉，从某种意义来说，宗教本身就有安抚情绪和治疗抑郁的功效，从古至今，很多人在尘世中走投无路，或者感到疲惫和厌倦的时候，往往会选择宗教作为最后的情感庇护。 &emsp;&emsp;当然科学与宗教也并不一直是对立的，实际上相当多科学家，特别是国外的科学家，相当高的比例是虔诚的教徒。那么我的理解是，这个世界有太多无法解释的事情，有太多科学无法覆盖的领域，我觉得，能让科学解释的，用科学来解读，暂时无法用科学解释的，求助于宗教，也无可厚非，毕竟宗教本身也是无法证伪的，但科学找到正确解读后，还是应该相信工具性的科学。 &emsp;&emsp;现在有些国内的科学家也开始信奉宗教，我觉得信仰自由其实也可以宽容一些，信仰宗教与科学研究真的可以不冲突，但因宗教而拒绝科学，否定科学，是非常糟糕的。 &emsp;&emsp;很多西方人觉得没有宗教信仰是很可怕的事情，这和我们的思维完全不同，很多西方人认为无信仰者是不可以信任的，我不点评孰是孰非，但从他们的思考方式来说，没有信仰可能也就意味着缺乏敬畏，缺乏对行为的约束。我们古人说，头上三尺有神明；人在做，天在看； &emsp;&emsp;宗教是一种信仰，但信仰不只是宗教，有坚定的信仰，可能意志力和精神力就会强大一点，而行为方式也会有所约束。 &emsp;&emsp;我觉得不信宗教没事，但是人应该有信仰。我曾经以为正常人都应该有最基本的行为底线和价值观认知，但这些年越来越觉得人性之恶，瞠目结舌。某些台上冠冕堂皇的成功商人和创业新贵，为了一己之私，真的是可以谎话连篇，真的是可以随意的出卖信用，真的是可以伤害无辜的人而毫无顾忌。以前某些人还都不显山不露水，躲在角落里偷偷搞搞黑产，开开赌场，卖点仿冒商品，或者微信上洗洗稿什么的，最近这两年一窝蜂扎到币圈来了。一些曾经还挺在意形象和口碑的大佬们也疯狂了，连吃相都不顾了。 结束语&emsp;&emsp;世界和社会有很多糟糕的地方，有很多糟糕的人，有很多糟糕的事情，有些东西会冲击你的价值观和信仰，要直面这样的事情，必要时甚至要学会委屈求全，但心底要保留光明的一面，留住自己的底线，维系自己的信用。要入世修行，行雷霆手段，施菩萨心肠。&emsp;&emsp;心存善良，但不能说无节制的容忍和妥协，要有斩妖除魔的决心，才能拯救善良和无辜的人。对坏人善良，就是对好人造恶。&emsp;&emsp;孔子曰：以德报怨，何以报德，以直报怨，以德报德。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>杂说</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网关系统]]></title>
    <url>%2F2018%2F07%2F16%2F%E7%BD%91%E5%85%B3%E7%B3%BB%E7%BB%9F%2F</url>
    <content type="text"><![CDATA[前言&emsp;&emsp;过去一年多时间，我负责公司目前三套网关（无线网关、H5网关、第三方网关）的架构研发工作。参考Netflix开源的zuul定制化了一套基于异步servlet机制的网关系统，经过一年多线上流量冲击的考验，目前这套机制运行比较稳定可靠。今天从个人角度聊聊对网关的理解，以及实践过程中所遇到的一些问题和解决方案。 正文&emsp;&emsp;在开始之前，先了解一下下面两个问题： 什么是服务网关？服务网关 = 路由转发 + 过滤器 1、路由转发：接收一切外界请求，转发到后端的微服务上去； 2、过滤器：在服务网关中可以完成一系列的横切功能，例如权限校验、限流以及监控等，这些都可以通过过滤器完成（其实路由转发也是通过过滤器实现的）。 为什么需要服务网关？上述所说的横切功能（以权限校验为例）可以写在三个位置： 1、每个服务自己实现一遍2、写到一个公共的服务中，然后其他所有服务都依赖这个服务3、写到服务网关的前置过滤器中，所有请求过来进行权限校验&emsp;&emsp;显然第一种方式太过臃肿，并不符合工程化的架构理念。第二种相较于第一种就好很多，代码开发不会冗余，但是有两个缺点。由于每个服务引入了这个公共服务，那么相当于在每个服务中都引入了相同的权限校验的代码，使得每个服务的jar包大小无故增加了一些，尤其是对于使用docker镜像进行部署的场景，jar越小越好；由于每个服务都引入了这个公共服务，那么我们后续升级这个服务可能就比较困难，而且公共服务的功能越多，升级就越难，而且假设我们改变了公共服务中的权限校验的方式，想让所有的服务都去使用新的权限校验方式，我们就需要将之前所有的服务都重新引包，编译部署。&emsp;&emsp;而服务网关恰好可以解决这样的问题。将权限校验的逻辑写在网关的过滤器中，后端服务不需要关注权限校验的代码，所以服务的jar包中也不会引入权限校验的逻辑，不会增加jar包大小；如果想修改权限校验的逻辑，只需要修改网关中的权限校验过滤器即可，而不需要升级所有已存在的微服务。&emsp;&emsp;当然上面只是从横切面一个方面谈到了需要网关的必要性，实际上网关要做的事情远不止这一个，一个典型的网关系统必须包含以下几个基本功能：智能路由：服务发现和路由寻址，将外部请求转发到后端服务。权限校验：检验外部访问的合法性。API监控：可以监控后端服务的一些性能指标和业务指标，比如响应时间，调用次数，出错比例等等。对异常服务提前做一些告警处理，比如熔断机制。限流容错：与监控配合，进行限流和容错操作，保护后端服务不会受到异常飙升的流量崩溃。A|B测试：A|B测试时一块比较大的东西，包含后台实验配置、数据埋点（看转化率）以及分流引擎，在服务网关中，可以实现分流引擎。&emsp;&emsp;随着微服务成为业界互联网的趋势，网关已经成为重要的基础设施，它可以做到不将服务直接暴露给外部访问，屏蔽了一些安全和服务升级发布所带来的风险，这些也都是网关比较关键的核心功能。 网关整体架构&emsp;&emsp;开源的zuul网关采用的是同步servlet机制，我们采用的是异步servlet机制，这种方式可以提高网关响应的请求数。这套机制在携程也运行良好，我们只不过是直接拿来，结合Cat做了一些监控告警定制，替换现有的.Net网关，比.Net网关多了熔断监控告警，而且zuul采用groovy脚本处理相关逻辑，可以做到动态修改和热部署，将变更风险降到了最低。架构图如下所示：&emsp;&emsp;整个架构还是比较清晰，流量从外网过来先经过软负载nginx，然后转发到网关集群，网关再根据一定的路由规则将流量转到特定的服务上。网关会对接配置中心，管理路由服务的动态配置信息，比如超时、并发量，连接池大小等相关信息，还会对接elk，把一些出错请求的header头写入日志系统，方便故障定位。 存在的问题&emsp;&emsp;这套网关系统现在线上也还是这样，没有出现重大问题。问题主要集中在测试和日常维护中，可以说占据了大量的精力，这些事情做了不算功劳，但是不做又会影响测试体验，经常会收到一些抱怨。 1、安装部署&emsp;&emsp;目前我们将网关代码的打成一个war包部署在tomcat中，如果tomcat的版本不一致会带来jar冲突。前期没有考虑到会有多套网关问题，默认将脚本放在指定目录，如果安装多套网关会有脚本冲突问题，而且由于linux和Windows的目录规则还不一样，导致每次部署都要修改配置文件中的目录配置。实际上测试人员并不关心这些问题，他们需要的是网关服务。加上还要制定一些环境参数，比如网关名称，远程配置url地址等等。这些都会给测试人员带来麻烦。 2、配置问题&emsp;&emsp;配置问题主要是两类配置：一个路由配置，一个是参数配置。路由配置主要是新服务上线，需要通过网关对外提供访问，根据路由规则配置路线信息，比如是否需要验证token或者验签。参数配置主要是配置一些连接池，并发超时等相关信息。两类配置会极大消耗网关维护人员的精力。而且这些配置还不能开放给测试人员，需要对网关机制有比较深入的了解。 3、测试问题&emsp;&emsp;这类问题是比较多也比较头痛的。先看下面一张图的场景：&emsp;&emsp;网关定期拉取esb的路由配置信息实现服务发现，网关到后端的调用是通过域名的方式访问。由于只有生产环境做了域名解析，开发测试本地联调时会配置本地host，而且host配置还比较多，必须配置所有访问的域名host。如果两个测试人员都在测试，而且是测试同一个应用的不同版本，由于网关没有做版本路由，所以测试人员还不能使用同一个网关来测试，必须每个测试都搭建自己的网关，这样大家就可以独立的修改自己本地host，互不影响。这种host配置方式还会带来另一个问题，就是一旦服务地址发生变更迁移，还必须通知到所有的用户修改host配置。 解决方案&emsp;&emsp;下图可以看出，我们整个架构理念是基于网关为中心架构的，而且配置比较分散。网关维护人员要操作三个系统，在esb系统中配置路由信息，在apollo中配置超时并发信息，在filter过滤器系统中修改过滤器状态。对网关维护者来说体验极差，定位问题必需具备一定的门槛。网关使用者很难有参与感，而且出了问题只能找网关开发者来定位问题。&emsp;&emsp;实际上刚开始来公司的时候，起初接到的任务是替换现有的.net网关，根本没有好好的设计。经过一年多的修改打磨，我提出了一个解决方案，请看下图：&emsp;&emsp;从上图中可知我们改变了以网关为中心的架构理念，变为以网关治理为中心的架构理念。将网关开发者和网关使用者平等对待，即使网关使用者不具备太多的网关上下文，也能通过治理中心解决以上所说的大部分问题。 以上架构的总体原则：1、平台化（强调治理）&emsp;&emsp;首先是将网关集群化，不同的集群使用不同的路由表，各个路由表之间不相互干扰。对网关集群实行治理，目前网关有多少测试人员用，我们是不知道的，所以经常修改host要通知到人非常麻烦。通过对网关集群实行治理，我们可以很清楚知道目前有哪些网关，哪些网关集群，是哪些测试人员在使用。 2、服务化（强调控制）&emsp;&emsp;网关作为一种服务开放出去，避免重复造轮子。将配置路由信息也作为一种服务，开发测试可以直接操作治理中心实现日常的维护工作，这样可以极大的释放网关开发者的精力，不必为日常的一些维护耗费太多时间。 &emsp;&emsp;以网关治理为中心架构以后，整体流程调整为如下：&emsp;&emsp;首先治理中心只有两类用户，一类是管理员，一类是普通用户。管理员相当于超级用户，他负责维护网关模板和管理所有的网关集群，享有一切操作权。只有网关模板在治理中心注册以后，普通用户才能申请集群下载代码，启动网关集群。&emsp;&emsp;对于聚合网关而言，可以通过接入注册中心，到时由同步协调器同步到kong内网网关，实现网关集群的动态扩容缩容。如果是开放平台网关，可能要通过f5配置域名解析等。 结束语&emsp;&emsp;目前参考开源的spring cloud zuul源码，我实现了一版基于异步servlet和groovy机制的简化版，使得网关不用在依赖tomcat，直接下载jar，指定启动参数启动即可。不仅解决了安装部署问题，也解决了日常维护配置工作，极大的提高app测试人员的测试效率，并提升了网关的使用体验。]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>微服务</tag>
        <tag>网关</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[战略思维]]></title>
    <url>%2F2018%2F07%2F14%2F%E6%88%98%E7%95%A5%E6%80%9D%E7%BB%B4%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;所谓战略，就是你决定做什么。战略是选择一个方向。战术就要低一级了，战术是方向已经确定了的情况下，你琢磨怎么做。攻略更低，是照着别人的经验把这事做下来。底层学习攻略，中层研究战术，高层选择战略。 &emsp;&emsp;战略的本质是取舍。在你自己看来，战略是对命运的主动选择。在你手下的人看来，战略也是利益分配，就是你得根据公司的未来发展，把钱投到最有前途的方向上去。 &emsp;&emsp;CEO 的最重要任务不是公司日常管理，而是战略。但是一般的CEO只有“内部视野”，平庸的公司，靠惯性运营。只听内部人怎么说，或者最多再盯着几个直接的竞争对手看的思维模式，叫做“内部视野”。内部视野带给公司的只有惯性。 &emsp;&emsp;战略的关键是选择做什么。做什么不能以自己过去为参考，也不能以公司内部人的意见为参考，而应该是往外看。往外看，你就会发现外面真实的世界绝对不是一个稳态的运行，最应该做的就是把资源迅速投入到一个快速增长的领域中去，而不是均分资源。 &emsp;&emsp;战略思维首先要往外看。当你往外看的时候，你发现世界上充满了不平等，平庸和成功的差距实在太大了。头部公司拿走了90%的利润；平庸公司的利润非常低；头部公司优势将来还可能还会进一步增大。选对了行业，你就选对了50%。所谓战略，就是你在利润分布图上是一个什么位置。真正的战略选择，就是决定你在利润争夺版图中的位置。 &emsp;&emsp;收获从来都不是由付出决定的。做什么，比怎么做，比做得努力不努力重要的多。 &emsp;&emsp;所谓战略意识就是时刻想想我是不是该调整发展方向。新趋势刚刚出来的时候，传统公司根本就感受不到任何影响；趋势清晰了，传统公司仍然傲慢，并不羡慕什么新行业；新模式已经被证明是更好的，转型要面临非常大的公司内部压力；旧模式已经不行了，转型已经来不及，直接退出是唯一的办法。 &emsp;&emsp;好战略应该走极端。战略不是做动作，而是做大动作，CEO们经常低估了什么叫大。市场竞争就是这样，跟上队伍不算厉害甚至都不算动作，你只有领先才能叫大动作。 &emsp;&emsp;做大动作是最安全，也是最有利的战略选择。并购、提高生产力和产品创新，都不但增加了公司在利润分布曲线上上行的概率，而且减少了下行概率。资源重组既增加了上行概率，也增加了下行概率，但是上行远远大于下行。资本支出使得上行和下行概率都增加了，而且幅度一样。 &emsp;&emsp;从战略的角度考虑，集中力量的本质是有选择的投入，也可以说是有选择放弃。在这个方向上集中力量，就意味着在那个方向上要放弃力量。要点在于第一，必须要有选择和放弃；第二，战略目标都是跟别人比出来的，不是算你投入多少绝对资源。 &emsp;&emsp;集中力量办大事的精髓就是选择一个战略方向，把有限的力量集中在这个方向上谋求突破。能选对方向，能调动资源，才叫有战略能力，否则四平八稳什么都做，那叫过日子。 &emsp;&emsp;所谓战略就是选择方向，集中力量，做几件能让你在利益分配曲线上有一个更好位置的大事。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>杂说</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[技术的悲哀]]></title>
    <url>%2F2018%2F07%2F07%2F%E6%8A%80%E6%9C%AF%E7%9A%84%E6%82%B2%E5%93%80%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;最近徐峥主演的一部电影《我不是药神》，还没有正式上映，就已经在朋友圈成为热门话题。我虽然还没有去电影院看，但是从网上也搜集了一些相关剧情方面的东西。其实我个人觉得电影题材很好，是难得的反映现实主义题材的好的国产电影。医药技术的进步本是人类的福音，却成为某些利益集团谋利的工具。今天我就聊聊技术相关的话题。 &emsp;&emsp;以前听过很多大佬关于技术方面的演讲，比如京东老总就描绘过，未来技术进步以后，人只用工作2-3小时，其它的都给机器人来做，进入按需分配的共产主义社会并不遥远。总之这些大佬描绘的都是技术带给人类的都是美好。但是如果放大时间维度，人类从原始社会进入到现代社会，技术进步了多少，但是产生的社会问题一样不比以前的少。物质水平是进步很多，但是工作强度并没有因此减少，就是如此的工作强度，大部分都没有过上有尊严的生活。所以稍加推敲，技术并不能解决一切问题。 &emsp;&emsp;在美国1978年发生过邮件炸弹事件，就是美国哈佛大学一个数学天才，有感于技术带给人的奴役，给一些理工科的教授寄去了16封邮件炸弹，炸死了不少知名的教授学者。这件事很有名，事件的主导者甚至还威胁纽约时报，如果全文刊登他的文章，他就停止邮件炸弹袭击。大家有兴趣可以去看看卡辛斯基的警告，里面从哲学的角度论述了技术带给人类的负面影响。 &emsp;&emsp;目前全球的问题是阶层垄断，资源聚集，然后希望利用技术打破这种平衡，让人类变得更好，更和谐。任何一个人反抗垄断，权威，出发点都是朴素的，但是结果往往只是一个轮回游戏而已。技术从一千多年的历史来看，他并没有让社会变得更幸福，更美好，更和谐。从自杀率角度来看，反而提升更多。技术是解决不了人性的问题的，人不会因为技术而变得更加愿意付出，更加愿意珍惜，更加愿意宽容，却因为技术变得更容易盲从，贪婪，自私，他放大了人性恶的一面，更加激荡了人性。 &emsp;&emsp;比如我现在身处P2P行业，相关这个金融科技的负面报道也看了不少。比如我们公司的口号就是金融触手可及，信用改变中国，实现普惠金融，但是实际不是这样。我就问公司创始人一个很简单的问题，让你愿意放弃全部家产，投身到这个技术革命去，然后技术实现了，世界和平，人类富裕，但是你自己却一点好处也没有，你晚上睡觉的时候摸摸你的良心，你愿意么？其实，支撑那么多人前赴后继往前走的根本性目的，并不一定是理想，而是赚到足够多的钱，或者说一定是赚钱基础上的商业理想，但是一个阶层赚钱越多，必然别的阶层赚钱越少。这本质上一定是个悖论，你改变不了。 &emsp;&emsp;古人说过，民不患寡而患不公，也就是说如果社会很难实现所谓的公平正义，就很难会有所谓的幸福感。贫富分化差距的拉大，只会进一步降低幸福感，所以从这个角度来看，很多人都指望技术的发展来进一步限制贫富分化和差距的拉大，然后维护社会公正公平，本意都是好的。但是现实的结果就是我前面的结论所说的。 &emsp;&emsp;因为技术的存在，使得底层人民的质量是抬高的，但是生活差距其实是在拉大的，而且还在不断拉大，因为新技术带给强者的机会是更多的，强者有更多的资源、权利、去使用好技术维护自己的权利。技术只是解决便利性的问题，他或许可以提高整体民众的生活质量，但是很难解决社会幸福感的问题，而幸福感的背后其实很大程度上是来自社会公平问题。 &emsp;&emsp;我说技术带给人是负面的，并不是说技术本身是坏的。技术是中性的，中性的技术往往会被更有权利，或者是说更有钱的人使用，像打仗一样。有钱人可以买到更好的军火，用来灭掉没有钱的人，所以技术的结果是强者越强，弱者越弱，有一些技术可以用来维护社会公平和公正的时候，强者一定会把这个技术干掉，不让社会使用，为什么？ &emsp;&emsp;因为社会一旦公平公正就意味着他所占有的权益会被损害，原来他可以赚80块钱，一公平就只能赚40块钱了，公平意味着强者的利益损失和弱者利益提升，两者慢慢靠近中心点就是公平。 &emsp;&emsp;如果技术可以实现这个能力的话，有钱人会用这么好的技术来进行自我革命么，把自己给变得没钱么？换成你，你愿意么。现实的结果恰恰是相反的，许多有钱人反而利用技术更好的进行收割民众。 &emsp;&emsp;当一个技术如果会对他们的地位构成了威胁，他们第一想到的不是发展这个技术，而是垄断和搞死这个技术，这个就是社会现实，好的技术如果真能解决社会公平问题，一定意味着没有有钱人会去支持这种技术，限制发展，扼杀发展，都是常用套路。 &emsp;&emsp;在医疗领域其实是很明显的，其实有很多特效药的存在，但是他们都未被大规模普遍性应用，从而使得价格高昂的存在，甚至可能压根就没有投入市场，理由是还不完善，但是现实是真不完善么？对于一个面临绝症等死的人来说，还有什么可以不完善的么？不投放市场的原因就是因为很多药企的新药会对老药品的商业利润进行冲击，从而雪藏更好的新技术，直到老药品的利润被压榨倒极致在进行新药品的投放，这个也是为什么印度仿制特效药的空间的存在。 &emsp;&emsp;还有大量国外已经普遍存在的特效药，为什么国内企业不列入药品清单，那也是因为既得利益者的存在，这些药品的进入对国内药企的冲击会很大。这个就是社会现实。你也很难指责他们，因为换成你，或许你也一样选择，当然更残酷的事实是如果你不这么选择，你可能压根就无法获得足够的利润去支持新药的研发，赚取更多的利润，有时候讲商业是最大的慈善，在宏观和微观，群体和个体之间是悖论的存在。 &emsp;&emsp;过去五六年所谓新技术的使用背后都是阶层利益争夺的加剧。这是我对互联网提出的观点，互联网是什么，赢者通吃，基本上一家独大，金融是暴利，寡头垄断，暴利，也有是说两个合在一起的结果是赢者越来越暴利。 &emsp;&emsp;人类社会走到今天，10%的人会变得越来越强，90%的人变得越来越弱，估计再走下去还会更极端，2%的人越来越强，98%的人越来越底层。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>杂说</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基于Mesos的容器调度系统]]></title>
    <url>%2F2018%2F07%2F02%2F%E5%9F%BA%E4%BA%8EMesos%E7%9A%84%E5%AE%B9%E5%99%A8%E8%B0%83%E5%BA%A6%E7%B3%BB%E7%BB%9F%2F</url>
    <content type="text"><![CDATA[前言&emsp;&emsp;从去年下半年开始到今年上半年时间，我一直致力于容器云平台PaaS系统的建设。从概念设计到整体架构，我全程参与其中，期间经历过激烈的争吵讨论最终定型，上个月底已经上到生产环境接收第一个版本的流量冲击考验。&emsp;&emsp;当时纠结于是否直连和代理两种方式实现微服务之间的调用。走直连模式会带来客户端升级的问题，比如版本冲突和兼容，走代理模式会带来性能损耗，但是微服务之间调用的客户端实现可以非常轻量，同时也给代理网关层提出了非常苛刻的要求。当时领导想的很简单，采用zuul网关去做这层代理，我很快实现出来，还发现了netflix的ribbon客户端的一些bug。下图是领导设计的第一版架构图： &emsp;&emsp;上图采用zuul做内网网关，服务之间调用使用服务名+http协议通过zuul网关发起调用，网关层面去做服务发现和负载均衡，这样服务之间调用的客户端就会很轻量，这和当下的service mesh的理念也比较契合。但是这里面最核心的问题，zuul采用的同步调用，意味着一个请求会占用一个线程，在极端情况下会导致线程数爆增。再有就是这套东西很难和目前公司的esb相兼容，这样导致这个新体系只能接受新项目，老项目还不能嵌入到我们的发布体系中。可能老大也是考虑这个原因，参考携程的基于nginx的slb来替换内网zuul网关。其实早在携程我就研读过nginx的源码，对第一版slb的源码也很熟悉，到平安以后研究过点评的slb方案camel源码。客观评价，携程slb源码的代码质量和组织架构不敢恭维，相对而言camel更优秀一些。其实私底下，我和团队成员说了，完全可以参考camel定制我们自己的slb。后来确实携程slb的代码没法进行下去，这么重要的东西，必须完全掌握才行，而且领导的这版本只是发包，还不是发的docker镜像。&emsp;&emsp;后期架构就演变成nginx做内网网关，在nginx层上做负载均衡，流量切换和服务治理，发布系统改成基于mesos的调度方式，相对于上图，架构变化很大。我们加班加点确实做完了，代码质量确实不错，临到快要上线的时候，领导想法又变了，slb废弃掉，采用直连的模式。然后我跟领导说，我来重新设计整个体系，其实我是去携程交流以后有的一个大概想法，下面是我设计的架构图： &emsp;&emsp;可以从图中看到，虽然是直连，我还是把slb放到架构里面了，当时的一个想法是想和目前的esb体系兼容，这样用新框架的服务也能被老的服务调用，因为服务总得要有一个域名，不然这个新的服务框架很难被用起来。新服务之间的调用是很省事，通过服务名就可以了，然后服务框架提供客户端。其实我当时设计还有另一层考虑，我是负责无线网关和H5网关的，如果有域名，这样无线网关就能直接复用老的方式，不用从新做调整。而且前面也讨论过，直连和走代理的方式，直连还是存在一些问题，要不然service mesh现在也不会这么有市场。所以我的方案是取了个折中，直连和代理都走的通，方便后期切换，而且兄弟们开发了这么久的slb，好歹劳动成果不能浪费。源码我也看了还是比较靠谱，由于前期争论过多，小组成员还有点小矛盾了。后面和领导争取了，不知道他是故意的还是我没有表达清楚，把我的方案直接给否定了。下面是领导给的第二份架构： &emsp;&emsp;从上图中可以看到没有代理层了，服务之间调用是直连模式。如果是一家从零开始的公司，这套方案到没什么，但是彻底断绝了和现有服务框架兼容的可能性。新服务调用老的esb服务麻烦，老的服务调用新的框架服务也麻烦，更严重的是直连会带来治理的困难。我原先是做过分布式缓存，对客户端版本升级有过切肤之痛。好吧，领导说这么办就这么办，我虽然做的是容器调度，但是对微服务rpc框架也很有兴趣，以前也看过dubbo和motan的源码，我自己也按照这套方式写了一个RPC框架finix，有兴趣的可以看看代码。基于这种直连方式，我设计的发布流程如下： &emsp;&emsp;这段插曲还没完，做到年底快上线的时候，领导想法又变了，说直连不好要换代理模式。哥还是太单纯，和领导顶撞了一下，不是当面顶撞，只是在企业微信群里面就事论事，我说一个方案好不好不是我们闭门造车想一出是一出，应该先定一个设计目标，实现方式有很多种，如果是不确定，那能不能搞一个折中方案，方便切换。我知道变化是很正常的事情，但是都快上线了，中间实现的期间怎么没提出，快上线了提出，不是一次两次了。团队其它想做成事的人估计也有想法，只是经验老道不说，有的是老江湖了就迎合，其实我也是现在想通的。我原先在平安也和产品撕过逼，产品经理上周需求方案是一种，晚上回去我想实现，下周来上班发现需求全部变了，我是经历过这种情况的。但是中间件需求相对来说还是比较集中，这么来回的变就失去原则了。&emsp;&emsp;好吧，经过数次的交锋，最终在集体智慧的努力下定型最终版本，连发布模型也变了，架构设计图如下： &emsp;&emsp;从上图中可以看出代理层从slb换成kong了，之所以换是因为nginx是单机版本的，不是集群版本，每次变更都得更新所有机器的配置文件。实现比较复杂，而且一致性还不一定能保证很好，而kong的配置采用的是数据库存储，天生就支持集群，而且kong从0.11版本以后，变成无状态的了，扩容缩容相当方便，并提供了插件机制可以方便做一些扩展。这块目前是我负责的，也没有做太多的改动，首先是把数据库替换了，换成了mysql，然后就是定制了一个kong的界面管理系统和同步协调器，同步注册中心的一些配置，比如域名集群和IP等信息，相对来说我定制的管理界面是直接操作数据库的，在事务性方面比开源产品直接调用kong admin api的要可靠很多。所以整个的发布流程就是如下的： &emsp;&emsp;首先用户参考我们提供的demo工程，在自己的项目工程pom文件中添加相应maven插件配置，执行相关命令把镜像推送到镜像治理中心。第二步，就是到我们的资产管理中心atlas去申请资源配额，资源配额是按照部门申请的，如果已经申请了就不用再申请，当然如果配额不够了可以申请扩容，这样既能保证资源治理比较合理，也能减少用户操作步骤。第三步，用户可以使用发布系统发布相应的镜像，在发布镜像之前，用户必须选择发布的规格，需要多少CPU和内存，发布系统会去altas去检查是否有剩余配额可以使用，如果不够就提示用户申请扩容，如果可以就进入第五步调用galaxy的api发布容器实例。到了第六步，galaxy通过向mesos发起调度task，这时mesos的执行器启动docker容器，docker engine会拉取镜像。docker镜像启动以后，会将appid，appname，cluster，ip等相关信息注册到radar注册中心。最终这些信息在第九步的时候同步到kong网关。发布系统可以根据发布类型，比如蓝绿部署，金丝雀部署修改注册中心的状态。 &emsp;&emsp;以上就是过去一年多经历的架构演进，走到今天相当不容易。我目前是负责基于mesos的容器调度系统，下面我就重点介绍这块内容。 正文&emsp;&emsp;其实在做这个之前，我是毫无头绪的，以前做一个单一系统对我来说不是太难，一旦涉及到跨系统交互，确实有点难为我了。期间我调研了kubernetes，marathon，singularity等相关的东西，也看了docker和虚拟网络相关的东西。kubernetes对我们来说是黑盒子，而且整体架构又复杂，通过和饿了么的同事交流，kubernete他们试下来并不太稳定，所以最终我们决定是上mesos。基于mesos的容器调度，在携程和饿了么都已经经过生产级验证，稳定性和可靠性方面还是比较有保证。&emsp;&emsp;我实现的基于mesos的容器调度系统主要是参考的singularity，因为singularity使用的是java开发的，不像marathon是scala开发的，只不过singularity搞的过于复杂，而且数据和状态全部存储在zookeeper里面，我自己正常测试和非正常测试下来，不太稳定，如果是zookeeper的数据模型被破坏，就有可能造成不可用，还有可能造成cpu和内存泄露。所以我只是参考它的源码，采用springboot+mysql的方式来重新定制调度逻辑，到现在为止，已经迭代了三个版本。 Mesos原理&emsp;&emsp;在介绍调度系统之前，有必要先了解一下mesos的整体架构原理。同其他大部分分布式系统一样，Apache Mesos为了简化设计，也是采用了master/slave结构，为了解决master单点故障，将master做得尽可能地轻量级，其上面所有的元数据可以通过各个slave重新注册而进行重构，故很容易通过zookeeper解决该单点故障问题。其官网给出的架构如下图所示：&emsp;&emsp;从图中可知Apache Mesos由四个组件组成，分别是Mesos-master，mesos-slave，framework和executor。(1) Mesos-master：整个系统的核心，负责管理接入mesos的各个framework和slave，并将slave上的资源按照某种策略分配给framework。(2) Mesos-slave：负责接收并执行来自mesos-master的命令、管理节点上的mesos-task，并为各个task分配资源。mesos-slave将自己的资源量发送给mesos-master，由mesos-master中的Allocator模块决定将资源分配给哪个framework，当前考虑的资源有CPU和内存两种，也就是说，mesos-slave会将CPU个数和内存量发送给mesos-master，而用户提交作业时，需要指定每个任务需要的CPU个数和内存量，这样，当任务运行时，mesos-slave会将任务放到包含固定资源的linux container中运行，以达到资源隔离的效果。(3) Framework：是指外部的计算框架，如Hadoop，Mesos等，这些计算框架可通过注册的方式接入mesos，以便mesos进行统一管理和资源分配。Mesos要求可接入的框架必须有一个调度器模块，该调度器负责框架内部的任务调度。当一个framework想要接入mesos时，需要修改自己的调度器，以便向mesos注册，并获取mesos分配给自己的资源， 这样再由自己的调度器将这些资源分配给框架中的任务，也就是说，整个mesos系统采用了双层调度框架：第一层，由mesos将资源分配给框架；第二层，框架自己的调度器将资源分配给自己内部的任务。(4) Executor：主要用于启动框架内部的task。由于不同的框架，启动task的接口或者方式不同，当一个新的框架要接入mesos时，需要编写一个executor，告诉mesos如何启动该框架中的task。当然也可以用mesos默认的执行器。 &emsp;&emsp;我实现的容器调度系统galaxy，就相当于是实现一个mesos的framework，负责接受来自mesos-master的资源，根据实际需要决定是否启动容器。整个过程如下图所示：&emsp;&emsp;第一步，调度器通过实现resourceOffers接口，接受来自mesos-master的空闲offer（包含目前空闲的cpu内存磁盘），第二步，调度器根据一定规则匹配，是否满足需求，如果满足就调用lanchTasks向mesos-master发起调用进入第三步，否则就直接拒绝offer。第三步，mesos-master向mesos-slave发指令启动task，这时mesos-slave收到指令后，开始向executor发起task调用，或是启动容器，或是启动jar包。启动完成之后，进入第四步，执行器会将task的状态上报给mesos-slave，mesos-slave再上报给mesos-master，最终由mesos-master告知调度器task的最终状态。注意mesos不保证消息的可靠性，也就是说有可能会丢失消息，但是mesos提供了确认机制，可以基于增量和全量的同步，这样保证了状态的最终一致性。 容器调度系统Galaxy功能设计1、支持JOB、Service、Worker、One-Off&emsp;&emsp;支持定时任务，也支持瞬时任务，同时也支持长期运行任务，service和worker都是长期任务，区别在于service要接入负载均衡，worker是后台进程不对外提供服务，也就是不用接入负载均衡。2、支持发布镜像和jar包&emsp;&emsp;支持两种方式，不仅能启动docker容器，也能直接启动springboot的jar包。3、动态伸缩容器实例&emsp;&emsp;能直接在线扩容缩容docker实例。4、销毁容器&emsp;&emsp;销毁容器实例。5、IP资源池管理&emsp;&emsp;由于我们生产目前采用的是macvlan的网络模型，所以为了解决ip冲突问题，添加了ip资源池的管理。我们不仅支持host，还支持bridge网络模式。6、故障转移&emsp;&emsp;故障转移就是当有容器实例挂掉以后，能自动的重启相应容器实例。7、日志审计&emsp;&emsp;我们提供了后台管理界面，提供日志审计方便日后的维护工作。8、故障告警&emsp;&emsp;当有容器或者机器挂掉以后，必需给出相应告警。9、集群管理&emsp;&emsp;我们对物理主机进行了逻辑隔离划分，能管理集群和机器的上下线，当然这部分目前没有使用。 整体调度逻辑&emsp;&emsp;虽然整个调度逻辑不复杂，但是刚开始比较匆忙没有设计好，在实际开发测试过程中，经常因为状态不一致导致拆了东墙补西墙，而且前面两个版本对数据库冲击比较大，到目前第三个版本已经比较稳定了，各个模块之间都解耦了。调度逻辑如下图所示：&emsp;&emsp;首先是用户通过api或者界面添加相应的Deploy，我们定义一次发布单元叫Deploy，添加完Deploy之后，就等待mesos框架的调用，这时galaxy会根据一定规则先搜索Deploy库，找出active状态的Deploy，然后和mesos传过来的offer匹配，如果匹配上了就发起调用，否则拒绝offer。当发起完调用之后，galaxy就要等着更新task的状态，只有一个Deploy的所有task都启动完了，这个Deploy才算完成了调度，否则就算超时或失败。这里面涉及到几个状态的更新，还有事务。 Galaxy界面&emsp;&emsp;目前处于最小可用版本，优先保证稳定性。整个操作简单易用，界面风格如下：&emsp;&emsp;用户可以在主界面查看现有的Deploy列表和状态，也能激活和停止Deploy，还能扩容缩容Deploy。如果要添加Deploy，可以通过以下界面：&emsp;&emsp;用户填好相关内容，选择启动的类型，jar包或者image，然后指定相应的网络模型，如果是bridge还要指定相应的端口映射。其它还有一些相关操作就不做具体介绍了，有兴趣的朋友可以留言给我。 Galaxy API&emsp;&emsp;除了使用界面添加Deploy，我们也可以通过API来发起调用。以下是添加Deploy的API： 123456789101112131415161718192021222324252627282930313233343536POST /api/deploy&#123; "appId": "string", "appName": "string", "appType": "string", "cmd": "string", "cpus": 0, "disk": 0, "dockerParametes": &#123;&#125;, "envMap": &#123;&#125;, "forcePullImage": true, "instances": 0, "keepAlive": true, "memory": 0, "networkType": "string", "packageId": "string", "packageType": "string", "packageUri": "string", "portMappings": [ &#123; "containerPort": 0, "hostPortIndex": 0, "protocol": "string" &#125; ], "ports": 0, "privileged": true, "tag": "string", "volumes": [ &#123; "containerPath": "string", "hostPath": "string", "mode": "string" &#125; ]&#125; &emsp;&emsp;相关其它API还有很多，可以通过swagger ui查看，下图是通过swagger界面查看的相关Deploy的全部API： 容器监控&emsp;&emsp;容器监控有很多方案，我们采用的telegraf+grafana+karisdb做的，我也调研了Prometheus的相关方案。目前监控界面如下： 结束语&emsp;&emsp;Galaxy容器调度系统就介绍到这，从事情经过的来龙去脉到原理架构，以及Galaxy的相关设计，整体脉络我是介绍清楚了，里面的一些细节就不做过多阐述了。去年大半年的时间都在做这些事情，虽然是工作以来最累的，但是收获确实很大。不仅仅是扩展了技术视野和相关技能，也扩展了跨系统解耦相关的一些经验，如何确定系统边界，如何系统交互更好，第一次体会到这种挑战。同时也积累了一些问题，主要管理方面的问题，都强调领导力，其实有时候还真得靠原则强压，领导指望下面的人跳出来，下面的人又一个比一个牛逼，这个时候就需要领导协调，因为只有你看得更远，这样争论来争论去，中国人难免会有小疙瘩。我是见过了见怪不怪，后面发现太浪费时间了，我也就只有私下建议，不在争论了，因为有些事情不一定非得那样走不可，而有些人自己不承担责任非要别人按照他的意愿走。通过经历这些事情也识别了一些比较靠谱的同事，也识别了一些人不坏但是不切实际的同事，为以后转管理方向积累了不少经验值。]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>容器云</tag>
        <tag>Mesos</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[有关学习的看法]]></title>
    <url>%2F2018%2F06%2F29%2F%E6%9C%89%E5%85%B3%E5%AD%A6%E4%B9%A0%E7%9A%84%E7%9C%8B%E6%B3%95%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;最近看了吴军老师有关教育与命运关系的博文，说实话看完以后内心不免刺痛，但是确实现实就是如此。都说人人生而平等，那只是法律意义上的，每个人出生就面临不平等，有的人努力20%就可能比有的人努力100%获得的效果大，连付出与回报都是不平等的。有时候确实令人沮丧，以至于有读书无用论出现。但是不管怎样不应该成为放弃教育和读书的理由，某种程度上教育和读书应该是每个人终生的习惯。不可过分拔高教育，也不可过分轻视教育，其实每个人的命运从出生就已经注定，教育只是加速和减速这一过程的实现。你可能觉得我有点宿命论，其实不是，我是看了了凡四训以后改变了这个看法，吴军老师的真知灼见在我看来并不圆满，当然限于我目前阅历不够，这个话题我还没法聊。我今天只想聊聊学习的一点看法，我觉得教育最重要的是教人学习，能自我教育，我们在学校受教育时间是很短的，大部分时间得靠自己学习获得认知。&emsp;&emsp;关于学习，我们从小听过头悬梁锥刺股的典故，好像只要把时间花在读书上就行了。因此我们对学习的概念就是除了睡觉，其它时间就应该看书学习，死记硬背。可是高中这套方法下来，我并没有收到良好的效果，学没学好，玩没玩好。我是到大学考研阶段开始怀疑这个认知观念并获得了好处。背英语四六级单词词汇时，是一个北大老师教给我的方法，我不再和自己作对，按照他的方法真的很轻松记住了（当然这是对比以前，其实也不轻松的，看来人有时受点挫折是好处）。不会有以前那种痛苦的经历，只求一时一劳永逸解决问题，但是往往花很大精力当时记住过后忘记了，常常导致自己很自责怎么自己这么笨。&emsp;&emsp;以上这些都是我以前学校教育时的挫败感，也不能太怪我自己和我以前的老师。当然以前的老师可能很负责，但是只会教书本知识，只是考虑自己的绩效，表面上对学生很严很好，其实不负责任。这也是农村教育和城市教育的差别，城里的老师不仅教知识，还教应试技能和学习方法，甚至还研究出题套路，导致城里学生在学习上在做乘法，农村学生在做加法，只能是城市和农村教育差距越来越大，现在的北大清华农村生源占比很小也就不足为怪了。&emsp;&emsp;现在有一个流行的学习风格分类模型叫 VARK，你可以到它的官方网站测试一下自己喜欢的学习风格。VARK 把学习风格一共分成四种：视觉、听觉、读写和动手实践。如果你是视觉型的，你可能喜欢用看图片的方式学习；听觉型的可能更愿意听老师讲；读写型的人爱用读书和记笔记的方法；动手实践型的人最爱做实验和演示。测试结果是学生们的确有不同的类型，还有的学生是混合型。&emsp;&emsp;以前关于学习风格的研究主要是针对课堂教学，比如说如果学生喜欢视觉化的教学，就专门给他视觉化的教育，已经证明这种方法并没有什么好效果。现在网络教育越来越普及，很多时候是学生在家里自学，课堂教学可能不像以前那么重要了。那就自学来说，跟学生喜好匹配的学习方法有没有好处呢？答案……还是没好处。看来“享受”，不等于就能学得更好。研究还发现，特别是有一些很多学生都喜欢的方法，恰恰是对谁都没好处。&emsp;&emsp;那到底有什么方法是有效的呢？心理学家几十年的研究结果，真正有效的方法对每个人都有效，不管你喜不喜欢都有效。总结来说，有效的方法是这样的 ——第一，对于一定的内容，你要在学习时间上安排一定的间隔，不要突击学习。这个间隔学习法的原理是人脑的“记忆曲线”。隔一段时间回想前面学过的，然后再学新的，这个方法最有利于记忆。暂时忘记是为了更好的记住。第二，你可以在不同的场景下、用不同的方式学习同一个内容。第三，你要经常参加测验，看看自己是不是真的掌握了相关的知识。第四，你要把新学到的知识和以前的知识建立连接。&emsp;&emsp;工作这些年，我发现身边优秀的同事学习模式基本都相识，学习不好的同学各有各的学习方法。有时候学习你得刻意练习，刻意练习同一动作，意味着你不断的在犯错，不断的在沮丧，你要不停地重复这个过程，直到真正学会为止，所以任何进步都是一个艰难的过程。从来没有任何一位先贤说应该寓教于乐。教育哲学家从来都认为获得知识是一件困难的事情，学习是要付出代价的，耐力和汗水不可少。教育的目的，本来应该是摆脱现实的奴役！要想获得出色的思辨能力，对年轻人来说绝非易事，这是异常艰苦卓绝的斗争。&emsp;&emsp;学习是一场斗争。这个知识你不懂，这个技能你不会，这个现实你改变不了，那你怎么办？你得斗争啊！寓教于乐不是最有效的学习方法。你喜欢愉快的学习过程，但你更喜欢获得真知。管用的方法不好玩，只有付出了努力和汗水，有过挣扎和斗争，你才能真正掌握知识。纪录片吸引观众的唯一办法是讲故事，用讲故事取代说理，用动之以情取代晓之以理。看完故事你得到了精神上的享受，觉得很愉悦，你能记住一件新鲜事儿 —— 但这跟真正的掌握是两码事。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>杂说</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[佛学浅谈]]></title>
    <url>%2F2018%2F06%2F29%2F%E4%BD%9B%E5%AD%A6%E6%B5%85%E8%B0%88%2F</url>
    <content type="text"><![CDATA[前言&emsp;&emsp;我和佛教结缘是小时候在外婆的熏染下接触到的，真正对佛教有认识和研究的时候是大学期间，为佛祖当年达到的思境之华丽和思维之缜密而震撼。释迦牟尼是人类历史上至今为止最伟大的思想家，没有之一。什么叫思想家？我们经常乱用这个词，所谓思想家应该是将世界归零重新解构世界的人才能成为思想家，举个例子，比如牛顿的万有引力定律，牛顿以前的人认为运动是需要力的，静止是不需要力的，但是牛顿的看法正好相反，认为运动是不需要力的，静止才需要力，普通人之所以认为运行需要力，是因为我们在力的杂项中考虑，根本无法解构力的本源，没有把摩擦力这个变量加入参考，牛顿既然认为运动不需要力，那他就继续追问，最初做惯性运动的那把力是谁推动的，他认为是神是上帝，虽然他找错了，这足以证明牛顿是一个思想家而不是物理学家。按照这个标准人类历史上能称为思想家的不过十几人而已，而释迦牟尼就是其中最伟大的思想家，释迦牟尼将世界归零归到大空境，在大空境的基础上解构世界。 正文&emsp;&emsp;佛教起源于印度，上个世纪考古学家在印度发现了距今约四千年前的印度土著文明—哈拉巴文明，有用泥土烧制的砖构建的显然经过统一规划的城镇，而且在这个出土遗址里面发现了规模宏大的地下给排水系统，以至于有学者认为罗马帝国在古罗马城修建的地下给排水系统就来源于这个哈拉巴文明，但是这个文明在公元前1500年突然消失，而且这个地方连人种都被替换了，现在的印度人是雅利安人，和西方人是一个人种，印度的语言梵语都是印欧语系。佛教在产生以前，印度就已经有了吠陀文化，吠陀文化包括5大内容，第一是内明（问内心问灵魂的宗教内向探求，表达为婆罗门教），第二是声明（语音相关的体系），第三是因明（逻辑体系），第四是工匠明（工匠技术体系），第五是医方明（医学体系）。吠陀文化的5大部分，前三项是西方环地中海文明所具备的，东方中国文明不具备，中国文明只具备后两项。从思绪上看，印度文明兼具东西方文明共同的特色。印度文明现在的种姓制度，表达的是印度土著逐步被雅利安人取代，对先后取代者划分的四个等级，这个也从侧面说明印度这块地方不仅人口资源关系紧张，人际关系过于扰攘，还面临外族入侵的双重苦难，就其苦难性和压抑性，比中国农业文明更严重更消极。 &emsp;&emsp;佛教在东汉中期传入中国，之所以能在中国发扬光大形成和儒释道三家三足鼎立的局面（以至于现在讲国学，如果不懂佛学，那他肯定讲不明白国学）除了佛学思想华丽和思维缜密外，还必须具备和中国文明冲突不大和互补的特点。其实早在唐朝基督教，拜火教，伊斯兰教等很多宗教传入中国，唐朝的统治者不是汉人是鲜卑人，没有汉人所谓的夏夷之变，所以唐朝成全面开放态势，这些宗教是充分竞争的，除了伊斯兰教在中国西北扎下根外，其他宗教早早退出了中国历史舞台，为什么伊斯兰教能在中国西北扎下根能呢？这和唐朝一个有名的将领叫高仙芝，和当时的大食帝国打了一场著名的败战怛罗斯之战，导致伊斯兰教以武力的方式在新疆地区扎了根，而佛教完全是中下层人自发的精神追求。其实佛教在传入中国时和当时中国文化发生了强烈的冲突，任何文明的对接都相当困难，比如佛教讲究剃发，而中国文化表达的身体发肤受之父母不得毁伤，再比如加入佛门不能娶妻生子，而中国文化表达的是不孝有三无后为大。再就是佛教华丽的思想体系在当时几乎将中国文化全部打垮，以至于后面朱熹不得不借用佛教的逻辑学来改造儒学，产生理学，这相当于近代鸦片战争时期的中国文化受到强烈的质疑。 &emsp;&emsp;佛教是从追问人生开始，这个和中国文化追问人伦社会学问题比较契合，再就是中国文化比较原始，早期的中国思想家都是关注人伦，很少关注自然，除了老子道德经追问过自然之道外，但是也仅仅是只言片语的散点式讨论。而佛教的庞大华丽的宇宙观，即时是今天的科学也很难达到的高度。 而且当时中国的文字很贫乏，无法全面翻译佛经，文化对接相当困难。比如早期将空翻译为无，但是后来发现佛教讲的空和无还不一样，老子讲的无是要生有的，而佛教讲的无是大空境，其实在甲骨文中空表达的是一个器具中间那部分，选择空这个字表达佛教的空只能赋予它更多的含义。早期将佛陀翻译为觉悟，后来发现翻译错了，中国式觉悟是指一个人在社会实现自己意志的一种悟性，而佛教讲的觉悟正好相反，不是实现自己的意志，是认识人生的苦难绝不在这个世界上折腾。再如般若，早期将般若翻译为智慧，后来发现翻译错了，中国式智慧是指一个人将世俗的利益攫夺到自己手中的能力，而佛教的智慧是中国式智慧的相反，最后发现找不到中国字表达佛陀的含义，只能选择梵语的音译。民国时期的梁启超先生曾经根据一部佛教字典，发现佛教带给中国的词汇至少35000个，比如作业，功课，缘分，功德，自由，罪孽，平等，世界，慈悲，博爱等等，如果将佛教从中国文化中剥离，中国的语言文字将极其贫乏。中国古代之所以万邦来朝，是因为当时中国是文明的传播者，不像近代鸦片战争的清朝，固步自封愚昧无知，近代日本之所以迅速崛起和日本是文明的传播者有很大关系，比如化学，物理，生物等一系列词汇均来自日本的翻译。 &emsp;&emsp;公元前6世纪的轴心时代，释迦牟尼佛诞生，在佛陀降生时，佛陀的父亲净饭王请婆罗门教的大沙门为佛陀取名悉达多，大沙门对佛陀进行了预言：赤子或为转轮圣王或为教宗，这导致净饭王十分担心，为此佛陀的父亲为他修建华丽的王官，全是俊男美女相伴左右，以至于悉达多太子在19岁前没有出过王宫，有一天悉达多在他的仆人车匿的带领下第一次走出王宫，看到这个世间的生老病死之苦，给他造成强烈的视觉和思想冲击，这就是四门游观的典故，最终导致他放弃太子的生活，去寻求了生死灭苦悲的解脱之道。在当时尝试了当时几乎所有宗教的各种苦行，苦思冥想若干年不得真谛，曾经差点把他饿死，终于有一天在进食了牧羊女供养的牛奶后，在一棵菩提树下苦思七天七夜终于宣布顿悟成佛。 &emsp;&emsp;佛教是唯一一个无神论宗教，没有偶像崇拜，现在的塑造佛像是对佛教原教旨主义的背叛。现在的人去寺庙求升官发财，去有所求，显然是没有搞清佛教的宗旨。去寺庙应该只要做到四个字静心礼佛就可以了，这才是真正的拜佛。 佛教思想是在佛陀圆寂以后，由500大沙门第一次集结，由佛陀的大弟子诵读出佛陀的言论，将佛陀的言论写在贝多罗树叶上称为贝叶经。显然听过佛陀言论的小沙门也很多，后来的小沙门认为第一次集结不够完整，后来经过多次集结完成了现在的佛经。佛经分三藏，经藏，律藏，论藏。所谓经藏就是记录佛陀的言论，所谓律藏就是修佛所需遵守的戒律，所谓论藏是为了修佛对经藏和律藏所做的阐述。经过学术界研究发现绝大多数佛经都是后人的杜撰，比如父母恩重难报经，学界比较公认的是阿含经，杂阿含经比较符合佛陀的原教旨。 &emsp;&emsp;佛教讲苦，佛家讲东西全是逻辑化的讲解，这个是中国文化所欠缺的。所谓八苦生老病死成住坏空，生老病死指你身体的苦难，成住坏空指你生存环境的苦难。你做任何事情看来是成的，好像也维持住了，但是你很快发现它开始败坏最终流为消失，叫空。也有人认为佛教的八苦是生老病死忧悲恼苦，前四个字是指身体苦，后四个字是指精神的苦难。既然佛教认为人生是苦，那就要问苦的根源在哪里？这就是集谛，贪婪和欲望之恶习是你发生八苦的原因，所以集圣谛也称习圣谛。佛教集谛也分三毒三业，三毒是指贪嗔痴，你的苦难根源就来源于贪婪，发怒，愚痴，所谓愚痴是由于你处在贪婪和嗔晦的虚像之中，所以你无明，你看不清这个世界本身是什么，甚至你看不清自身是什么，这导致了你苦难的开端。业是指对外做的动作，不仅指行为也指思想意识称为意业。佛教认为这个世界本真是大空境，就是什么都没有，所谓世界是什么，就是你作业派生的产物，或者说是你做孽派生的，叫业障也叫孽障。佛教讲三业讲身口意，身指你的身体你的行为，口指你的语言，意指你的念头。也就是你每一个动作，每一句话，每一个念头它都会相应派生出你的世界。佛教所说的世界永远是你派生的那个世界，不是客观世界，客观世界的本真在佛陀看来就是大空境，你所说的世界就是你三业派生的产物。既然找到了根源，佛教肯定要追问怎样消除苦集，这就灭谛，由此引出了涅槃的概念。中国有很多对涅槃的误解，叫凤凰涅槃再生，这完全是搞错了。所谓涅槃可以这样比喻，就是下辈子绝不做人，这样说还不够，下辈子绝不做生命，还不够，下辈子什么都不做。你要通过修证把自己修到下辈子绝不在三界六道中轮回真正把自己归为大空境才叫涅槃。涅槃在佛教上讲的很细，主要分三讲，有余涅槃，无余涅槃，无住涅槃。所谓有余涅槃是指在圆寂肉身毁灭后将自己归为大空境，这个是高僧大德修持终身所能达到的最高境界，所谓无余涅槃是指在肉身没有毁灭就将自己归为大空境，能达到这一境界的目前只有佛陀一人，无住涅槃是佛教大乘化以后引出的一个概念，原始佛教是独善其身，也就是小乘佛教，只是由于中国文化讲究积极入世，所以才导致佛教进入中国大乘化讲究普渡众生。所谓无住涅槃是指进入涅槃状态以后还能普渡众生，目前也只有佛陀一人达到。既然灭除苦集就是进入涅槃，那紧接着就要追问怎样才能进入涅槃，由此导出了道谛。所谓道谛就是修持戒欲以生正觉是摆脱苦难的唯一出路。所谓佛，就是达至正觉。佛不是一个特殊的神，任何人只要达至正觉就是佛。所以佛讲三学讲六度，所谓三学就是戒定慧，戒就是戒绝一切世俗正常生活，因为世俗的生活是在实现自己贪欲的基础上才能维持生计。戒是指肉身不在正常生活中，定是指你的念头不在正常思境中，也就是你的念头不受外界信息的干扰，和外部红尘过来的一切精神世界隔绝。所谓慧是指你在戒和定的基础上修出佛那个觉悟，也就是去掉了痴达到无明境界。所谓六度是指：布施度，持戒度，安忍度，精进度，禅定度，般若度。佛教讲布施度是一个反生命的操作，任何生命要想维系自己的存在必须获取外在资源，而佛教的布施度是向外释放，佛陀当年讲的很细，不仅指财布施和法布施，比如眼布施–对外释放一个柔和的眼光，言布施–对外说一句仁和的话，颜布施–对外释放一个微笑的面容。接下来是持戒度，戒定慧的戒，但是这个不是佛教通常讲的戒规，而是要和世俗生活隔绝叫持戒度。再下来是安忍度，所谓安忍度就是不嗔晦，不怨不怒，将一切苦难视为当然，安之若素叫安忍度。再下来叫精进度，也就是戒定慧一级一级的修持。再接下来就是禅定度，摒弃六尘的干扰并抑制自己的意识流和心理活动，达到心无所住而生其心。最后才是般若度。 &emsp;&emsp;佛教讲人生八苦生老病死成住坏空，生命在一发生就是苦难，生命追求存在必须寻找外在的资源才能新陈代谢，而生命所依附的环境又面临成住坏空，所以生命一发生就很脆弱，它必须依靠外在才能依附。佛教讲业力因果，你做任何一个业都会给你派生一个世界。佛教讲无我讲空，哪里来的业？你怎么理解，你很难理解。康德曾经在哲学上研究发现，人类将理性用到极致就会发生矛盾，他把这个叫二律悖反。比如世界是无限的，这个在逻辑上对，因为你无法想象一个有限世界的外面是什么，比如你说世界是有限，这个在逻辑上也对，因为你无法想象无限的世界是什么样子。上个世纪著名的数学家哥德尔发现在任何一个孤立的数论系统里面，如果是自洽的那它一定是不完全的，称为哥德尔不完全定律。所以佛祖在宣讲他的思想的时经常是一言不发，还因此产生了一个佛教宗派—-禅宗。佛祖当年在面对哲学问题时，经常一言不发，比如你问世有界还是无界，这个问题在佛祖那里是没有的，因为佛祖的世界是大空境，你之所以问这个问题是你对这个世界本真是什么毫无了解。所以佛陀当年讲你要学佛，你不能从逻辑上去学，因为人类的文字很贫乏不足以表达佛学思想，你要用生命去修持自证灭度苦生，你不能用闻思修的方式在纯逻辑的基础上去达到对世界本真的认识。比如佛讲业是根存在你的第八识阿赖耶识中，你做任何一个业都会在第八识留下痕迹，如果你没有修证到大空境，第八识的业会牵引你在六道中轮回。佛学不是哲学，远比哲学深刻。现在物理学超越爱因斯坦的理论提出玄论，认为宇宙是有限的，宇宙外面还有宇宙，整个宇宙是一个泡沫宇宙，这个和佛教讲的大千世界很接近。佛教讲色界，欲界，无色界，佛陀当年就知道我们人能感知世界仅仅是很小的一部分，比如人类不能感知暗物质暗能量。 &emsp;&emsp;佛教的核心是缘起理论，概括起来就是此有则彼有，此生则彼生，此无则彼无，此灭则彼灭。佛教认为通常所说的世界是虚像，不是实像，佛陀认为这个世界本真是大空境。你所说的世界永远是主观世界，根本不是客观世界，是你的身口意三业派生的产物，是虚像不是实像，这叫此有故必有。在大学期间，我们往往认为唯物主义比唯心主义高级，这主要是中国把马克思哲学当做哲学的高峰，其实马克思根本不是哲学家，去读一下康德，佛学著作，其中的思境之高，常人难以达到，这么理性的人他们难道不知道这个世界是客观存在的吗？早期人类的思想都是唯物的，后来哲学发展到认识论阶段，因为人的眼耳鼻舌等感觉器官感受客观世界不是真空的管道，比如在客观世界是没有明亮的，只是光波打在你的视网膜通过末梢神经传导到你的视觉中枢上你错觉为明亮，然后你认为那就是光。注意人将思想加在对象本身上考量，只能表明你还很愚蠢，你只有将思想加在思想本身上考量，你才进入知识的门槛，所以唯心主义是唯物主义的高级阶段，这也是康德的不可知论这一派哲学在西方占有很重要地位的原因。在2500年前，在没有科学知识的情况，佛祖就已经知道你所说的世界是虚像，就达到如此高的思境，简直令人惊叹。人的感官系统是为求存而设立，不是为求真而设立。比如人为什么把对自己有害的物质尝为是苦的，因为你只有把它尝为是苦的你这个物种才安全，比如为什么人要把对你有能量的物质尝为是香甜的，因为你只有尝为是香的，你才能找见自己的能量来源，要不你就会被自然选择淘汰，你就会被饿死。可见人的主观是有规定性的。所以苦的东西一定对你有毒，建议少吃药少吃苦瓜。 佛教讲第七认识末那识，也称我识，佛陀当年发现人类的感官系统感受外部世界是以我为起点，有趋利避害，人类的自私自利都是源于此，而且第七识执着于阿赖耶识的种子，认为那就是我，所以一旦外缘和种子识发生作用，导致做出不可思议的行为，因此佛教讲不执着。第八识阿赖耶识，简称藏识，你对外做的每一个业都会潜藏地根存在你的第八识中，使得你根本不能清除自己的业，从而不能进入涅槃境界，这也是修佛极其困难的原因，这叫此生则彼生。你每做一个业，不是给你派生一个业，而是给你派生一个连环的系列的世界景象，这叫此有则彼有，如果你不能修正到大空境，这些业力将跟随你的第八识在三界中流转。你只有通过修为将你的某一个业消除，那么跟这个业相关的世界的一面也随之消失，这叫此灭则彼灭。你只有把你所有的业都消了，你才能修到大空境。 结尾&emsp;&emsp;佛学浅谈介绍到这，最后说点题外话。普通人认为佛学是封建迷信，是消极逃避，或者是避世消极的思想。其实佛学不是，佛学包含着终极人文关怀，是让人获得彻底的自由。佛并不反对在世俗中奋挣，反对的是你被某个欲望劫持，追求错误的东西。如果你不是佛教信徒，你也不妨看点佛学方面的东西，就我个人而言确实对身心有好处。生活如此艰辛，就应该多和思想家沟通，这样才不会孤单困惑，难道不是吗？]]></content>
      <categories>
        <category>佛学</category>
      </categories>
      <tags>
        <tag>佛学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[王朝崩溃洞见]]></title>
    <url>%2F2018%2F06%2F24%2F%E7%8E%8B%E6%9C%9D%E5%B4%A9%E6%BA%83%E6%B4%9E%E8%A7%81%2F</url>
    <content type="text"><![CDATA[前言&emsp;&emsp;读历史就是读逻辑，前段时间我分享了计算机科学家对因果逻辑的观点。今天我要分享的是关于王朝崩溃的逻辑真相，其中就用到了常人习惯性错误的因果思维。 正文&emsp;&emsp;如果你对历史感兴趣，相信你一定对这么一段开场旁白印象颇深，XX末年，官府腐败，土地兼并，民不聊生，流民四起，天下大乱通常情况下，你会看到这样一幅图景，不顾农民死活贪婪地兼并土地的地方恶霸，拼老命打压脑满肠肥之“恶势力”却无力回天的朝廷命官，一不怕死二不怕苦、坚信王侯将相宁有种乎的起义军领袖，一群骨瘦如柴如丧家之犬的贫苦流民……类似的故事看多了以后，我们便会不假思索地认可开场白那套逻辑，即：土地兼并是导致流民四起的直接原因。 &emsp;&emsp;如果我们稍加思索，就会对上述这套逻辑提出两组略微质疑，土地兼并与流民四起这两个事儿真的是一个线性的因果关系吗？ &emsp;&emsp;如果是的话，当权者为什么会有这样一个直观感知？既然土地兼并是病因，那对症下药就结了吗，朝廷为了解决流民四起的问题，也算是在抑制土地兼并这个方面使尽了浑身解数，但却为何依旧没什么卵用呢？ &emsp;&emsp;如果不是的话，这是否意味着在其背后还有一层更为复杂的传导关系呢？同样是土地兼并，为何这一问题在朝代初年就显得不是那么尖锐？而在朝代后期，就成为了点燃社会矛盾的导火索呢？ &emsp;&emsp;过往对于朝代崩溃的解释通常是，王朝末年土地兼并导致流民四起，但这个解释当中有一个问题，就是地主兼并了土地并不会任其撂荒却不出租，否则兼并就没有意义了。那么，流民的原因首先就不会是因为土地兼并，虽然土地兼并也确实是存在的，但其中有着更复杂的逻辑。 &emsp;&emsp;在古代社会，地广人稀的情况下，资本投入人力的边际收益更高，地主自营土地的可能性也会因之更高；在地狭人稠的情况下，资本投入土地的边际收益更高，所以地主不自营土地转而对外租佃的可能性更高。对应地，在朝代初年，地广人稀，地主多为自营，有了资本可以用于雇人；而由于获得土地的成本比较低，自耕农便会比较多，地主可雇的人也不多，地主的经营规模相对有限，土地兼并问题也不严重。到了朝代后期，地狭人稠，地主有了资本便会用于土地兼并，对外租佃更多。 &emsp;&emsp;这种兼并使得自耕农变成佃农，佃农只是失去了此前可以获得的收入中的地租部分，但仍然可以拥有资本（如耕牛）和劳动所带来的收入部分。一个朝代承平日久，人口繁衍茂盛，则人力与土地的相对价格便会发生变化。 &emsp;&emsp;人地压力越大，则地租越高，此时土地兼并的努力便会越强，佃农在利润分配当中所占份额越来越小，最终导致份额不足以糊口，或者根本租不到地了，甚至欲为雇农亦不可得，就会出现流民，帝国秩序濒临崩溃。 &emsp;&emsp;但是这时由于地狭人稠，投资土地的边际收益很高，所以朝廷努力抑制土地兼并是不可能成功的，因其违反经济规律，必然失败。只能等待朝代崩溃，人口锐减，地权重分，再进入地广人稀的状态，以待下一次循环。 &emsp;&emsp;所以，每一次朝代崩溃，关键的问题并不在于土地兼并，而是在于人地压力。只不过对于朝廷来说，其直观的感知是，土地兼并导致流民越来越多，于是试图通过抑制土地兼并解决问题，但实际上此路不通。 &emsp;&emsp;至于人地压力发展到何种程度会导致崩溃，其临界点的高低，与帝国的财政制度有关。 &emsp;&emsp;税基为人的情况下，佃农的财政压力相对于地主来说比较大，临界点就会比较低，历史数据表明，人口没超过一亿就崩溃了；一条鞭法改为税基为地，以及雍正时代摊丁入亩，全面税地，佃农的财政压力相对于地主来说比较小，临界点就会变高，所以到了四亿多人口才出问题。 &emsp;&emsp;但是到了如此之多的人口，意味着劳动力成本已经变得非常低，任何以节约劳动力为目的之技术都不具备经济性，这样，如无外部变量的注入，则中国经济的发展就会被锁定在一个很低的水平上，陷于一种恶性循环当中无法实现突破——庞大的人口只有新的技术跃迁引发的现代经济才能吸收，但正因为庞大的人口本身，使得技术跃迁无法出现。 结论&emsp;&emsp;由此可以得出结论，土地兼并与流民四起有共时性，但这个共时性并不是简单的线性因果关系，而是更复杂的传导关系。里面关键的核心要素还是人地关系导致要素价格变动所致；朝廷财政制度作为外生变量，则决定了从土地兼并到流民四起的临界点何在。而人地关系变化导致的要素边际收益的变化，是朝廷和平统治的时间长度的函数，只要承平日久，则必定会人口增殖和土地兼并，朝廷无论如何挣扎着抑制兼并都不可能成功。 &emsp;&emsp;在传统经济时代，经济基本上属于外延型增长，历史便只能如此循环；只有在工业革命带来内涵型增长之后，才能突破此一怪圈。但是由于“内卷化”的状态，工业革命无法在中国内生性地出现，而只能等待西方力量的注入，这就使得西方的到来在相当意义上成为中国历史的内在需求。]]></content>
      <categories>
        <category>历史</category>
      </categories>
      <tags>
        <tag>历史</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[到底有没有因果关系]]></title>
    <url>%2F2018%2F06%2F14%2F%E5%88%B0%E5%BA%95%E6%9C%89%E6%B2%A1%E6%9C%89%E5%9B%A0%E6%9E%9C%E5%85%B3%E7%B3%BB%2F</url>
    <content type="text"><![CDATA[前言&emsp;&emsp;哲学所研究的问题是那些不言而喻，普通人还没有意识到那还是一个问题的那些问题。如果你还没有意识到这一层，你就不可能是一个拥有哲学思维的人。真正对哲学有点兴趣，顺着逻辑的思路不断追溯追求终极，最终会把你导向宿命论，当然如果你承认宿命论你也是一个肤浅的人。在东方思想里面因果关系是一个公设，是一个不言而喻的真理，但是在西方思想家和哲学家思绪里，是有过明确质疑和讨论的，比如早期的休谟和康德。今天我要聊的话题就是到底世界上有没有因果关系？ 正文&emsp;&emsp;不知道你注意过没有，物理定律里根本就不包括因果关系。比如你拿个气压计测量大气压，物理定律说你的气压计读数 B 和大气压 P 之间有一个正比关系 B = kP &emsp;&emsp;但是这个定律里根本没说“谁导致了谁”。是气压导致了气压计的读数吗？可是上面的方程完全可以改写成 P = B/k，只看方程，你完全可以说是气压计的读数导致了大气压的大小。物理定律只是描述一个规律，并不在乎因果。 &emsp;&emsp;高尔顿的徒弟卡尔·皮尔逊说，因果这个概念已经过时了，科学的世界里你只能谈论相关性。皮尔逊认为我们只是总结宇宙的规律，然后按照规律 —— 其实也就是总结出来的经验 —— 去做事而已。至于说规律背后有没有什么因果关系，到底是谁导致了谁，这个你永远都说不清，也没意义。 &emsp;&emsp;自此之后，哲学家一直在研究，怎么用统计规律定义因果关系。当年皮尔逊说因果就是 A 发生 B 一定发生，就是相关系数等于1。但是这个定义肯定是错的。你想想，树木快速生长的时候，小草也在快速生长，它们两个的相关性就是1，那你能说草跟树之间有因果关系吗？其实是春天到了这个缘故同时导致了树和草的生长。再者，有些因果关系不一定是100%相关。比如有一种药，对大部分人有效，但是对某些人无效 —— 治好了算是运气好，那你能说药跟治病之间没有因果关系吗？因果关系可以是一个概率。 &emsp;&emsp;后来又有哲学家想了个办法。说所谓 “X 导致 Y”，这个因果关系可以用 P(Y|X) &gt; P(Y) 来定义：X 的出现，增大了 Y 出现的可能性。这是一种概率化的因果，但是也不能排除单纯的相关性。 &emsp;&emsp;珀尔倒是给了一个更好的定义：P(Y | do(X)) &gt; P(Y). 也就是说，如果你单方面对 X 做一个干预动作，导致 Y 的概率增加，那么就是 X 导致了 Y。这个可能是目前为止最合理的定义。 &emsp;&emsp;可是不管你怎么定义，你永远都说不清到底什么叫“X 导致 Y”。没油的车开不动，加上油车就开起来了，你说这是汽油导致了车能开 —— 可你能确信吗？难道是汽油想让车开起来吗？也许上帝喜欢车里有油，没油他就不让车开，看见有油了就允许车开……也许一切都是上帝的安排。 &emsp;&emsp;为此哲学家做了大量的调查研究，发现各种相关性。有些相关性很有意义，有些相关性就没什么意义，称之为“伪相关（spurious correlation）”。 &emsp;&emsp;比如说，一个国家的人均巧克力消费量，和这个国家的诺贝尔奖得主人数，有一个非常强的正相关。这就是一个没什么意义的伪相关。你总不可能说吃巧克力有利于得诺贝尔奖。让我们解释这个相关性的话，肯定是巧克力消费量高是因为这个国家的经济比较发达，而经济比较发达的国家容易出诺贝尔奖得主。 &emsp;&emsp;请注意！你只要这么一解释，就用到了因果关系！所谓人类一思考，上帝就发笑。 &emsp;&emsp;这就很尴尬了。你说没有因果只有相关，然后又说有些相关性有意义，有些相关性是伪相关。那你判断有没有意义的标准是什么呢？难道不还是要借助因果吗？无形之中，我们还是觉得有因果的相关性更有意义 —— 虽然我们无法用纯粹理性定义因果。我们如此地倾向于因果思维，从根本上来说，是因为因果思维很有用。一个简单的因果模型，就能胜过无数经验。 &emsp;&emsp;所以有些事儿看似简单，但是细思极恐。而有些人的思想，可以拨云见日。 &emsp;&emsp;美国统计学家休厄尔·赖特（Sewall Wright）。1920年，赖特发表了一篇有关天竺鼠的毛色遗传的论文。他假设有三种因素可能影响毛色，分别是发展（d）、遗传（h）和环境（e），他把这三种因素画成了因果关系图。然后赖特根据自己的实验结果，用解方程的方法算出了三种因素的相对大小。他把天竺鼠的毛色问题给解决了。 &emsp;&emsp;这绝对是开创性的工作。赖特不但第一次使用了因果模型，而且还提出了一个洞见。赖特说，我这个因果模型并不是客观的。你不可能通过数据分析、用机械化的流程得到这张图。因果图之所以这么画，图中之所以考虑了这些关系而没考虑别的关系，这是你自己主观的选择 —— 是你用自己的知识、阅历和判断画出来的。 &emsp;&emsp;也就是说，因果关系，其实是你的主观假设。数据是客观的，而人的观点是主观的。相关性是客观的，因果是主观的。&emsp;&emsp;有了这个洞见，我们解决问题的步骤就是下面这样的 —— 第一步，根据你自己的见识，画一张主观的因果模型图。模型里有些因果关系是概率性的，A 发生并不一定会让 B 发生，只要 A 对 B 有影响就行。第二步，使用实验和数据分析，确定图中每个因果关系的强弱大小。这样你就有了一个完整的因果模型。第三步，使用因果模型，你就可以回答“观察、干预、想象”那三种问题了。&emsp;&emsp;如果 AI 拥有这样的模型，它就等于获得了智能。珀尔称之为“小图灵问题”，相当于计算机通过了一个小的图灵测试：他掌握了因果思维。 结论&emsp;&emsp;你注意到没有，我自始至终没有彻底回答“到底什么是因果关系”，也没有真正解决“为什么”的问题！ &emsp;&emsp;在我看来，因果分析这个思想的最高妙之处就在于，你无须确定真正的因果关系，你无须回答“为什么”。 &emsp;&emsp;真实世界里任何事情都是错综复杂的，你根本就无法列举影响一个结果的所有可能缘故。你必须做出各种取舍，你只能把你认为最重要的缘故画在图上。图画完了，你并没有科学地、彻底地、逻辑完备地回答“为什么”，你只是说，根据你的猜测，应该是因为这几个缘故。 &emsp;&emsp;而事实上也不需要回答“为什么”。我们在生活中的实际应用，对改变世界真正有用的，其实就是回答“观察、干预、想象”这三种问题！ &emsp;&emsp;所以因果分析的最终目的不是查明因果关系，而是回答三种问题。这三个问题比因果关系更基本 —— 因果关系只是我们回答问题的手段。没有这个手段，只靠数据分析，你回答不了第二和第三种问题。当然，有了这个手段，如果你的因果模型不准确，你给的答案也会不准确 —— 你可能会漏掉一个特别重要的因果关系，你可能忽略了黑天鹅事件。但是这不要紧！预测未来的事儿本来就是谁也保证不了100%准确。 &emsp;&emsp;最后，请注意，虽然模型是主观的，但是因果分析仍然具有客观的性质。如果两个人的假设相同，他们画的因果关系图就是一样的，那么接下来的数学方法是客观的，这两个人对未来的预测，必定是100%相同。 &emsp;&emsp;这里边有哲学，主观和客观，非常有意思。按理说这个世界应该是完全客观的存在，科学家一直在试图客观地认识世界。可是我们不管是给东西分类也好，提出因果关系也好，做预测也好,只要你心念一动，你就必然是主观的。]]></content>
      <categories>
        <category>哲学</category>
      </categories>
      <tags>
        <tag>哲学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[对AI的一点看法]]></title>
    <url>%2F2018%2F06%2F06%2F%E5%AF%B9AI%E7%9A%84%E4%B8%80%E7%82%B9%E7%9C%8B%E6%B3%95%2F</url>
    <content type="text"><![CDATA[前言&emsp;&emsp;任你波涛汹涌，我自静静道来，今天要聊的话题是AI。前段时间百度AI负责人陆奇离职，一度登上头条闹的沸沸扬扬，百度因此市值下降几百亿。AI其实并不算一个新学科，早在二战时期人们就已经开始了人工智能的研究，历史上曾经经历过几次低潮期，直到最近这几年深度学习起来以后，人工智能开始重新火热起来，已经成为资本市场竞相追逐的对象。现在甚至到了人工智能恐怖时代，仿佛马上计算机要取代人类大脑，人类马上要被机器打败甚至统治。我今天要聊的，就是要破除这些迷信，还人工智能一个本来面目。&emsp;&emsp;我本人研究生期间做的是数据挖掘方向，是人工智能的一个分支，硕士论文做的是有关BP神经网络方面的东西，曾经为了推导公式原理花了一个多月时间才弄明白，当然现在我都还给老师了。目前我也正在学习TensorFlow，了解相关模型原理，学习这个只是为了满足自己的好奇心，工作中其实用不上。交代这个背景，只是为了说明，聊人工智能我是有背景做背书的。 正文&emsp;&emsp;先来看看早期人们对人工智能的定义，最著名的就是图灵测试。图灵测试是二战时期英国科学家图灵首先提出的，指测试者与被测试者（一个人和一台机器）隔开的情况下，通过一些装置（如键盘）向被测试者随意提问，进行多次测试后，如果有超过30%的测试者不能确定出被测试者是人还是机器，那么这台机器就通过了测试，并被认为具有人类智能。 &emsp;&emsp;以上是AI鼻祖图灵对人工智能的定义，有发现什么问题吗？第一对测试的问题域没有做限定，就是说智能本身是模仿人，人天生是往专的方向走的，只可能对某些领域比较熟悉，不可能全门类全领域全都熟悉。第二对智能没有等级认定，比如三岁的儿童和12岁的儿童，所对应的智能肯定是不一样的，成年人之间也有可能不一样，因为大家的知识背景不一样。第三对被测试人没有做情绪筛选，很容易测试者通过一些刺激情绪的手段作弊判断出人和机器的区别。第四没有对智能提出进化要求，即智能必需能自我驱动自我学习。 &emsp;&emsp;早期的人工智能研究也确实都是模仿人。比如语音识别，会请语言学家搞很复杂的语法规则模型，不管怎么复杂，对识别率都没有明显提升，相反那些规则多到人都没有办法理解的地步，最后都进行不下去，直接导致了后面的人工智能危机，使得人工智能研究陷入低谷，直到后面基于数据驱动的方法出来，人工智能才重新焕发生机。基于数据驱动的方式之所以我个人觉得达到了智能的基本要求，是因为早期的人工智能都是基于规则的，一旦规则库确定，计算机的智能就确定了，机器没有自我进化学习的能力，本质上计算机不能自主发现知识只能匹配知识。而基于数据驱动的方法，可以随着数据量的丰富，自我进化更新知识库具备了一定的学习能力，计算机会变得越来越智能，甚至能从数据中发现人不能发现的知识。 &emsp;&emsp;基于数据的驱动方法给了计算机自我学习的能力，是不是计算机就真的智能了，甚至到了取代人类的地步呢？计算机获取智能的方式其实和人还是有根本不同的，现在的深度学习基于数据驱动的，说到底还是一个高级数学函数拟合器。也就是先把某一个领域的知识建立模型，选取具有参考意义的特征维度表示成向量，然后通过一系列激活函数的组合，最后通过数据不断的训练，调整组合网络中的权重，最终收敛获得一个坐标系中的曲线或者曲面而已。智能的最优解，就是对应组合网络中权重的最优解。说到底就是一个搜索匹配，比如科学家建立一个模型只能解决一类智能问题，并不能解决所有问题，像google的阿法狗就只能下围棋，不会干别的，虽然下围棋比人类厉害，但是识别语音就做不了，自动驾驶也做不了。 &emsp;&emsp;往深了说，计算机只具备概然性思维，不具有因果思维。人工智能所获取的知识是基于以往的数据所建立的模型，至于预测未来都是在这个逻辑模型（收敛曲线或曲面）基础上的线性延伸。人工智能智能回答what，不能回答why，更不能回答how。而我们人类智能之所以高级，能处理多种智能问题，是因为我们是有因果思维链条，能改进我们的智能。我们能根据历史经验也就是数据，能描述what，然后分析出原因，能回答why，了解清楚原理后，甚至能回答how，告诉怎么做到，这相当于创造性思维，这个目前的人工智能还远不能具备。虽然目前AI在某些方面超过了人类，但是AI并不知道它在干什么。而要让计算机理解它在干什么，必须让计算机学会因果关系，这是一条非常艰难的路，也是一条革命道路。 &emsp;&emsp;目前美国的教授珀尔就在做这个工作，他要让计算机学会因果关系。据他研究，他把因果思维分成三个等级： 1. 第一级思维叫观察，通过数据分析做出预测。&emsp;&emsp;你的生活经验表明下雨会把衣服淋湿，所以下次下雨你会打伞，这就是观察思维。观察是寻找变量之间的相关性，观察就是积累经验。目前所有实用的AI技术都是基于这个第一级思维。AlphaGo 下围棋，并不是它理解这步棋有什么用，它只不过知道走这步赢棋的概率会更大。&emsp;&emsp;比如你开个小超市，有卖牙膏和牙刷。观察思维问的问题是，如果一个顾客买牙膏的话，他有多大的概率同时也买牙刷呢？这个知识对你很有用，你可以判断要不要把牙刷和牙膏放一起，它们应该按什么比例进货。 2. 第二级思维叫干预，是预判一个行动的结果。&emsp;&emsp;干预，是说如果我现在把牙膏的价格给提高一倍，对牙刷的销量会有什么影响？这不是以往的数据所能告诉你的。是，以前可能发生过牙膏价格是现在一倍的情况，但是你不能用以前那个经验预测现在这个行动的结果。因为以前牙膏价格高，是因为别的缘故。可能当时牙膏紧缺才卖得贵。现在我们说的是，不管别人家牙膏卖多少钱，你单方面采取行动，刻意地干预牙膏价格，对牙刷的销量有什么影响。这种事儿从来都没发生过。想知道结果，最好的办法是做实验。互联网公司一直都在做各种“A/B测试”，看看哪个标题能吸引更多点击，什么颜色的网页能让用户停留时间更长，都是用分组测试的方法。测试是主动的干预。其实生活中我们一直都在做干预动作。新电影票房不太好，到底应该花钱做个电视广告呢，还是让明星爆个料？以往的经验可以给你一些提示，但干预动作的结果到底会怎样，你需要更高级的判断。 3. 第三级思维叫想象，是对以前发生的事的反思。&emsp;&emsp;第三级思维问的问题是，如果我当时是那么做的话，现在会是一个什么样的结果？我现在工资很低，要是我当初好好学数学，现在从事人工智能工作，现在的工资会是多少呢？&emsp;&emsp;你问的是一个从来没发生过的事情，这叫反事实（counterfactual）分析。如果纳粹德国抢先一步发明原子弹，现在的世界会是什么样的？这件事儿在历史上并有没有发生，你积累的大数据好像用不上。&emsp;&emsp;很多人爱说一句话，叫“历史不容假设” —— 这句话是错的。正是因为我们会假设，我们能想象不一样的可能性，我们才是高级动物。想象是智人的超能力。珀尔引用了赫拉利在《人类简史》里的说法，大约是在七万年前，智人发生了一起“认知革命” —— 智人开始想象一些不存在的东西。&emsp;&emsp;你没当过程序员，但是你可以想象，如果你当了程序员，你的生活会是怎样。能想象没有发生的事，就说明你能对以前做的事做出反思。能反思，你就可以想办法改进。正是因为我们会反事实的想象，我们才会为自己的行动负责。 &emsp;&emsp;对照珀尔教授的研究，目前深度学习基于大数据的人工智能，只在第一层次。更严重的问题，目前人工智能仅仅单纯依靠算法去占领市场完全忽略人性，要知道人性往往趋向于低俗，低俗可能难听了点，说好听一点是庸俗，如果不对算法做约束引导会是什么后果？就像今日头条单纯依靠人工智能算法推荐新闻，如果不加干预，完全依照用户点击推荐，推荐的大部分都是三俗恶搞类型，是的，短时期可以获取用户占领市场，这样下去迟早有一天会作死自己。 总结&emsp;&emsp;好了，介绍了珀尔教授的一些研究和我的一些个人观点，相信你对人工智能有了一个新的认识。就目前人工智能用于自动驾驶，应该来说还有很长的路要走，不仅是法律道德层面问题，更是技术上的问题。前面交代过人工智能都是人赋予逻辑模型的线性思维，不能应对经验以外的突发事件。就算珀尔教授说因果关系才是智能关键，如果你佛学背景深一些的话，因果律相当于佛教理论的公设不容质疑，也符合人类的思考习惯。再进一步，你西方哲学背景深一些的话，因果律都是被质疑的，这个世界混乱到你无法想象的地步，因果律是人类把握确定性，应对生存不确定性的救命稻草。我要说的是，人类在对自身没有搞清楚之前，是不可能搞出一个超出人自身的机器取代人类，所以人类还是有希望的，不必过于担心。只不过马上智能时代来临之前，你要转变的是你的生存形态，不然确实容易被时代淘汰，当然这很复杂，是另一个话题。]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[架构五要素]]></title>
    <url>%2F2018%2F06%2F01%2F%E6%9E%B6%E6%9E%84%E4%BA%94%E8%A6%81%E7%B4%A0%2F</url>
    <content type="text"><![CDATA[前言&emsp;&emsp;一直以来工作中都是基于一个组件一个系统在思考，没有形成系统体系化的思维。最近一年多吵吵闹闹终于定型了整个PAAS系统，目前正处于上线阶段。加上最近作为面试官面试了不少70后名校毕业的架构师，发现有很多人还是停留在我以前的一个状态。资深的人员面试，我一般不问细节，只问架构原理。虽然我知道他们说的那些东西，也知道他们已经到了能说出来但是没有办法表达，当然我知道他的状态是清楚的，只是表达不清楚，因为我经历过这一切。由术上升到道是很多架构师短板，可能一般架构师做一个组件一个独立系统没有问题，但是一旦牵扯到跨系统交互，往往就无所适从。今天我就从个人角度聊一聊架构，解构术背后的道。 架构定义&emsp;&emsp;架构的英文是Architecture，在Wikipedia上，架构是这样定义的：Architecture (Latin architectura, from the Greek ἀρχιτέκτων arkhitekton”architect”, from ἀρχι- “chief” and τέκτων “builder”) is both the process and the product of planning, designing, and constructing buildings and other physical structures。从这个定义上看，架构好像是一个过程，也不是很清晰。为了讲清楚这个问题，我们先来看看为什么会产生架构。 为什么产生架构&emsp;&emsp;想象一下，在早期，每个人都完全独立生活，衣食住行全部都自己搞定，整个人类都是独立个体，老死不相往来。为了解决人类延续问题，自然而然男女群居出现，这个时候出现了分工，男人和女人所做事情有一定分工，但是人每天生活的基本需求没有发生变化，还是衣食住行等生活必需品。 &emsp;&emsp;一旦分工配合作为生存整体，力量就显得强大多了。有些人种田厉害，有些人制作工具厉害，有些地方适合产出粮食，有些地方适合产出棉花等，就自然形成了人的分群，地域的分群。当分工发生后，每个人的生产力都得到了提高，因为做的都是每个人擅长的事情。整体人群的生产力和抵抗环境能力都得到增强。为什么呢？因为每个人的能力和时间都是有限的，并且因为人的结构限制，人同时只能专心做好一件事情，这样不得已导致了分工的产生。既然分工发生了，原来由一个人干生存所必需的所有的事情，就变成了很多不同分工的角色合作完成这些事情，这些人必须要通过某些机制合在一起，让每个人完成生存所必需的事情，这实际上也导致了交易的发生。 &emsp;&emsp;在每个人都必须自己完成所有生活必须品的生产的时候，是没有架构的。一旦产生分工，把所有的事情切分，然后由不同角色的人来完成，最后再通过交易，使得每个个体都拥有生活必须品，而不需要每个个体都做所有的事情，只需要每个个体做好自己擅长的事情，并具备一定的交易能力即可。 &emsp;&emsp;这实际上就形成了社会的架构。那么怎么定义架构呢？以上面这个例子为例，把一个整体（完成人类生存的所有工作）切分成不同的部分（分工），由不同角色来完成这些分工，并通过建立不同部分相互沟通的机制，使得这些部分能够有机的结合为一个整体，并完成这个整体所需要的所有活动，这就是架构。由以上的例子，也可以归纳出架构产生的动力： 必须由人执行的工作 每个人的能力有限 每个人的时间有限 人对目标系统有更高的要求 目标系统的复杂性使得单个人完成这个系统不可能 &emsp;&emsp;当这5个条件同时成立，一定会产生架构。从这个层面上来说，架构是人类发展过程中，由懵懵懂懂的，被动的去认识这个世界，变成主动的去认识，并以更高的效率去改造这个世界的方法。 架构方法&emsp;&emsp;上面说了架构定义以及为什么需要架构。那如何做架构呢？一般来说我总结有如下步骤： 根据要解决的问题，对目标系统的边界进行界定。 对目标系统按某个原则的进行切分。切分的原则，要便于不同的角色，对切分出来的部分，并行或串行开展工作，一般并行才能减少时间。 对这些切分出来的部分，设立沟通机制。 根据3，使得这些部分之间能够进行有机的联系，合并组装成为一个整体，完成目标系统的所有工作。 架构要素&emsp;&emsp;架构中一般需要考虑5个核心要素，分别是性能、可用性、伸缩性、扩展性和安全性这5个架构指标。 1.性能&emsp;&emsp;性能是互联网项目必须首要考虑的核心指标，不然难以应对突发的流量洪峰冲击。一个打开缓慢的网站会导致严重的用户流失，很多时候网站性能是网站架构升级优化的触发器。当然优化站点性能的手段也很多，一般来说主要有以下几个方面： 1) web前端性能优化：1. 浏览器访问优化 减少http请求。 （避免建立太多通讯链路。如将js、css、图片文件尽可能合并，避免太多请求。同时，对于系统的后端请求也尽可能进行合理的设计，来避免出现太多交互） 使用浏览器的缓存。http头设置Cache-Control和Expires。js文件名比如可以带时间戳。一旦有更新则更新时间戳，否则缓存；同时尽量避免同一时间更新大量静态资源。 对静态资源进行压缩。 css放置在页面最上方，js放下最下面。以提前进行css渲染。同时避免js带来的页面阻塞。但需要case by case。比如页面dom节点需要依赖js生成，则可视情况改变文件位置。 减少cookie传输。同时让静态资源有独立域名，发送静态资源请求时候不发送cookie，以此减少传输代价，cookie可以通过document.cookie获取。 2. CDN加速。 缓存图片、文件、CSS以及script脚本。但是PC上的CDN加速效果要好于移动端。经过调研发现，last-mile的延迟越高，CDN的相对有效性越差。 3. 反向代理。 可以提供七层负载均衡（http请求进行均衡策略），并且可以提供静态资源的缓存，请求转发，防止网络攻击等。比较流行的有nginx。 2) 应用服务器性能优化：&emsp;&emsp;应用服务本身优化，一般来说有如下方法： 1. 分布式缓存&emsp;&emsp;站点性能优化优先考虑的是使用缓存。一般来说，存入cache的数据的读写比在2:1以上，而且应该是热点数据。需要考虑如果采用缓存则可能带来的数据短期内的不一致，或者如果实时更新缓存可能带来的性能和资源开销。需要考虑cache一旦失效，大量请求直接命中DB可能带来的服务性能雪崩。所以可以对cache采用集群化部署，以此避免丢失过多数据造成服务压力陡增。对于热点数据考虑进行缓存的预热加载。比如高峰期来临前，先将热点数据提前存入缓存，以此提高高峰期的服务性能。为了避免恶意攻击，一直query不存在的数据，导致cache无法命中而频繁访问DB，可以将不存在的数据也进行缓存并定期清理。同时有机制对恶意请求进行识别和封禁。分布式缓存应该去中心化并集中管理，通过不同实例间的互不通信和同构来保证可扩展性，并降低系统复杂度。 2. 异步化&emsp;&emsp;任何可以晚点做的事情都应该晚点再做，通过分布式消息队列来实现削峰的目的，通过业务配合技术来解决问题。比如12306的排队。 3. 集群&emsp;&emsp;采用集群也是服务虚拟化的一个体现，用以避免单点问题，同时提供更加高可用，高性能的服务。 4. 代码优化&emsp;&emsp;多线程中，如果是密集型计算，线程数不宜超过CPU核数。如果是IO处理，则线程数=[任务执行时间/(任务执行时间-IO等待时间)] * CPU核数。除此之外，我们应该将对象设计成无状态对象，多采用局部对象，适当将锁细化。 &emsp;&emsp;进行资源复用。比如采用单例模式，比如采用连接池。 &emsp;&emsp;合理设置JVM参数，以最大程度避免不合理的full gc。 3) 数据库层优化：&emsp;&emsp;数据库层其实是最脆弱的一层，一般在应用设计时在上游就需要把请求拦截掉，数据库层只承担“能力范围内”的访问请求，所以，我们通过在服务层引入队列和缓存，让最底层的数据库高枕无忧。但是如果请求激增,还是有大量的查询压力到MySQL,这个时候就要想办法解决MySQL的瓶颈了，这时候可用使用索引、缓存、SQL性能优化以及读写分离等手段，还可以使用NoSQL数据库来优化数据模型、存储结构等 4) 衡量网站性能的指标：&emsp;&emsp;站点压测一般考虑响应时间，并发数，qps，95线，99线，cpu和内存负载。 2.安全&emsp;&emsp;互联网是开放的，任何人在任何地方都可以访问网站。网站的安全架构就是保护网站不受恶意访问和攻击，保护网站的重要数据不被窃取。安全的5个要素：机密性、完整性、可用性、可控性和可审查性。 3.可用性&emsp;&emsp;大型网站几乎都承诺7x24小时可用，但事实上任何网站都不可能达到完全的7x24可用，总会有一些故障时间，扣除这些故障时间就是网站的总可用时间，这个时间换算成网站的可用性指标，以此衡量网站的可用性。衡量一个系统架构设计是否满足高可用的目标，就是假设系统中任何一台或者多台服务器宕机时，以及出现各种不可预期的问题时，系统整体是否依然可用。 &emsp;&emsp;一般就三个手段：冗余、集群化、分布式。 &emsp;&emsp;网站高可用的主要手段就是冗余，应用部署在多台服务器上同时提供服务，数据存储在多台服务器上相互备份，任何一台服务器都不会影响应用的整体可用，通常的实现手段即把多台服务器通过负载均衡设备组成一个集群，任何一台服务器宕机，只需把请求切换到其他服务器就可实现应用的高可用，但是一个前提条件是：应用服务器上不能保存请求的会话信息，否则服务器宕机，会话丢失，即使将用户请求转发到其他服务器上也无法完成业务处理。 4.扩展性&emsp;&emsp;扩展性（Extensibility）指对现有系统影响最小的情况下，系统功能可持续扩展或提升的能力。表现在系统基础设施稳定不需要经常变更，应用之间较少依赖和耦合，当系统增加新功能时，不需要对现有系统的结构和代码进行修改，这个没啥好说。扩展性依赖于前期良好的架构设计。合理业务逻辑抽象，水平/垂直切割分布式化等等。 &emsp;&emsp;网站可扩展架构的主要手段是事件驱动架构和分布式服务。 &emsp;&emsp;事件驱动架构在网站通常利用消息队列实现，将用户请求和其他业务事件构造成消息发布到消息队列，消息的处理者作为消费者从消息队列中获取消息进行处理。通过这种方式将消息产生和消息处理分离开来，可以透明地增加新的消息生产者任务或者新的消息消费者任务。 &emsp;&emsp;分布式服务则是将业务和可复用服务分离开来，通过分布式服务框架调用。新增产品可以通过调用可复用的服务实现自身的业务逻辑，而对现有产品没有任何影响。可复用服务升级变更的时候，也可以通过提供多版本服务对应用实现透明升级，不需要强制应用同步变更。 5.伸缩性&emsp;&emsp;所谓伸缩性，是指通过不断向集群中加入服务器的手段来缓解不断上升的用户并发访问压力和不断增长的数据存储需求。衡量架构伸缩性的主要标准就是：是否可以用多台服务器构建集群，是否容易向集群中添加新的服务器。加入新的服务器后是否可以提供和原来的服务器无差别的服务。集群中可容纳的总的服务器数量是否有限制。伸缩性主要考虑业务切分，需要考虑将业务做水平横向分离和垂直纵向分离。（1）横向分离：将不同的业务模块分离部署，实现系统的伸缩性；（2）纵向分离：将业务处理流程上的不同部分分离部署，实现系统的伸缩性；]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>架构</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[财富洞见]]></title>
    <url>%2F2018%2F06%2F01%2F%E8%B4%A2%E5%AF%8C%E6%B4%9E%E8%A7%81%2F</url>
    <content type="text"><![CDATA[概览&emsp;&emsp;中国古人对财富的观念是命里有时终会有，命里无时莫强求。这句古话放在同一维度上看有某种道理，什么意思？就是当有同样两人，进入同样行业，两人能力相当，就有人混的好有人混的差，甚至混的差的人个人能力还有优势，正所谓一分钱难倒英雄汉。有时候不得不用命运来解释这样的事情。我今天要聊的是西方物理学家对财富的研究，当然我要聊的不是教如何赚钱，而是用物理学方法解释收入差距增大的原因。 &emsp;&emsp;人和人的收入差距，相信大部分人都接受，毕竟绝对平均是不存在的，适当的收入差距还能刺激人们努力工作。但是现在的问题不是收入差距的问题，而是现在收入差距在越拉越大，这就需要好好研究了。以前的普遍解释是富人有睡后收入，有通过钱挣钱或者资产增值的正向反馈，而穷人只能出卖自己的脑力和体力劳动时间。今天要介绍的物理学家阿德里安·贝扬，他是杜克大学的工程物理系教授，非典型的物理学家。他对这个问题有详细的研究，依照他的研究，哪怕没有股票之类的投资手段，所有人都靠做实业赚钱，局面也会是收入差距越来越大。 财富来自流动&emsp;&emsp;贝扬赖以成名的工作，是他总结了一个适用于不同领域的热力学定律，叫“构造定律（Constructal Law）”。这个定律的大意是说，对于任何一个存在某种“流动”的系统，比如河流的脉络，它的长期演化趋势必定是慢慢调整结构，让这个流动越来越容易。比如说有一条河来到平原地带，它会慢慢的分叉，分出各种支流，支流还会再分支流。构造定律就说，在河水经年累月的冲刷下，这些支流分布会越来越合理，让水流越来越顺畅。 &emsp;&emsp;财富虽然是人的劳动创造而来，但是劳动者不一定是财富获取者。那财富是如何获取呢？贝扬的洞见就是财富获取正比于商品的流动。比如，你拥有一座矿山，这不能算你创造了财富，即使你自己把矿挖出来了也不能算你创造了财富，你得把挖出来的矿运出去才算是创造了财富。这是一个简略的模型，像房租收入之类的都没有算进去。不过这个模型已经能说明问题了，统计表明，各国GDP都和花费在交通运输上的总能量成正比。贝扬的构造定律说经济系统必然向越来越有利于财富流动的方向演化，这完全符合历史数据。 &emsp;&emsp;统计世界各国从1971年开始的人均能源消耗，单位GDP能源消耗和总能源消耗。一个有意思的趋势是明明我们创造单位GDP要消耗的能源在减少，也就是能源使用效率的提升，但是我们使用总能源在增加。以前的人们不理解整个现象，称为“杰文斯悖论（Jevons paradox）”。贝扬认为，整个现象完全可以用构造定律解释：能源使用效率的增加是经济系统演化，东西流动阻碍越来越小的结果，而正因为经济系统在进步，总的流动反而越来越多。这和中国农村标语“要想富先修路”说的差不多。你是通过技术进步也好，多修路也好，尽量增加商品流动，你创造的财富就增加了。&emsp;&emsp;现在请记住，财富正比于商品流动，你控制商品流量越大，你创造的财富越多。 流量的分叉&emsp;&emsp;想象你运送一批货物。货物的重量是M，运送的距离是L，那你花费的油钱应该正比于ML。前面我们说了财富正比于商品流动，那你做这个工作的收入，正比于ML。（严格地说货物重量越大，能源效率也越高，用大车运送十倍的货物比用小车运送一倍的货物省钱，所以收入应该正比于 M^(1-α)L，其中 α 代表能源利用效率，但这个细节并不重要。） &emsp;&emsp;假设有一批来自武汉的商品，要买给上海的市民，现在我们只考虑运输。第一步是让一个人用火车把商品整体从武汉运输到上海，这个工作的货物量重距离长，所以这个人的收入最高。接下来的一层，把上海分成7个区，让7个人从火车站把货物运送到7个区的分发中心，那么显然这7个人的收入肯定不如第一个人的收入。下一层是从7个分发中心把货物运送到各个商店去，这个工作收入就更低了。这么一层层下去，收入差距就出来了。虽然这个模型比较简陋，但是它能比较好的解释为什么收入差距会越来越大。 &emsp;&emsp;假设这个货物运输系统一共分了k层，每一层分为n份。按照河流盆地的分叉规律来说，每一层支流长度差不多是它上一层的一半，根据这些信息，可以计算整个系统创造的总财富和整个系统一共需要多少人参与运输。有兴趣可以用数据推导计算一下。我直接说结论，通过财富在这些人中的分布，我们可以计算从底层往上数，到底需要多少人，才能拥有全部财富的50%。收入差距跟系统的总层数（k）和每一层分的份数（n）密切相关。k 和 n 越大，收入差距就越大。 &emsp;&emsp;那你说这能说明什么呢？说明收入差距是由经济发展的深度决定的。流动分叉系统越精密，收入差距就越大。所以经济越发达收入差距就越大，恰恰就是因为发达的经济分了更多层，每一层分了更多份，能把商品送到每一个角落去，能给更多的人提供服务，同时也养活了更多的人。 启示&emsp;&emsp;贝扬用的模型非常简单，有很多东西没有考虑到。比如股票和房产是富人的重要收入来源，但是这个模型完全忽略这点。贝扬只考虑运输，但是仔细想想，财富到底从哪里来的？股票和房产并不创造财富，它们只是社会财富增加的副产品（更严肃的说股票等虚拟经济是利益集团资本增益转嫁成本的手段先按下不表）。真正对应到财富的恰恰是这个国家把多少实实在在的商品分发到每个人手中，就算发达国家实体经济比重下降，人们的衣食住行最终也对应到交通上，因此贝扬这个模型在某种程度上有一定道理。所谓财富，就是商品的流动。 &emsp;&emsp;了解了贝扬的这个定律，或多或少对你应该有所启发：你拥有多少流量，你就创造了多少财富。也就是说你想要增加收入，就要增加k值和n值。比如网络传销大家应该都很熟悉，这种模式就特别需要增加k值。你有若干个下家，每个下家又有自己的下家，最好下家的下家还有下家，这样分层下去，分层越多，你站在高层的收入就越多。对应搞合法的商业，提高k值就相当于提高你在食物链上的位置，现实生活中大家也看到了职场中都挤得头破血流想获得晋升。当然如果是一个关心民间疾苦的政府，k值越高系统越不平等，层层分销不合理，所以会打击传销，减少中间商，降低k值，让社会更平等。从人性的角度，靠增加k值有点良心不安。 &emsp;&emsp;扩大收入更合理的办法是提高n值。n值增加，虽然顶层人的收入还是增加很快，但是每一层的n个人收入更加公平。提高n值相当于把自己的价值放大，也就是说你从事的工作可以scalable，可缩放。比如你是个理发师，你这个工作不可缩放。你每天拼命给人理发，一天也顶多几十人，就算有一千人让你理发，你一天也干不了，你的劳动是固定的，也就是你的收入也是固定的。但是如果你是个演员，你的工作就是可以缩放的，拍一个给10万人看的电影付出的劳动和给一千万人看所付出的劳动是一样的，你的劳动是固定的，你的收入可以任意增加。我们可以想象，收入越高的职业，可缩放的成分就越大，在商品流动网络上的位置就越好。程序一旦写好就能卖很多份，程序员就应该是个高收入职业，所以程序员找工作要高薪资没什么好难为情的。 &emsp;&emsp;财富的本质的确是东西的流动，不同职业收入不平等符合自然规律。那如果你的职业本身是不可缩放的，是不是就没有机会了？不是。比如理发师，你要想获得更高收入，可以从间接流量中获益，给高收入者理发，不过最好别给程序员理发，程序员是不重视理发，或者让自己成为发型设计师，引领发型时尚，这样也能让自己的劳动变得可缩放，也能提高收入，而不是依靠加班加点靠增加劳动时长增加收入，那样就怕有命挣没命花。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>财富</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[鸠摩罗什]]></title>
    <url>%2F2018%2F05%2F27%2F%E9%B8%A0%E6%91%A9%E7%BD%97%E4%BB%80%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;看完《枢纽》这本书，一个地名河西走廊一直回响在我的脑海里。河西走廊东西长约1200公里，宽数公里至近百公里不等，东起甘肃乌鞘岭，西至甘肃和新疆交界的星星峡，南面是祁连山脉，北面是龙首山、合黎山和马鬃山。因为地处黄河以西，形似走廊，被称为河西走廊。河西走廊是连接古代中国和西域的关键节点，关系帝国命运兴衰，谱写了很多历史传奇。在这些传奇中，我常常会想起一位鸠摩罗什法师，今天就聊一聊。 &emsp;&emsp;鸠摩罗什一生充满传奇，从少年时就被西域各国视为珍宝，但是他的母亲却预言他命运坎坷，将会因传佛法而身陷囹圄。两代国君曾为他发动战争，他历经磨难，苦行七千里，只为把释迦牟尼了悟的世界传到汉人的中原东土。中国佛教因为他的出现而焕然一新，我们今天常用的“世界”，“苦海”，“烦恼”，“心田”，“爱河”等等这些词汇，都是鸠摩罗什创造出来的，一千六百多年过去了，这些文字任然出现在我们的日常生活中。 &emsp;&emsp;鸠摩罗什与后来的真谛法师，玄奘法师，不空法师并称中国佛教四大翻译家。他还是中国佛教的八宗之祖，他翻译的莲华经是著名天台宗的立宗依据，其译经成就前无古人后无来者。他生于一千六百多年前的龟兹古国，龟兹是西域36个王国中的一个，也是丝绸之路北道的必经之地，在今天新疆的库车县一带。那时的龟兹国，佛教盛行，寺院禅房绵延几十公里，同时能容纳几十万僧侣。其中一个叫鸠摩炎的婆罗门贵族，因为厌倦了世俗做官的生活，辞去了印度国相的位置为求智慧而出家修行。翻越高山丛林，长途跋涉慕名来到龟兹学习佛法。他的才学震惊了龟兹王，龟兹王将自己聪慧的妹妹许配给他。他们因此而生下了鸠摩罗什。佛经说为接近大智大慧应远离人间欢乐独处于寂寞深山，就这样鸠摩罗什的母亲在儿子7岁时执意出家修行，并带上了年幼的鸠摩罗什，从此小罗什告别了尘世欢乐的童年。 &emsp;&emsp;古时的河西走廊和西域那一带有很多的洞窟，内部幽暗，很多僧侣都在其中打坐修行。7岁的小罗什就同母亲一起在这样的洞窟中修行。他虚心求教各类高僧大德，每天都诵读几万字的佛学经典。9岁的时候又和母亲长途跋涉去到印度北部的佛教中心拜著名法师学习佛法，在名师指点下他的学问进步很快，经常被当地的国王请进王宫与其他僧侣辩法，他的辩论常常折服其它人，因此国王常常以上宾之礼待他。在12岁那年，他随母亲一起返回龟兹。 &emsp;&emsp;回到龟兹以后，鸠摩罗什不仅研习佛学，还研习律算学，医药学，逻辑学和星象律例等学问，特别精于文辞和假说。在鸠摩罗什20岁的时候，龟兹国王准备了一场法会，要他和西域的一位高僧辩法，而这位高僧是自己曾经的老师，就这样老师和学生的辩论持续了一个月，鸠摩罗什终于脱引而出，从此他就被龟兹王立为国师。每逢法事，各国前来聆听佛法的国王和贵族们为了表达敬意，都亲自跪在地上让鸠摩罗什从他们的身体上走过登上讲坛，并以此为莫大的荣幸。这时有不少中原汉人到西域求取佛经见到了这样的场景，就这样西域神僧的说法在中原流传开来。也就是在这个时候，远在中国的长安，皇帝的星象官看到夜晚的星空有巨星彻夜长明照耀着西方，预言将有智者入辅中原。 &emsp;&emsp;这时的中原正处于晋朝。至从三国归晋后，结束了三国多年分裂的局面，但是西晋王朝统治腐败周边少数民族（匈奴鲜卑羌羯氐）乘虚进入中原灭亡了西晋，汉人大量南迁避祸建立了东晋，就在这一时期北方大地陷入混战，进入五胡十六国时期，胡人蛮族互相征战杀戮，政权朝代的交替一个接着一个令人目不暇接。其中16国之一的前秦政权由氐族所建定都长安，直到苻坚即位后短暂统一了北方。这时的鸠摩罗什士气正盛，苻坚对这位高僧早就久仰大名，并有意迎请他入住中原的想法。有一天太史向前秦的皇帝上奏到：在西方的天空出现了一颗闪亮的明星，未来应该有一位智者将要来到中原。苻坚说我听说西域有一个高僧名叫鸠摩罗什他一定就是那位将要入土中原的智者。前秦政权的眼观不仅局限在中原大地，他将目光投射到了西域，他像汉武帝一样有着征服西域的雄心梦想。在公元382年，苻坚命大将吕光率7万军马进攻西域，并嘱咐吕光鸠摩罗什是国家的大宝，如果战胜龟兹国应该赶快将他护送回长安。2年后大军攻破龟兹，接下来有攻破西域36个小国随即押解高僧鸠摩罗什返回长安。当他们一行人走到敦煌时，鸠摩罗什的白马7天7夜未进滴水，鸠摩罗什夜梦白马托梦，白马本是上届天马受佛祖之命特送他东行，现在已进入阳光大道白马将超脱生死之地。他第二天醒来，果然白马已经死了。于是当地的佛教信徒葬于城下，修塔纪念，取名白马塔。白马塔现在位于敦煌古城遗址城内，塔高九层，高越12米，现存的白马塔为道光年间重建。但是经历四年征战的吕光用2万匹骆驼运送抢夺的财宝，对鸠摩罗什却百般凌辱。他们给他骑烈马给他灌酒，并强迫他于龟兹国的公主结婚，鸠摩罗什被迫破解成亲。当他们走到河西走廊的凉州时，苻坚的前秦政权却因为淝水之战的惨败顷刻瓦解了，苻坚没有见到这位西域的神僧，就被自己的部下姚苌所杀，姚苌灭了前秦政权建立了后秦政权。听到中原政权交替后，吕光就停在了凉州拥兵自立建立了后凉国，鸠摩罗什就开始了在凉州的弘法生涯。 &emsp;&emsp;后秦的国主姚苌非常想要得到鸠摩罗什，并向后凉国至国书，邀请鸠摩罗什前往长安讲法。但吕光唯恐鸠摩罗什到长安后会助后秦一臂之力因此阻止他东行，为了限制他的行为，吕光在凉州也就是现在的武威建立了鸠摩罗什寺院供他居住和修行，丰厚的供养着他并规定外出时间不能太长不能离住所太远。这时罗什开始给周围看守他的士兵传法，一边传法一边学习很多中国方言。到了公元384年，后秦的国主姚苌去世，他的儿子姚欣在长安登基继位，随后姚欣至国书给后凉邀请鸠摩罗什来长安传法，再次遭到拒绝。姚欣策划开始发兵夺取鸠摩罗什。这个机会终于被姚欣等到了，这个时候后凉皇室开始手足相残，他派10万大军进攻后凉，很快后凉国王投降后秦政权，并答应护送鸠摩罗什回长安。这个时候的鸠摩罗什已经57岁了，他在凉州被困了整整17年。这时的长安以盛大的礼仪接待了这位来至西域并与汉人有不同长像的高僧。后秦的皇帝给他修建了大型法场取名逍遥苑，里面亭台楼阁假山连池草木黯然，位于里面的草堂寺每次听法的人数达到数千人。鸠摩罗什终于实现了到中原传法的梦想。他不局限在讲法，他向皇帝提出了更为宏大的计划，他想重新翻译佛经。姚欣接受了他的建议，并给他开辟了译经场，同时选派了800名僧侣和他一起参与译经的浩瀚工程。后来人数不断扩充，那些浩瀚的经文在他的笔下化作精美的汉语。据史书记载，逍遥苑周围聚集了很多寺院，来往僧众跟随鸠摩罗什学习佛法多达数千人，抄录的佛经于是流传大江南北。长安的译经场成为了第一个由朝廷组织的大规模译经中心，他所翻译的阿弥陀经成为净土宗的立宗经典。他所翻译的心经，历经千年没有人改过一个字。公元413年，70岁的鸠摩罗什在长安逍遥苑的草堂寺圆寂，圆寂前他对弟子们说，如果他翻译的经典没有错误的话，他火花以后舌头定不会焦烂。据《高僧传》记载，当他圆寂后，弟子们依照佛礼予以火化，在清理火化后的遗骨时他的舌头果然完好化身舌舍利。三年后他的舌舍利被迎回了凉州，被葬在了他曾经生活了17年的鸠摩罗什寺里。一千多年过去了，武威的这座鸠摩罗什经历多次翻修依然保存良好香火旺盛。]]></content>
      <categories>
        <category>佛学</category>
      </categories>
      <tags>
        <tag>佛学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[古代思想演变启示录]]></title>
    <url>%2F2018%2F05%2F19%2F%E5%8F%A4%E4%BB%A3%E6%80%9D%E6%83%B3%E6%BC%94%E5%8F%98%E5%90%AF%E7%A4%BA%E5%BD%95%2F</url>
    <content type="text"><![CDATA[概览&emsp;&emsp;最近终于断断续续把《枢纽》这本书看完了，完美解释了我一直以来的疑问。以前看历史的时候，一直很奇怪，为什么先秦之前华夏族能傲视四夷？而后来几千万汉人干不过几百万游牧民族？施展老师从大格局和技术进步的角度，完美解释了中国近三千年的阶层演化史。非常的精彩，令人读之神清气爽，真有种朝闻道夕死可矣的感觉。我今天想从另外的角度谈谈中国人思想的演化史。为什么要谈思想演化史？是因为当今时代变化太快，搞得目前基层很民粹化，中层很焦虑，高层也很焦虑。动不动就是时代抛弃你连招呼都不会和你打，动不动就是厉害了我的国，这些都是极不健康的情绪。我就想看看以前古人以前是不是也和我们遇到相同的问题，因为现在的我们终将是历史的古人。 正文&emsp;&emsp;我们学习中国历史，学的东西很多，比如说分分合合，王朝更替，兴衰成败，实际上什么都没有看的很清楚。其实中国历史一句话就概括了，那就是“文明主导，文明融合和文明奔溃，文明新生的一个历史”。因为这种文明的崩溃导致了中国历史上两次巨大的灾难。围绕这两次灾难，中国历史可以划分为三个千年。 &emsp;&emsp;甲骨文之前，商代以前的太遥远，文字记载的太少传说比较多，文化上也不是太清楚，姑且搁置不论。从周到东汉末期，这个差不多一千年；然后从东汉末期到宋朝差不多一千年；第三个就是从宋朝到晚清，刚好差不多又是一千年。 &emsp;&emsp;中国古代的主导思想-（儒家思想）形成是在春秋战国时期，但是真正成为官方的主导价值观是在汉初第五代皇帝，由汉武帝的董仲舒完成了大统一。这个时候儒家只是为了王朝统治的需要，同时也是中国传统农耕社会需要。董仲舒把儒家进行包装和改变，变得既不是孔子的那个儒家，也不是孟子的那个儒家，同时也不是荀子那个儒家。他提出了一种“天人合一，阴阳五行”很奇怪的东西，理论倒是不复杂，就是上天和地上的人是一个样的，我们表现不好老天是知道的，如果皇帝做了坏事上天会惩罚，惩罚的方式就是降天灾，比如洪水，春天下雪，蝗虫灾害，地震，饥荒等等。只要有这些天灾发生，那就是上天对你的警示，说明你的仁政没有做好。 &emsp;&emsp;这套理论主要是给无上的皇权套一个紧箍咒，毕竟天灾不是经常发生，皇帝也不敢太放肆，必须有所收敛施行仁政。这套理论一直运行到东汉末期之前都是ok，没有任何人怀疑。但是到了东汉末年出现了巨大问题，就是皇帝无论怎么做天灾都不可避免。有科学家对这个时期的太阳黑子做了统计，当时处在太阳黑子最活跃期，每年都有巨大灾害，这样一来，皇帝无论干什么，做了多少善事，施行了多少仁政，包括处罚大臣都没有用。这个时候，大家开始怀疑，崩溃，没有办法了。儒家在这个时候遇到第一次危机，崩溃。儒生不在相信天人合一的儒学，皇帝也不相信了。造成东汉末年之后将近四百年的中国大崩溃，大混乱。出现了十室九空的恐怖场景，人要不就是被杀掉，要不就是战乱中死掉。所以三国演义很精彩，其实那是最悲惨的一段时间。 &emsp;&emsp;这个时期的儒生开始自暴自弃，既然追求修身养性，兼济天下都没有办法，那就随波逐流自暴自弃。著名的竹林七贤就天天喝酒，进行各种行为艺术，比如同性恋，光着身体喝酒，很变态。因为他们觉得活在这个世界上追求的东西没有了，活着没有意义。就有点像西方社会上帝已死的感觉。这个时候在汉末，汉末魏晋时期就面临这种境况。常常听一些红学家说什么魏晋风度，基本是没有历史常识。任何人都不会严肃对待一个乐自逍遥的人。 &emsp;&emsp;魏晋南北朝这个时候玄学开始流行，天天空谈一些老子，庄子。要怎么保养自己的身体，这个时候的道家炼丹术特别流行，著名的“竹林七贤”就是丹药吃多了，早早慢性中毒死掉了。一个国家精英在追求这些东西，这个社会会变成什么样子？之所以玄学这个时候兴起，是因为大家看到身边的人都死了，当时从五千多万人死到只剩几百万人，打个折算一千万，五个人就有一个死了。曹操的军粮是什么？人肉干。曹操说“白骨露于野,千里无鸡鸣。生民百遗一，念之断人肠”，这绝对不是夸张，这是纪实报道，真的是白骨露于野，千里无鸡鸣。这些精英看到人很容易死了，他们自己也不知道明天在哪里。而且偏偏这个时候佛教开始传入中国。 &emsp;&emsp;佛教倡导的“空”，老子是“无”，庄子是“自然”。当这三者结合在一起，这边有面临着儒学经世致用价值信念崩溃，所以这个时候儒生都投入到空无的那套东西中去了。从魏晋一直到唐朝，佛教都一直很繁荣。“南朝四百八十寺，多少楼台烟雨中”，就是讲那个时候，这种魏晋玄学和佛学，为他们提供了人生的归宿。活着的意义不再是儒家了，而是老子的“无”与佛教的“空”。 &emsp;&emsp;当这些价值在精英中兴起，问题就大了。佛教崇尚的是轮回、是空、是缘，而儒家强调的是三纲五常，强调的是血缘关系，推己及人这些东西，社会的核心价值基础是家，由家而国，如果一切都是无和空，家还有什么意义呢？从佛教来说，家是没有意义的，因为缘聚缘散，你是因为缘才聚到一起的，他们才成为你父母，你妻子，成为你子女的。儒家强调的这些东西还有意义吗？儒家强调的是血缘、伦理，由伦理关系推到亲戚关系，再由亲戚关系推到族人关系，由家的关系上升到国的关系，所以才叫“国家”。国是一个大家，家是一个小国，是这种关系。如果从佛教、老子角度来说，这些是没有意义的。所以这时候，这些文化人不再去追求治理国家了，不再问今生的社会怎么样了，跟我没有关系了，我只求及时行乐就好。所以这就导致东汉末之后一直到隋唐前的社会大分裂。 &emsp;&emsp;到了第二阶段，现在一说起唐朝好像很牛，其实大唐从他建立的那刻起就埋着分裂的种子。这个时候，佛教，道教和儒家是并行的，并没有谁占主导地位。虽然儒学是唐朝的官学，但是儒学这个时候不是特别受待见。唐朝的社会精英实际上非常焦虑，非常有危机感。表面上看，唐朝社会文化非常发达，比如波斯明教，伊斯兰教，基督教以及后来给清朝造成巨大冲击的白莲教这个当时都有，虽然很发达，但是隐藏着巨大危机，这时候进入到中国历史上第二个大分裂期—五代十国。 &emsp;&emsp;五代十国实际上是从安禄山、史思明的“安史之乱”开始的，安禄山是胡人，很多也都是胡人，但是他是唐玄宗的爱将，权重一方，从这里可以看出唐朝的社会是建立在“五胡乱华”大分裂之后的基础上的。“安史之乱”以后就是“藩镇割据”，就是每个拥有实力的将军他可以割据一方，这种事情在中国统一的王朝上是绝对不允许出现的，包括刘邦和他子孙的王朝，就连同姓王割据也不允许。 &emsp;&emsp;汉高祖把韩信这些异姓王干掉了，同时他的子孙又把同姓王又干掉了。中国以前是长子继承制，汉朝为了改变地方诸侯做大、威胁中央政权的这种事情，它就搞了一个“推恩令”。因为都是刘姓的皇室家族的嘛，所以诸王的妻子、孩子肯定特别多。假设一个诸侯国王他有几十个孩子，中央就告诉他不能把诸侯国传给你的长子，你要平均分配给你那些孩子，这就叫“推恩令”。这样几十个孩子都分下去了，每个孩子的孩子也都不是省油的灯，他也有几十个孩子，这样一直分下去的话，数学上你分分就知道了，诸侯国肯定是四分五裂，越变越小，变到最后可能就是没落的一个小地主家庭了，对中央是毫无威胁了。 &emsp;&emsp;但是在唐朝末年，因为文化没有融合，这种东西又出现了，那就是从“藩镇割据”演变到五代十国。直到周世宗柴荣，其实他也是五代十国的一个政权，他灭了很多大大小小的国，后来是赵匡胤黄袍加身取代了柴家，他也灭掉很多分裂的政权，这才结束五代十国这样一个大分裂。 &emsp;&emsp;这时候到了宋朝，宋朝完成了传统儒学对佛学的消化。它把佛学变成了自己的一部分，构建起一种新的儒家精神，重新诠释了儒学的内涵，这就是新儒学。新儒学不是今天贩卖国学的人搞的那套东西，它是指宋代那些大宗师的学说。这时宋朝社会重拾对儒家的信心，人生的意义不再是空，也不是无，而是从新有了现实的意义。包括后来明朝王阳明心学，其实也是从宋朝的程朱理学，陆王心学发展起来的。 &emsp;&emsp;程朱理学是以程颐、程颢和朱熹为代表的。他们提出的这种修身的办法叫做“天理”，天理是存在的，他们就说人生的终极意义是为了追求天理，所以他提出一个著名的口号叫“存天理、灭人欲”。天理是什么呢？就是仁。为什么天会有仁呢？这个宇宙怎么会有人间的“仁”呢？另外一个人对此进行了补充，这个人叫张载。张载说宇宙是由气构成的，气一动就会产生很多的东西，一个东西叫物质，一个东西叫情感。气的本性就是万物的本性，当然也包括人。他又认为人具有先天之性，也就是天地之性，诚明纯清，是善的来源；但人也受各种天地环境与社会环境的影响，又形成了后天之性，也叫“气质之性格”，有清有浊，有善有恶……所以人就应该通过后天的修身，让天性之中的至善呈现出来。所以我跟宇宙是一样的，宇宙也有天理、也有感情。张载有一句话非常嚣张，叫做“为天地立心，为生民立命，为往生继绝学，为万世开太平” &emsp;&emsp;另外一个叫做陆九渊，这个人跟朱熹是同一个时代，他们还曾经辩论过，当然他们实际上都是属于一类的，只不过是又分成了派，分成了不同的路径，就不去细讲了。陆九渊就提出来，我心就是宇宙，宇宙就是我心。后来的王阳明就是在陆九渊的基础上发展出来的。 &emsp;&emsp;归纳来说，程朱理学它回答了几个东西：我在今生的意义是什么？我与宇宙的关系是什么？我与别人的关系是什么？宋代也是中国可能可以跟春秋时候相媲美的一个时期，思想家特别的多。为什么宇宙跟我有关系？先由周敦颐提出了《太极图说》，他提出了一个“宇宙观”，经过一代一代的努力，几代人不停地总结、努力，终于消化了佛学，包括道家对儒学的挑战。今天说儒家的《四书五经》，《四书》是在宋朝由朱熹提出来的，并不是春秋的时候孔子或者是汉朝的时候大一统提出来的。《大学》、《论语》、《中庸》、《孟子》这四书，是在宋朝有朱熹提出来的，因为宋完成了儒学又一次正统地位的塑造。 &emsp;&emsp;宋明理学消化了佛教、道家，但是也造成了另外一个巨大问题。既然宇宙跟我有很多关系，为了完成人生的终极意义，就要做两件事情，第一件事情是冥想、静观，要去想宇宙的天理是什么；第二件事是明白宇宙的这个东西，印证到我读的儒家经典，我才明白儒家的“礼”，才能用这种“礼”学去修齐治平。 &emsp;&emsp;看起来是很简单的一个东西吧？但是实行起来会出现很多的问题。以佛教打比方，放下屠刀、立地成佛是吧？但是有些人放下屠刀后，他确实是成不了佛啊。因为有很多人的悟性、理解力很多时候过不了这一关。他悟不透，想不通啊，你看连王阳明这样聪慧的人都“格物”、格了七天的竹子，他都格出毛病来了，别人又会如何呢？ &emsp;&emsp;对天理的思考无法迈过这一关，就致使很多儒生一辈子不是去干实事，而是就是在那儿想、在那儿观照、在那儿静思。这导致后面的知识分子很多都是务虚派，也就是不干实事，再也没有汉唐儒学家干实事的做法，整天就是空谈。平时袖手谈心性，临时一死报君王。一个人出问题，不是说这个事情没有做好，而是说他的心有问题，道德有问题，然后就是泛道德化攻击，个个都是圣母婊。 &emsp;&emsp;因为宋明理学的务虚空谈导致我荆州老乡张居正的悲剧。这个人本来可以挽救明朝的。明朝的税收特别复杂，比如说你家种茶叶，你怎么交税呢？交茶叶。税收之外，还有各种徭役，比如说要干苦活的、出民工的这种徭役，很复杂。所以张居正有一个理财办法像今天一样交企业税就好了，交钱就好了。这是非常好的办法，我们想想都知道，比如说我家种茶叶我交上去的税收是茶叶，这是不是会很成问题？茶叶会发霉；茶叶要运到中央库府里面要有人去运。同样粮食要有人运，粮食从大运河运到北京可能一半的粮食必须被吃掉，不然那么远的地方就运不到啊，那些船工和保护的大兵都需要去吃饭的啊。张居正提出“一条鞭法”，税收都用钱来交，这是非常好的办法，也是行之有效的，但是他失败了。就是因为明朝很务虚。因为大家用道德抨击他这个人，一个人要抨击一个人不是抨击这个事情，而是攻击他的道德，这就是泛道德化。这种现象在今天也很常见，就是给别人扣大帽子，这种做法是很逆人性的。人是复杂的，他可能做错事，有一些还可能还是原则性错误，但是他也有可能做了一些有实际价值的事情，怎么可能都是绝对化的呢？中国传统文化里边，攻击一个人常常不是说他做错了什么事，而是先扣大帽子，说他道德有问题。到了张居正这个明朝时，正是程朱理学实行得最深入的时期，所以张居正非常好的改革，能够延缓大明王朝衰落时间的“一条鞭法”完蛋了。这是非常愚蠢的。你知道吗？先秦的人们可不是这样的，先秦的文明里没有这么愚蠢的思维方式。你看商鞅变法，商鞅被秦国贵族诛杀了，但是商鞅的改革被保留下来了。当张居正死了以后，万历就对他进行了抄家，把张居正所有的做法全部推翻了。滑稽的是，明朝“一条鞭法”这么好的改革办法却在清朝开花结果了，清朝一个叫“摊丁入亩”的税收办法实际上就是在张居正基础上略加升级的，实际上是把张居正的“一条鞭法” 2.0版，这么稍微改了一下就迎来了康乾盛世。这是一个好方法，却因为明朝务虚、泛道德化而没有继承下去。 &emsp;&emsp;到了明末清初的时候会看到一个现象，明末清初的那些人又再一次非常反感程朱理学、陆王心学。他们进一步思考，因为我们知道宋朝是被元朝灭掉的，为什么宋朝的知识群体会接受元朝呢？因为当时宋朝人程朱理学还没有实行那么深入，刚刚是在创立出来，还没有彻底深入，所以在儒学观念里面，特别是孟子讲的，施行仁政的皇帝就配当皇帝，如果不施行仁政的皇帝应该被更替掉。宋朝知识分子认为宋朝皇帝没有施行仁政，导致被蒙古人替代了。所以他们就希望协助蒙古人施行仁政，所以就接受它了，只不过是又换了一个治理者而已，儒学的正宗、华夏文明的正统还在的。但是明朝大家就不这样想了。 &emsp;&emsp;明朝知识分子他们不是觉得亡国了，顾炎武觉得亡天下了，天下就是指中华文明，中华文明是被满清野蛮人给吞并了。满清人都是很野蛮的，他们叫做“留发不留头”，大肆屠杀。如果你不留辫子，不剃头发，儒家讲“身体发肤，受之父母”，是不可以把它剪掉的，因为那些满族人为了骑马、射箭方便，头发在前边飘来飘去射箭打仗不方便，所以他把前面剃掉、扎个辫子很方便，但是到了中原要求中原所有的男人儒生都这么做，那些儒生认为这就是野蛮人对我的奴役，他们就不这么干，不这么干就被杀死，所以叫“留头发可以，头就不要留了”，他们认为这样是野蛮人对中原的践踏，是儒学正统的沦陷，是华夏文明亡了，是亡天下。 &emsp;&emsp;明末清初几个著名的哲学家，顾炎武，王夫之，黄宗羲，他们都是干实事的。顾炎武是明朝遗民，做调查研究，把祖国的山山水水，哪里是军事要地，哪里的水利要兴修，他干这些调查研究去了；王夫之更是一生反清复明，一直践行着到死，就是誓不投降……清初的这些哲学家其实为我们近代文明的开端提供了巨大的思想资源。假设我们是明朝被西方入侵的话，那么我们今天可能就不会是这样的局面了，我们的危机大概会更深重。 结论&emsp;&emsp;思想演化就介绍到这了，整体脉络大概梳理清楚了。我为什么喜欢看历史？曾经有一个教授说中国古代史不要多学，因为没用，要学世界史和近代史。其实这个完全是胡说八道。如果真正读懂历史，就会知道历史不是看历史事实，而是看历史逻辑。如果从逻辑上来看，今天和唐初差不多。我们今天引入西方的马克思主义，改革开放又引入西方的市场制度，我们的文化很繁荣，但是我们的心灵很饥渴很焦虑，现在的传统儒家文化就面临着消化不同文明，大融合的问题。 &emsp;&emsp;我们看到今天为什么会有一些焦虑、彷徨、困惑，其实我们今天每个人都是笑傲江湖里的令狐冲，因为我们今天既不是生活在传统的儒家社会，也不是以前的革命年代，现在是经济建设年代。但我们也不是西方人，我们也不可能去接受全盘西化，我们是黄皮肤、黑头发。现实就是我们不可避免地受到几千年传统儒家文化的影响，这是我们此身上被输入的第一股内力，这个最雄浑的内力输入在我身上，尽管你看起来好像跟它没有关系，但实际上它又潜移默化，比如说清明节扫墓，你回家扫墓，追思慎远，这些它都是中国传统的一些东西，它是根深蒂固的。它不可能因为某一次运动而消失。第二个我们也不再是完全的革命年代了，农业学大寨也好，人民公社也好，这都是过去时了，我们已经不是革命的年代。我们也取得了巨大的成就，我们现在是以社会主义经济建设为主。但第三个，我们同时又不可避免地受到西方文化的入侵，或者说用一个中性的词就是西方文化的传入，西学东渐，西方的很多生活方式与价值观我们不可避免地受到它的一些影响。这样表现我们很焦虑，和困惑，不知道往哪走？这件事是对还是错？是不是又被同龄人抛弃了？那边又讲时代抛弃你连声招呼都不会打,今天讲苍穹之下的共享，明天密室之内讲区块链，你到底相信谁？我们会有很多很多的困惑，到底是向前一步拼命加班，实现财务自由，走在猝死的路上？还是追求诗和远方，人生随遇而安？就像汪峰歌词里面唱的，是否找个理由继续苟活，或是展翅高飞保持愤怒？如果是古代那种大融合时代，现在这些焦虑都是很肤浅的。 &emsp;&emsp;我们今天在社会上看到很多的一些文化贩卖者的表现，当然我很尊敬他们事业上的成功，但实际上他们输出的价值都是一些什么东西呢？都是一些成功学、一些片断、一些碎片，是找不到根的，你在他们身上找不到根，他们连自己都没有一个文化的信仰，能贩卖的也只有些瞎唬人的东西。读书两个东西就够了，一个是根的，一个是专业的，书到今生读已迟，你却还瞎读八读的，不是浪费余生时光吗？所以我们才会被眼前的各种热，一会儿国学热，一会儿又有什么辟谷，一会儿又远方啊诗啊，被各种各样的“热”所主导、所摇晃，觉得哪个也不能错过，不然就被时代抛弃了，可是搞了半天，你真能解决内心的那些慌张吗？这就是因为我们没有明白或者说没有看清实质。这些热、那些热的背后的东西，实际上我认为它的赚钱、功利目的远远大于它寻找的意义。 &emsp;&emsp;我们的心灵需要一个出口，现代化既不是电灯电话吃西餐，也不是异国他乡找到归宿，也不可能在儒家之外找到归宿。那些有志于修齐治平，以天下为思考出发点的儒家研究者，面临着消化马克思主义和西方文明的问题，儒家需要像宋明理学家那样重新出发，为我们提供一个人生的终极意义。这个需要几代人努力去融合，我相信总会有思想家出来为我们立心的。儒家的农耕文明，儒学的很多东西是有问题的，但并不代表着它没有光芒。 &emsp;&emsp;我的思想转变去年特别大，其实我是比韩寒更早从叛逆回归传统的。他说“知道很多道理，依然过不好这一生”，这句话一时成了流行语。其实因为知道了很多道理，实际等于没道理，那些东西都是小道理，都是鸡汤，没有儒家那种止于至善那种大道理在，类似美国那些顶级企业家的清教徒思想，他们要把他们的一切努力归于对上帝的奉献，而我们应该是儒家新的大融合之后的终极人生意义，我们应该有这样一种心灵归途。为什么一方面鸡汤被大家嘲讽，但一方面鸡汤又很流行，创造了很多的一些社会现象呢？是因为我们内心饥渴啊！有饥渴才有鸡汤。如果我们有一个终极的人生意义，心灵牧场里就不会养鸡，鸡汤也没容身之地，大家会知道这种东西是很搞笑的，是很小儿科的，是怪力乱神……所以我们今天不要嘲笑高大上，高大上没有什么可嘲笑的。值得嘲笑的是高大上的缺失。正是因为没有以大、上为出发点的东西，才没有发上等愿、择高处立的风气，我们才有很多的精致利己主义、才有很多的犬儒主义，才有很多的为了眼前利益而什么都不在乎、一再越过人性底线的现象。 &emsp;&emsp;最后总结一下：尔曹身与名俱灭，不废长江万古流，一千年呢其实只是一瞬间。我们今天活一百岁也好，八十岁也好，实际上在中国的两千年，我们只是两千年两次文明破与立之间的一个尘埃而已。我们要看到自己所处在的历史里面的坐标，从最初到现在就是文明的一个衰落、融合以及我们面临的再融合问题。]]></content>
      <categories>
        <category>历史</category>
      </categories>
      <tags>
        <tag>历史</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[康德二律背反]]></title>
    <url>%2F2018%2F05%2F13%2F%E5%BA%B7%E5%BE%B7%E4%BA%8C%E5%BE%8B%E8%83%8C%E5%8F%8D%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;前天团建聚会，和领导闲聊有关逻辑的话题，可惜的是普通人之间的闲谈不够深入，仅仅自娱自乐而已。今天就逻辑这一话题来聊聊康德的《纯粹理性批判》中的二律背反。在《纯粹理性批判》的序言里面，康德把自己的哲学贡献比作哥白尼式的革命。 &emsp;&emsp;在哥白尼之前，所有人都认为太阳是围绕地球转的，这是一目了然的事情。随着天文观测水平的提升，天文学家越来越发现星体的运动轨迹越来越稀奇古怪，很难解释。为了解释这些古怪的运行轨迹，天文学家发明了一些极尽复杂的宇宙模型，不管复杂到什么程度，解释力度还是不够。这个时候哥白尼想，能不能换个角度来看待这个问题。让太阳不动，地球围绕太阳转。这个想法具有划时代意义，当时正是宗教迫害最严重的时候，以至于哥白尼认为自己是对的，也只敢对他的学生说，不敢公开反对质疑教廷的权威，当然这是后话。 &emsp;&emsp;康德之所以说他的想法是哥白尼式的，也是因为他的想法在哲学上具有颠覆性。在哲学上的经验论里，如果你眼前摆着一个苹果，那么这个苹果是什么样的，你就应该把它认成什么样的。如果真是这样的话，就没有办法解释我们的先天的知识是怎么来的，没有办法验证任何一个先天综合判断。比如“两点之间直线最短”，这就是一个先天综合判断。如果请休谟来检验者这个判断的正确性，休谟就会把宇宙所有的直线挨个检测一遍。纸上得来终觉浅，绝知此事要躬行。但是康德说，我们只要把观测的角度颠倒一下，问题就轻松解决了。颠倒过来就是，不是我们的认知能力要如实的反映认知对象，而是认知对象要符合我们的认知能力。简单讲，前者意味着苹果是什么样，我们就把它看成什么样；后者意味着我们怎么看待苹果，苹果在我们眼里就是什么样。 &emsp;&emsp;我们的认知能力相当于一副有色眼镜，从摇篮到坟墓，从来没有摘下来过。 &emsp;&emsp;为了更简单的说明这个问题，你可以想象一下自己所有的感官都不存在，只剩下一双眼睛，只存在视觉能力，然后你一辈子都带着一副红色眼镜，镜片是半球形的凸面镜，所以你看到的万事万物不但是红色的，还都是变形的。变形当然是有规律的，在怎样的角度，怎样的距离，会发生怎样的变化，你逐渐都能研究清楚，形成一套科学认知体系。当我站在你面前，如果你采取平视的角度，会看到一个红色的枣核型胖子，俯视的话，看到的是一个红色的墩子型胖子，仰视的话，看到的是一个红色的梨型胖子。我真的长成这样吗？真的会变形吗？当然不是，但你永远也看不到我真实的样子，更重要的是，你永远不该妄想看到我真实的样子。你带的眼镜决定了你的视觉模式，这是改变不了的。在你眼里，我永远是一个红色会变形的胖子。 &emsp;&emsp;真实的我，还包括真实的其它东西，康德统称为物自体，属于本体世界，而你看到的我，包括你看到的其他东西，都是通过你的有色眼镜呈现给你的视觉图像，康德统称为现象或表象。著名的哲学家叔本华的哲学命题“世界是我的表象”，这个命题就是来源于康德。 &emsp;&emsp;作为物自体的我触发了你的视觉系统，你看到红色会变形的胖子，这就是我呈现给你的现象。你看到的我只是我作为物自体的样子，真实的物自体的我，是你永远看不到的，你也就没有必要努力去看，你的一切科学探索工作只围绕着我的现象去做，也就是围绕着你看到的那个红色会变形的胖子去做，不要去做力所不能及的事情。这个道理可以简单归纳成两句话：1、现象是可以被理性认知的，物自体是不可知的。2、理性只应该研究可知的世界，不去碰不可知的世界。 &emsp;&emsp;如果你就是不服气，非要用有色眼镜去认识物自体，那会是什么结果呢？康德说，那样的话，你就注定会陷入自相矛盾的境地。这个境地就是康德的著名命题“二律背反”。 &emsp;&emsp;每个二律背反都是一个正题和一个反题构成，康德共举出了四个二律背反。我们先看第一个。正题：世界在时间上有开端，在空间上有边界。反题：世界在时间上没有开端，在空间上没有边界。正题和反题之下都有丰富的证明，都能自圆其说，从逻辑上无法反驳，但是正题和反题显然不能同时成立。 &emsp;&emsp;我们今天可以用宇宙大爆炸理论来支持正方观点。不过康德肯定会问，在宇宙大爆炸的奇点存在之前是什么状态？奇点存在于哪里？一些物理学家可能会说，宇宙大爆炸之前不存在时间和空间，康德肯定还会问“你能想象不存在时间和空间的状态吗？”，这个问题切中要害，因为我们真的想象不出来。无论我们怎么说服自己时间和空间是从150亿年前才开始的，但是一旦想象150亿年之前的状态，”之前”就已经预设了时间，状况就已经预设了空间。这从语言上来琢磨，意味着有些我们以为是客观存在的东西，其实都是主观的。（下次有机会聊聊维特根斯坦，为什么所有的哲学问题都是语言问题？为什么西方的字母系统导致逻辑强迫症？为什么在大科学时代，汉字导致的弱逻辑思维更有整体优势？） &emsp;&emsp;写到这里已经比较烧脑了。再举一个例子：我们看到花都是红的，草是绿的，红色和绿色真的是花和草的客观性状吗？花真的是红色，草真的是绿色？当然不是，如果让猫来看，让蜻蜓来看，颜色就不一样了。所谓红色，绿色，本质上只是不同波长的光波。当光波射入不同生物的视觉器官，先被视觉器官过滤一遍，再被大脑解读一遍。也就是说花草本身没有任何颜色，它只是反射不同波长的光波，光线进入我们的视网膜，然后大脑把特定波长信号翻译成特定颜色。所谓颜色，其实只是我们的认知能力加在花花草草之上的，客观世界里并不存在任何颜色。 &emsp;&emsp;其实早在康德之前，英国哲学家洛克就详细论证过这个问题。他把物质的性质分为主性质和次性质两种，主性质包括广延性，形状，数量，还有运动或者静止，这都是物体的固有属性，次性质包括颜色，声音，气味等等，这些都不是物体的固有属性，而是被人的认知能力翻译出来的内容。如果抛开一些次性质的话，那这世界就变得毫无美感乏味的样子，没有颜色，没有声音，没有气味，只有不同形状，不同大小，不同数量的东西不同运动着。是我们的认知能力，不是世界本身，让世界丰富多彩。如果你在仔细思考康德的思想，恐怕主性质也不是物体的固有属性，而是我们认知能力翻译的结果。]]></content>
      <categories>
        <category>哲学</category>
      </categories>
      <tags>
        <tag>哲学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[佛学为什么是真的]]></title>
    <url>%2F2018%2F04%2F29%2F%E4%BD%9B%E5%AD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF%E7%9C%9F%E7%9A%84%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;佛学一直以来是我的业余爱好。从小接触佛教，那时的感觉是被教科书洗脑，佛教是封建迷信，直到大学断断续续没有成系统的研读佛学书籍，才明白一直以来对佛教的误解很大。去年偶然在得到专栏听到万维钢老师介绍罗伯特·赖特的为什么佛学是真的这本书，相比于东方介绍佛学的神秘，我更喜欢西方人用西式的思维方式，去除掉佛学里面超经验主义的东西，从科学和心理进化论的角度谈论佛学。今天简要介绍一下这本书的思想内容，希望你能有所体会。 苦是什么&emsp;&emsp;罗伯特·赖特教授是一位心理学研究者，他本人不仅研究佛学，而且从佛教的基本修炼方法入手，加上现代心理进化论的研究结论给我们从另一个角度解释了佛学。佛陀第一次讲法，说的是四圣谛，所谓的苦集灭道。赖特教授花了很大篇幅说苦。&emsp;&emsp;从生物进化论的角度，人活着的目的，就是为了传播自己的基因。为了传播基因，我们要吃饭，要找到性伴侣生孩子，同时为了加强自己的生存权和生育权，我们还要打败自己的竞争对手，还要获得声望。因此，人类经过自然选择的进化，在心理上给人类做了三个设定：&emsp;&emsp;第一，完成上面的事情，你能获得快乐。&emsp;&emsp;第二，快乐是短暂的，它不能持续很长时间。&emsp;&emsp;第三，对于以上两点，大脑应该专注于第一点，而忽略第二点。&emsp;&emsp;自然选择设计的大脑让人类永远处于一种不满足的状态，它根本不在乎我们是否快乐，它只是把快乐当诱饵，来使得我们完成基因传播目标。永远在追求，偶尔被满足，即使得到了也是短暂的快乐，你永远处在不满足状态。所谓的快乐，其实是错觉。&emsp;&emsp;所以”苦”就是”不满足”。 无我&emsp;&emsp;在心经里面开篇一句话：观自在菩萨，行深般若波罗蜜多时，照见五蕴皆空，度一切苦厄。五蕴是指：色，受，想，行，识。&emsp;&emsp;-色蕴（physical body）：就是指人的身体，英文中经常把这个色翻译成form（形态），这里指人的身体。&emsp;&emsp;-受蕴（basic feeling）：就是指人的情感，比如痛苦，高兴，担忧。&emsp;&emsp;-想蕴（perception）：就是人的基本感知，比如视觉，听觉，嗅觉。&emsp;&emsp;-行蕴（mental formations）：就是人的想法和行为，包含一些复杂的思想，我们做事的习惯和倾向性。&emsp;&emsp;-识蕴（consciousness）：就是人的意识。&emsp;&emsp;佛经说”我”不存在,”自我”是虚幻，《五蕴皆空经》说人的身体，感情，感知，想法行为，甚至意识都不属于”真正的我”。真正的我到底存不存在都是一个问题。人类几百万年的进化史，给人类的大脑设置了七个模块：自我保护，吸引配偶，保住配偶，群体认同感，关爱亲属，社会地位，避免疾病。人并没有恒定的自我，你在不同的时刻，被不同的模块所左右。求偶模块说了算的时候，你是一个形象。自保模块说了算的时候，你是另一个形象。模块控制人的方法是情感，每个模块都向你输出一个情感，哪个情感强烈，哪个就容易抓住你的注意。而且这些模块还根本不靠谱，他们给你出的主意常常是坏主意，你被他们迷惑，他们不是你，这也正是佛陀说的五蕴皆空和无我。&emsp;&emsp;为了说明无我，赖特还列举了一个实验，实验是这样。为了治疗某些大脑疾病，医生会把病人的左脑和右脑之间的连接管道给切开，这样病人的左右脑之间就不能相互联络了。人的左脑控制右眼，右脑控制左眼。如果你只让病人的左眼看一个字条，上面写着一句话”请你现在出去散步”，他看到字条会站起来照做。请注意，这个时候只有右脑知道这个指令，左脑不知道。而负责语言的区域又恰恰在左脑。好，现在在他往外走的时候，你过去问他，为什么要走出去，你猜他会怎么回答？&emsp;&emsp;负责回答问题的是左脑，可是左脑没有看见字条，它跟右脑有没有交流，所以左脑根本不知道自己为什么要往外走。但是实验结果是，病人给你的回答不是”我不知道”,左脑的做法是现场给你编造一个答案，比如说”我想出去喝水”，而且左脑对自己编造的答案深信不疑，它以为是它自己做出的到外面走走的决定。&emsp;&emsp;一系列这样的实验都说明，并不是我们的意识在做决定，而是决定已经做出了，意识来给决定找个理由。做决定的是一个自我，找理由的是另一个自我。所以由此可知，”自我是个幻觉”，这句话是有道理的。 冥想的方法&emsp;&emsp;佛学其实特别讲究实践，它不仅仅是个理论体系，更是修行。就像我们没有办法向一个色盲解释红色一样，仅仅从智力上理解佛学是不可能的，有些概念大概只有修炼到那个水平才能明白是什么意思。&emsp;&emsp;佛教的练习方法就是静坐冥想，其实这个方法不是佛陀发明的，在古印度几万年前的婆罗门教徒就存在这种修炼方法，当时佛陀从六师外道那里借用过来。不要以为静坐冥想是很简单的事情，我曾经在大学里面尝试过，能坚持15分钟的极限，现在能坚持5分钟就不错了。&emsp;&emsp;大约在上世纪六七十年代，有三个美国人分别去亚洲学习内观。其中有一个叫约瑟夫·葛斯丁（Joseph Goldstein），回到美国以后在1976年出了本书，叫《洞见的体验》，向美国人传播内观。这三个人后来联合创办了洞见冥想协会。赖特教授就是2003年在这个协会，学习了这套功夫。现在在西方，尤其是知识分子中间，非常流行冥想。内观冥想的目标是获得对事物的洞见，和个人真正的自由。&emsp;&emsp;现在的冥想界大概分为三个派别：一个是禅宗：方法是思考一些公案，像寓言故事一样，有时候搞言语上的机锋，然后来个顿悟。一个是藏传佛教：方法是想象一些艺术视觉。一个是内观：它主要是追求正念，要求自己观察自己的心理和情绪是怎么回事情，有点像心理学家在分析解剖自己一样。&emsp;&emsp;冥想的形式非常简单，如果你追求仪式感，可以找一个安静点的地方，什么姿势都行，只要不睡着就可以。第一步就是坐下，第二步就是专注于自己的呼吸，别的什么都不想，一心一意的专注于自己的呼吸。&emsp;&emsp;不要以为做到这步很简单。当一个人什么都不干的时候，大脑的正常状态是随机漫步的，各种想法都会不断的冒出来，你会做各种白日梦。这时你处于一种默认网络模式，冥想恰恰要求你不能进入默认网络模式。你的思想不能信马由缰，必须专注于自己的呼吸，能坚持的时间越长，功夫就越深。&emsp;&emsp;冥想的功夫从低到高，大概至少有两个层次。第一个层次是你能不受强烈情感的困恼，能把”自我”和各种情感隔绝，你只有达到这个层次，你马上能体会到冥想的好处。这个层次，据说赖特教授达到了。更高的层次，则是能把自我跟各种想法全部剥离开，真正专注呼吸，不想其它。 涅槃&emsp;&emsp;佛教讲涅槃是每个佛教徒最终的目的，所有修佛都是为了最终的涅槃，达到涅槃就算得到正果了。怎样才能达到涅槃呢？佛学有个很重要的概念，叫”缘起”。就是每件事发生都是有原因的，每件事发生又会有一个结果，而这个结果又是另外一件事的原因。我们就生活在这个因缘中，我们做什么事情都是有条件的。涅槃就是摆脱了因缘的控制，变成了无条件的。&emsp;&emsp;佛学的意义在于把我们从自然选择的局限视角中解放出来，从一个更高的水平观察和体验这个世界。两千六百年前，佛陀体察到自然选择给人的思想限制。他没有任何科学工具，但是发现了问题所在，并找到了解决办法，还发展了一套行之有效的佛学体系。佛陀走的非常远，以至于后世的人难以理解他。两千六百年后，现代科学发现了同样的问题，使得我们可以学习佛陀的方法，印证佛陀的思想。 结尾&emsp;&emsp;佛学为什么是真的，就介绍到这，希望对你能有所帮助。]]></content>
      <categories>
        <category>佛学</category>
      </categories>
      <tags>
        <tag>佛学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[心经]]></title>
    <url>%2F2018%2F04%2F26%2F%E5%BF%83%E7%BB%8F%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;观自在菩萨，行深般若波罗蜜多时，照见五蕴皆空，度一切苦厄。舍利子，色不异空，空不异色，色即是空，空即是色，受想行识，亦复如是。舍利子，是诸法空相，不生不灭，不垢不净，不增不减。是故空中无色，无受想行识，无眼耳鼻舌身意，无色声香味触法，无眼界，乃至无意识界，无无明，亦无无明尽，乃至无老死，亦无老死尽。无苦集灭道，无智亦无得。以无所得故。菩提萨埵，依般若波罗蜜多故，心无挂碍。无挂碍故，无有恐怖，远离颠倒梦想，究竟涅盘。三世诸佛，依般若波罗蜜多故，得阿耨多罗三藐三菩提。故知般若波罗蜜多，是大神咒，是大明咒，是无上咒，是无等等咒，能除一切苦，真实不虚。故说般若波罗蜜多咒，即说咒曰：揭谛揭谛，波罗揭谛，波罗僧揭谛，菩提萨婆诃。]]></content>
      <categories>
        <category>佛学</category>
      </categories>
      <tags>
        <tag>佛学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[kong源码导读]]></title>
    <url>%2F2018%2F04%2F16%2F20180416%2F</url>
    <content type="text"><![CDATA[概览&emsp;&emsp;kong是一个基于nginx和OpenResty模块构建的API网关服务。提供http请求路由，后端服务负载均衡以及通过丰富的插件提供认证鉴权、流量调控、日志监控等功能。该网关目前应用在全球著名的API管理站点mashape上。&emsp;&emsp;nginx是一个采用异步I/O，事件驱动的高性能Web服务器，也可以作为在企业内部提供基于http rpc的反向代理和负载均衡器。由于nginx的配置都是以静态文件的方式提供，而且nginx一般都是多台部署，导致nginx的运维管理变得比较复杂。许多运维的小伙伴都会写一些运维脚本，自动通过ssh命令远程连接到服务器去做一些配置更新的操作。&emsp;&emsp;笔者所在公司也开发过一个基于nginx的软负载中心。用户可以在平台上为自己的服务配置反向代理以及负载均衡策略。用户所有的操作都会打包成一次对nginx配置的修改。修改指令会发送到每台nginx部署的一个agent上，最后由agent完成nginx配置文件的更新。&emsp;&emsp;这些方法虽然可以达到自动化的管理nginx，但是本质上还是通过配置文件的方式去改变nginx的一些固定行为。在企业里面，特别是互联网公司常常需要定制一些功能。虽然可以为nginx开发一些模块，但是门槛较高，需要对nginx源码级的掌握。OpenResty为nginx引入的LuaJIT和lua-nginx-module，使我们可以在nginx的各个执行阶段编写一些lua脚本，极大地扩展了nginx的功能。OpenResty的作者已经用lua开发了许多工具库，使得我们可以在nginx中访问MySQL、Memcached、Redis。kong在此基础上实现了一个API网关服务。 导读如何阅读源码&emsp;&emsp;想必看这边文章的许多朋友之前对nginx都略有了解，但是可能是头一次接触lua语言，笔者当时也是头一次。这种情况笔者一般不会一上来就去阅读源码，而是先阅读下官方文档，把环境搭建起来之后试用下功能，然后看下日志。这样会对这个系统有个整体的感觉，之后就可以去翻翻源码了。笔者所使用的编辑器是IntelljIDEA，它可以自动识别出lua语言，然后提示你去下载支持该语言的插件，很是方便。笔者全程是在ubuntu环境下开发的，使用linux系统的好处是改完代码后执行下make命令，然后reload下nginx就可以看到效果。使用windows的童鞋建议装个linux的虚拟机。由于调试kong比较麻烦，所以笔者都是通过加日志的方式学习代码的。选取一些关键的流程打印一些数据会对源码的学习起到事半功倍的效果。有时候在troubleshooting的时候更加需要打印许多日志才能把问题定位到。&emsp;&emsp;笔者使用的kong的版本为0.12.1 如何使用该文档&emsp;&emsp;本文档作为源码导读，在阅读本文档时手头最好有一份kong的源码以便随时进入源码深入阅读。读者不必从头到尾进行通读，可以根据目录选择自己感兴趣的章节进行阅读。 源码结构|– kong&emsp;&emsp;|– api [admin管理接口的代码]&emsp;&emsp;&emsp;&emsp;|– …&emsp;&emsp;|– cluster_events [集群事件的数据访问层代码]&emsp;&emsp;&emsp;&emsp;|– …&emsp;&emsp;|– cmd [kong命令行的代码]&emsp;&emsp;&emsp;&emsp;|– …&emsp;&emsp;|– core [请求处理、路由、负载均衡等核心代码]&emsp;&emsp;&emsp;&emsp;|– …&emsp;&emsp;|– dao [数据库访问层代码]&emsp;&emsp;&emsp;&emsp;|– …&emsp;&emsp;|– plugins [插件的代码]&emsp;&emsp;&emsp;&emsp;|– …&emsp;&emsp;|– templates [nginx配置文件模板]&emsp;&emsp;&emsp;&emsp;|– …&emsp;&emsp;|– tools [工具类代码]&emsp;&emsp;&emsp;&emsp;|– …&emsp;&emsp;|– vendor [这里提供了用于lua面向对象编程的基类]&emsp;&emsp;&emsp;&emsp;|– …&emsp;&emsp;|– cache.lua [缓存实现类，封装了mlcache]&emsp;&emsp;|– cluster_events.lua [集群事件同步代码]&emsp;&emsp;|– conf_loader.lua [配置加载]&emsp;&emsp;|– constants.lua [常量定义]&emsp;&emsp;|– init.lua [kong的入口，可以从这里开始阅读代码]&emsp;&emsp;|– meta.lua [定义版本号之类]&emsp;&emsp;|– mlcache.lua [封装了lua-resty-mlcache]&emsp;&emsp;|– singletons.lua [单例模式，存放公共对象] 执行入口&emsp;&emsp;以下是kong的nginx配置文件，笔者把一些和本章主题无关的先去掉了。 1234567891011121314151617181920212223242526272829303132333435363738394041init_by_lua_block &#123; kong = require 'kong' kong.init()&#125;init_worker_by_lua_block &#123; kong.init_worker()&#125;upstream kong_upstream &#123; server 0.0.0.1; balancer_by_lua_block &#123; kong.balancer() &#125; keepalive 60;&#125;server &#123; server_name kong; listen 0.0.0.0:8000; location / &#123; rewrite_by_lua_block &#123; kong.rewrite() &#125; access_by_lua_block &#123; kong.access() &#125; header_filter_by_lua_block &#123; kong.header_filter() &#125; body_filter_by_lua_block &#123; kong.body_filter() &#125; log_by_lua_block &#123; kong.log() &#125; &#125; location = /kong_error_handler &#123; internal; content_by_lua_block &#123; kong.handle_error() &#125; &#125;&#125; &emsp;&emsp;可以看到kong的代码执行入口在init_by_lua_block块中，该块中的代码会在nginx的master加载配置的时候被执行。通过require ‘kong’得到的实例是一个全局对象，在Lua虚拟机里面执行的代码都可以访问到。该实例通过master的fork进程方法共享给worker，如果worker修改该实例会触发操作系统进程的copy-on-write，worker进程就会拥有该实例的一个副本。&emsp;&emsp;后缀是by_lua_block的都代表nginx处理请求的一个执行阶段，每个阶段都会执行相应的kong代码。nginx执行阶段流程如下如所示: init_by_lua*&emsp;&emsp;发生在master进程启动阶段。这里会对数据访问层进行初始化，加载插件的代码，构造路由规则表。 init_worker_by_lua*&emsp;&emsp;发生在worker进程启动阶段。这里会开启数据同步机制，执行每个插件的init_worker方法。 set_by_lua*&emsp;&emsp;处理请求第一个执行阶段。这里可以做一些流程分支处理判断变量初始化。kong没有使用该阶段。 rewrite_by_lua*&emsp;&emsp;这里可以对请求做一些修改。kong在这里会把处理代理给插件的rewrite方法。 access_by_lua*&emsp;&emsp;kong在这里对请求进行路由匹配，找到后端的upstream服务的节点。 balancer_by_lua*&emsp;&emsp;kong在这里会把上一阶段找到的服务节点设置给nginx的load balancer。如果设置了重试次数，此阶段可能会被执行多次。 header_filter_by_lua*&emsp;&emsp;这里可以对响应头做一些处理。kong在这里会把处理代理给插件的header_filter方法。 body_filter_by_lua*&emsp;&emsp;这里可以对响应体做一些处理。kong在这里会把处理代理给插件的body_filter方法。 log_by_lua*&emsp;&emsp;kong在这里会通过插件异步记录日志和一些metrics数据。 核心模块&emsp;&emsp;kong有三大核心模块：请求路由(Router)、负载均衡(Balancer)和集群数据同步。这3个模块加上插件就组成了kong的所有功能。&emsp;&emsp;路由和负载均衡模块完全接管了nginx本身的策略，也是作为一个网关的核心功能。集群数据同步则弥补了nginx集群管理的缺点，可以使得路由规则和负载均衡策略的修改可以动态进行，省去了修改配置文件和重启的流程。 Router概览&emsp;&emsp;路由是Kong的核心功能之一。Kong会代理HTTP请求，根据HTTP主机头、请求URI和请求方式(GET/POST等)匹配路由规则，找到实际处理请求的后端服务。 &emsp;&emsp;Kong的路由规则由HTTP主机头、请求URI和请求方式组成。规则匹配发生在Nginx的Rewrite/Access阶段中，access_by_lua_block指令块里面的kong.access()方法的前置handler中。见kong-nginx.conf:85 &emsp;&emsp;路由规则的原始数据存储在数据库apis表中。HTTP主机头由表字段hosts描述、请求URI由表字段uris描述、请求方式由表字段methods描述。在MySQL中，这3个字段的数据存储格式都是JSON序列化之后字符串数组。apis的表结构描述如下： 1234567891011121314151617181920212223242526272829303132CREATE TABLE `apis` ( -- guid `id` varchar(64) NOT NULL, -- 名称 `name` varchar(255) NOT NULL, -- upstream标识 `upstream_url` varchar(1023) NOT NULL, -- 是否保留主机头 `preserve_host` tinyint(1) NOT NULL, -- 主机头匹配 `hosts` varchar(1023) DEFAULT NULL, -- uri匹配 `uris` varchar(1023) DEFAULT NULL, -- 请求方法匹配 `methods` varchar(1023) DEFAULT NULL, -- 是否只接受https的请求 `https_only` tinyint(1) DEFAULT '0', -- 如果接受https的请求并且客户端IP不在授信IP中，是否终止请求 `http_if_terminated` tinyint(1) DEFAULT '0', -- 由于链路问题(connection timeouts, connection resets等或者5xx错误)导致请求转发失败重试次数 `retries` smallint(6) DEFAULT '5', -- 如果是uri前缀匹配，是否剥离掉uri前缀 `strip_uri` tinyint(1) DEFAULT '1', -- 一些超时时间 `upstream_connect_timeout` int(11) DEFAULT '60000', `upstream_send_timeout` int(11) DEFAULT '60000', `upstream_read_timeout` int(11) DEFAULT '60000', `created_at` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3), PRIMARY KEY (`id`), UNIQUE KEY `name` (`name`), KEY `apis_name_idx` (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC; &emsp;&emsp;路由规则的创建在Nginx的初始化阶段，init_by_lua_block指令块中的kong.init()方法里。见kong-nginx.conf:26 &emsp;&emsp;在kong.init()的末尾调用core.build_router(dao, “init”)方法构造路由表。见init.lua:174。 &emsp;&emsp;build_router方法的第一个参数是一个数据库操作对象，会使用它查询出数据库apis表中的数据。第二个参数是一个路由表在缓存中的版本号。如果apis表的数据发生变化，会触发缓存的invalidate操作，生成出一个新的version。此时在kong.access()方法中会再次调用build_router对路由表进行重建。见handler.lua:336。 &emsp;&emsp;build_router会对从apis表中查询出来的数据按创建时间created_at从小到大进行排序。见handler.lua:54。这样如果2条规则相同的话较早的规则会优先匹配。接着会构造一个Router对象，它会负责路由表的创建、路由规则的匹配操作。 生成规则&emsp;&emsp;Router对象的第一个核心功能就是把数据库中的apis数据转化为适合进行匹配的规则。规则类型有3种：HOST、URI和METHOD，见router.lua:56。这3种类型分别由位标识0x01、0x02和0x04表示。3种类型组成7种匹配方式： HOST and URI and METHOD，位标识为(0x01 | 0x02 | 0x04) == 0x07 HOST and URI，位标识为(0x01 | 0x02) == 0x03 HOST and METHOD，位标识为(0x01 | 0x04) == 0x05 METHOD and URI，位标识为(0x04 | 0x02) == 0x06 HOST，位标识为0x01 URI，位标识为0x02 METHOD， 位标识为0x04 &emsp;&emsp;创建规则前会先把数据库里存储的apis对象格式化成api_t对象，api_t格式如下： 123456789101112131415161718api_t = &#123; -- 数据库里面的apis对象 api = api, -- 是否对URI按前缀进行剥离 strip_uri = api.strip_uri, -- 请求转发的时候是否保留原始主机头 preserve_host = api.preserve_host, -- 7种匹配方式的位标识 match_rules = 0x00, -- 主机头匹配规则，当作数组使用 hosts = &#123;&#125;, -- uri匹配规则，当作数组使用 uris = &#123;&#125;, -- method匹配规则，当作词典使用 methods = &#123;&#125;, -- upstream信息 upstream_url_t = &#123;&#125;, &#125; &emsp;&emsp;如果主机头匹配里面包含通配符，如：*.example.com，则把通配表达式转成正则表达式：.+\\.example\\.com$，然后hosts字段里面存储的对象格式为： 12345&#123; wildcard = true, value = '*.example.com', regex = '.+\\.example\\.com$',&#125; &emsp;&emsp;如果主机头匹配里面是普通的字符串，如：abc.example.com，那么hosts字段里面存储的对象格式为： 123&#123; value = abc.example.com,&#125; &emsp;&emsp;使用正则表达式：^[a-zA-Z0-9.-_~/%]*$ 判断uri匹配是否是一个普通的uri前缀。如果是，如：/prefix/some，则uris字段里面存储的对象格式为： 1234&#123; is_prefix = true, value = '/prefix/some',&#125; &emsp;&emsp;如果uri匹配是包含正则字符串，如：/users/\d+/profile，则uris字段里面存储的对象格式为： 1234567&#123; is_regex = true, value = '/users/\d+/profile', regex = '/users/\d+/profile', has_captures = false, strip_regex = '/users/\d+/profile/?(?&lt;stripped_uri&gt;.*)',&#125; &emsp;&emsp;如果method匹配是get方式，则会把get转成大写，如：GET，以此作为key放入methods词典中。 &emsp;&emsp;使用一个词典数据结构categories对api_t对象以7种匹配方式进行归类。词典的key为7种匹配方式的位标识：0x01、0x02、0x03、0x04、0x05、0x06、0x07，value里面会按host、uri和method对规则进行分组。value定义如下： 12345678910&#123; -- 按host分组的规则，词典类型 apis_by_hosts = &#123;&#125;, -- 按uri分组的规则，词典类型 apis_by_uris = &#123;&#125;, -- 按method分组的规则，词典类型 apis_by_methods = &#123;&#125;, -- 该匹配模式下所有规则，数组类型 all = &#123;&#125;,&#125; &emsp;&emsp;如果一个匹配规则是hosts=[abc.com]、uris=[/path]、method=[GET]，那么categories会包含此规则的api_t对象。如下所示： 1234567891011121314&#123; 7 = &#123; apis_by_hosts = &#123; abc.com = [api_t对象] &#125;, apis_by_uris = &#123; /path = [api_t对象] &#125;, apis_by_methods = &#123; GET = [api_t对象] &#125;, all = [api_t对象], &#125;&#125; &emsp;&emsp;如果另一个匹配规则是hosts=[abc.com]、uris=[/version]，那么categories会包含此规则的api_t对象2。如下所示： 1234567891011121314151617181920212223&#123; 3 = &#123; apis_by_hosts = &#123; abc.com = [api_t对象2] &#125;, apis_by_uris = &#123; /version = [api_t对象2] &#125;, all = [api_t对象2], &#125;, 7 = &#123; apis_by_hosts = &#123; abc.com = [api_t对象] &#125;, apis_by_uris = &#123; /path = [api_t对象] &#125;, apis_by_methods = &#123; GET = [api_t对象] &#125;, all = [api_t对象], &#125;&#125; &emsp;&emsp;另外使用一个词典数据结构plain_indexes和3个数组结构uris_prefixes、uris_regexes、和wildcard_hosts决定优先使用哪种匹配模式。它们的创建方式见router.lua:252。首先会使用plain_indexes匹配主机头、uri和请求方法，因为它的构造是一个词典结构，可直接根据主机头、uri和请求方法进行查询，效率比较高。plain_indexes的内容如下： 1234567891011&#123; hosts = &#123; abc.com = true, &#125;, uris = &#123; /foo = true, &#125;, methods = &#123; GET = true &#125;&#125; &emsp;&emsp;如果在plain_indexes里面没有查询到的话，则使用uris_prefixes、uris_regexes、和wildcard_hosts里面的规则一个一个进行匹配，直到匹配成功为止。 匹配流程&emsp;&emsp;规则的匹配在kong.access方法里面，调用router.exec方法进行匹配。见handler.lua:354。 &emsp;&emsp;router.exec方法从http请求里面获取主机头信息、HTTP请求方法和请求URI。然后调用find_api方法进行实际地匹配。见router.lua:594。 &emsp;&emsp;find_api首先从缓存里面查询匹配结果。如果缓存里面没有数据，则是第一次匹配。先把请求中的主机头放入ctx.req_host，请求uri放入ctx.req_uri，请求方法放入ctx.req_method。然后使用plain_indexes、uris_prefixes、uris_regexes、和wildcard_hosts选择匹配模式。这里如果是根据uri前缀、uri正则表达式或主机头通配符匹配到的话，则会把uri前缀或uri正则表达式放入ctx.hits.uri中，把主机头通配符放入ctx.hits.host中。后续就使用ctx去和规则进行匹配。匹配模式按照CATEGORIES定义的顺序进行降级匹配。如果匹配模式是0x07，则使用0x07里面的规则去匹配。如果匹配失败，则使用0x03的规则进行匹配。如果还是失败，则继续按0x05 -&gt; 0x06 -&gt; 0x01 -&gt; 0x02 -&gt; 0x04的降级顺序进行匹配，直到成功为止。 &emsp;&emsp;确定匹配模式之后，先使用reduce方法对候选的规则进行筛选。前面说到每一种匹配模式包含的规则会按host、uri和method进行分组。reduce方法就是选取数量最少的那个分组。如果那个分组下的规则匹配失败，则使用all下面的规则进行匹配。 &emsp;&emsp;现在举例说明。假设现在根据如下json创建了一个apis对象。 1234567&#123; "name": "my-api", "upstream_url": "http://my-api.com", "hosts": ["example.com", "service.com"], "uris": ["/foo", "/bar"], "methods": ["GET"]&#125; &emsp;&emsp;对应的api_t内容是： 123456789101112131415161718192021222324252627282930api_t = &#123; api = 数据库中的api对象, strip_uri = false, preserve_host = false, match_rules = 0x07, hosts = [ &#123; value = example.com, &#125;, &#123; value = service.com, &#125; ], uris = [ &#123; is_prefix = true, value = '/foo', &#125;, &#123; is_prefix = true, value = '/bar', &#125; ], methods = &#123;GET = true&#125;, upstream_url_t = &#123; scheme = http, host = my-api.com, port = 80, &#125; &#125; &emsp;&emsp;categories内容如下： 12345678910111213141516&#123; 7 = &#123; apis_by_hosts = &#123; example.com = [api_t], service.com = [api_t] &#125;, apis_by_uris = &#123; /foo = [api_t], /bar = [api_t], &#125;, apis_by_methods = &#123; GET = [api_t] &#125;, all = [api_t], &#125;&#125; &emsp;&emsp;plain_indexes的内容如下： 12345678910111213&#123; hosts = &#123; example.com = true, service.com = true &#125;, uris = &#123; /foo = true, /bar = true &#125;, methods = &#123; GET = true &#125;&#125; &emsp;&emsp;uris_prefixes的内容如下： 12345678910[ &#123; is_prefix = true, value = '/foo', &#125;, &#123; is_prefix = true, value = '/bar', &#125;] &emsp;&emsp;由于host匹配没有通配符以及uri匹配没有正则表达式，所以uris_regexes和wildcard_hosts为空。 &emsp;&emsp;假设现在有如下请求： 12GET /foo HTTP/1.1Host: example.com &emsp;&emsp;此请求的主机头是example.com，请求uri是/foo，请求方法是GET。首先使用plain_indexes确定匹配模式为0x07，因为plain_indexes.hosts包含example.com，位标识是0x01。plain_indexes.uris包含/foo，位标识是0x02。plain_indexes.methods包含GET，位标识是0x04。把0x01，0x02和0x04通过位或运算得到0x07。 &emsp;&emsp;根据0x07从categories里选择key为7的规则。reduce方法等价于:min(#categories[7].apis_by_hosts[example.com], #categories[7].apis_by_uris[/foo], #categories[7].apis_by_methods[GET])&emsp;&emsp;#号是取数组的长度。此处这3个数组的长度都是1，所以优先选择apis_by_hosts中的api_t规则进行匹配。 api_t里面的hosts、uris和methods匹配上了这个请求，此次匹配成功。 Balancer概览&emsp;&emsp;Balancer对请求做负载均衡，使请求分散地转发到后端服务。从而可以优化资源利用率、提升吞吐量、减少延时以及提高容错等。Kong使用了DNS-Balancer和Ring-Balancer两种均衡模式。DNS-Balancer适合对外部的第三方服务进行负载均衡。候选服务器列表添加在A记录或SRV记录中。A记录中只包含IP地址，而且没有权重信息，适合简单的round-robin。SRV记录中包含IP地址和端口，并含有权重信息，可以按权重调拨流量以及IP地址复用。Ring-Balancer适合对内部服务进行负载运行。因为这种模式的控制性强，可以灵活地支持机器上下线操作、带权重的负载均衡以及可以进行蓝绿部署和金丝雀发布。本章着重分析Ring模式。 Ring-Balancer&emsp;&emsp;在Kong里面，Ring-Balancer通过upstream和target对象描述。upstream对象用于调节负载均衡的行为，如权重分配、健康检查以及是否通过一致性hash绑定请求到对应的机器上。target存储进行负载均衡的机器列表。 &emsp;&emsp;upstream对象数据库表结构描述如下： 12345678910111213141516171819202122CREATE TABLE upstreams ( id varchar(64) NOT NULL, name varchar(255) DEFAULT NULL, -- 槽位大小，用于调节权重 slots int(11) NOT NULL, -- json格式存储的健康检查配置 healthchecks varchar(10000) DEFAULT NULL, -- 首选hash输入值：none,consumer,ip,header hash_on varchar(31) DEFAULT NULL, -- 此选hash输入值 hash_fallback varchar(31) DEFAULT NULL, -- 根据http header进行hash时，首选的header hash_on_header varchar(255) DEFAULT NULL, -- 此选的header hash_fallback_header varchar(255) DEFAULT NULL, created_at timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3), PRIMARY KEY (id), UNIQUE KEY name (name), KEY upstreams_name_idx (name)) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC; &emsp;&emsp;target对象数据库表结构描述如下： 12345678910111213141516CREATE TABLE targets ( id varchar(64) NOT NULL, -- ip:port target varchar(500) NOT NULL, -- 权重值 weight int(11) NOT NULL, -- 所属upstream upstream_id varchar(64) DEFAULT NULL, created_at timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3), PRIMARY KEY (id), KEY tragets_upstreamid_fk (upstream_id), KEY targets_target_idx (target), CONSTRAINT tragets_upstreamid_fk FOREIGN KEY (upstream_id) REFERENCES upstreams (id) ON DELETE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC; 构造balancer&emsp;&emsp;Ring-Balancer的初始化发生在nginx工作进程的初始化阶段中，init_worker_by_lua_block指令块的kong.init_worker()方法里，见nginx-kong.conf:30。init_worker里面调用了balancer.init()方法做了实际的初始化工作。 &emsp;&emsp;balancer.init首先使用get_all_upstreams方法从数据库upstreams表加载所有数据到缓存中。调用create_balancer方法对每个查询出来的upstream对象，创建一个负载均衡器ring_balancer。均衡器的实现在resty.dns.balancer模块中，这个模块在Kong的lua-resty-dns-client项目里，代码见github，文档见resty.dns.balancer。 &emsp;&emsp;均衡器初始化使用了3个参数：wheelSize,order和dns，见balancer.lua:295。在0.12.1版本中，实际使用的就wheelSize这一个参数。如果wheelSize越大，目标机器的分布就越离散。这样在选择的时候既可以保证权重，连续选到相同的机器的概率也比较小。当然wheelSize越大，占用的内存就越多，重建的开销比较大。可以根据后端机器的数量选择的一个值，它的默认值是1000。 加载target&emsp;&emsp;fetch_target_history方法会从key为balancer:targets:${upstreamId}的缓存中选择upstream下面的target，如果缓存中没有就调用load_targets_into_memory方法从数据库中查询出来再放入缓存。&emsp;&emsp;Kong的api没有对target按ip和端口进行修改的操作。(这是因为如果只是做添加操作的话，可以不重建balancer，减少开销，见balancer.lua:364。但是在check_target_history方法中有一个bug，导致即使只是添加target，还是会重建balancer，bug见balancer.lua:357，这里把old_history和new_history写反了。)&emsp;&emsp;由于只做添加，数据库表targets中可能会出现多条target相同的数据(ip和port相同)，但是权重是不同的数据。如果出现这种情况该决定使用哪个target记录呢?fetch_target_history方法会对查询出来的target记录按创建时间进行从老到新的排序，见balancer.lua:116。之后apply_history方法会按这个顺序把target添加到均衡器ring_balancer中，如果ip和端口相同，ring_balancer中后添加的记录会覆盖之前的，见balancer.lua:314。 &emsp;&emsp;无论是Ring-Balancer或DNS-Balancer，都是使用resty.dns.balancer这个负载均衡器做的负载均衡。这是因为在调用resty.dns.balancer的addHost方式时。如果hostname传的是域名的话，会做dns解析，把解析出来的节点添加进去。但如果hostname是ip地址的话，直接把添加参数所表示的节点。文档见addHost target健康检查&emsp;&emsp;create_healthchecker方法为每个负载均衡器ring_balancer添加健康检查。健康检查的实现在resty.healthcheck模块中，这个模块在Kong的lua-resty-healthcheck项目里，代码见github，文档见resty.healthcheck。&emsp;&emsp;create_healthchecker使用如下代码构造健康检查器： 12345local healthchecker, err = healthcheck.new(&#123; name = upstream.name, shm_name = "kong_healthchecks", checks = upstream.healthchecks, &#125;) &emsp;&emsp;shm_name传递的是lua-resty-healthcheck需要的nginx中的共享内存名，用于存储当前哪些节点的失败或成功次数。定义见nginx-conf:21。 &emsp;&emsp;checks传递的是健康检查的json配置。健康检查有主动检查和被动检查2种。 &emsp;&emsp;主动检查需要设置检查url、超时时间、检查间隔、失败判断码、失败判断次数、成功判断码、成功判断次数、超时判断次数等。&emsp;&emsp;kong默认的主动检查配置如下(这个配置不会启用主动检查，因为tcp_failures、timeouts、http_failures、interval和successes都被设成了0)： 1234567891011121314151617181920212223242526272829"active":&#123; "unhealthy":&#123; "http_statuses":[ 429, 404, 500, 501, 502, 503, 504, 505 ], "tcp_failures":0, "timeouts":0, "http_failures":0, "interval":0 &#125;, "http_path":"/", "timeout":1, "healthy":&#123; "http_statuses":[ 200, 302 ], "interval":0, "successes":0 &#125;, "concurrency":10&#125; &emsp;&emsp;kong会根据配置定期对后端服务节点机器调用检查url进行检查，如果检查超时或HTTP返回码满足失败条件的次数超过限制，负载均衡器会把该节点标记为不可用。 &emsp;&emsp;被动检查需要设置失败判断码、失败判断次数、成功判断码、成功判断次数、超时判断次数等。&emsp;&emsp;kong默认的被动检查配置如下(这个配置不会启用被动检查，因为tcp_failures、timeouts、http_failures和successes都被设成了0)： 123456789101112131415161718192021222324252627282930313233343536"passive":&#123; "unhealthy":&#123; "http_failures":0, "http_statuses":[ 429, 500, 503 ], "tcp_failures":0, "timeouts":0 &#125;, "healthy":&#123; "http_statuses":[ 200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300, 301, 302, 303, 304, 305, 306, 307, 308 ], "successes":0 &#125;&#125; &emsp;&emsp;kong在跟后端机器进行通信的过程中，判断其返回码，有无超时。然后根据配置决定是否对节点进行标记。 &emsp;&emsp;由于被动检查的操作是在负载均衡器里面进行，attach_healthchecker_to_balancer里面对负载均衡器设置了report_http_status和report_tcp_failure方法，这2个方法会在转发请求的时候被调用，把请求结果通知给健康检查器，见balancer.lua:249。&emsp;&emsp;这里要注意下如果被动检查把一个节点标记为不可用的话，即使该节点已经恢复了，kong也不会自动地把该节点添加进balancer中。需要用户手动调用一个管理接口进行恢复，见文档。 &emsp;&emsp;构造完健康检查器后，调用populate_healthchecker方法把负载均衡器中节点添加到健康检查器中。然后调用attach_healthchecker_to_balancer监听健康检查器的事件：healthchecker.events.healthy和healthchecker.events.unhealthy，并设置回调方法。回调方法就是根据健康检查器的事件类型，在负载均衡器中把后端节点标记为可用或不可用，见balancer.lua:229。 选择target&emsp;&emsp;当请求匹配出一条路由规则之后，就会在该规则下面的target中选一个目标实例进行转发。目标实例的选择发生在kong.access()的后置handler中，调用balancer.execute方式进行选择。target的选择全权委托给了resty.dns.balancer对象，见balancer.lua:689。&emsp;&emsp;选择target的算法是带权重的round-robins。普通的round-robins算法把所有候选的target放入一个数组中，确定一个数组的起始元素(一般取第一个)。之后每次选择的时候按顺序往后选一个，到末尾时再从头开始遍历。带权重的round-robins算法相似，也是遍历数组。只不过数组的大小会远远超过target的数量，resty.dns.balancer初始化的时候wheelSize就是指定这个数组的大小。wheelSize和每个target的权重值确定一个target在数组中分配的数量，然后随机选择数组的位置进行放入。 集群间数据同步概览&emsp;&emsp;kong的代码运行于nginx的worker进程中。kong对数据的修改会在一个worker中进行，数据被修改后需要通知给本地的其他worker进程和其他机器上的worker进程。kong使用的进程间通信主要方式有：1. 本机间通信-共享内存 2. 跨机器通信-数据库。 数据共享&emsp;&emsp;kong的数据存储在数据库中，同时在缓存中保留一份。当数据库的中的数据被修改时，需要发出相应的事件通知其他worker。其他worker接收事件后，删除缓存中对应的数据。下次从缓存读数据时发现没有的话，就从数据库加载出来。&emsp;&emsp;事件分为本地事件和集群事件。本地事件用于通知在一台机器上的worker，集群事件用于通知在多台机器上的worker。 共享内存&emsp;&emsp;本地事件通过共享内存实现。kong实现了一套基于nginx共享内存的事件发布-订阅机制，源码见仓库lua-resty-worker-events。该包提供post_local方法在worker进程内进行事件发布，提供post方法在同属于一台机器上的worker进程间进行事件发布。这2个方法需要指定source和event来确定事件源。&emsp;&emsp;kong的数据访问层dao.lua封装了insert、update和delete三个对数据操作的方法。这三个方法分别会使用post_local发出source为dao:crud，event为insert、delete、update的数据增、删、改的事件。事件的数据格式如下: 12345&#123; schema = self.schema, --表名 operation = "create", --操作类型 entity = res, --数据&#125; &emsp;&emsp;worker进程启动的时候会在init_worker阶段注册这些事件的订阅方法，见handler.lua:97。订阅方法中把所有的dao:crud事件按表名称使用post_local再进行分发。所以从dao:crud分发的事件如下: source=crud, event=apis这个事件会通知所有的worker(包含不同机器)apis数据的修改。这里对缓存中对key为router:version进行invalidate操作会发送一条channel=invalidations集群事件。 source=crud, event=targets这个事件会通知所有的worker(包含不同机器)targets数据的修改。使用cluster_events:broadcast方法发送一条channel=balancer:targets集群事件。 source=crud, event=upstreams这个事件会通知所有的worker(包含不同机器)upstreams数据的修改。使用cluster_events:broadcast方法发送一条channel=balancer:upstreams集群事件。 数据库&emsp;&emsp;集群事件通过数据库实现。数据库表cluster_events存放用于集群间分发的事件。cluster_events表结构如下: 12345678910111213141516171819CREATE TABLE cluster_events ( id varchar(64) NOT NULL, -- 标识生成事件的节点id node_id varchar(64) NOT NULL, -- 事件产生时间，精确到毫秒 at timestamp(3) NOT NULL, -- 事件生效时间，精确到毫秒 nbf timestamp(3) NULL DEFAULT NULL, -- 事件过期时间，精确到毫秒 expire_at timestamp(3) NOT NULL, -- 事件类型 channel varchar(1023) DEFAULT NULL, -- 事件数据 data varchar(10000) DEFAULT NULL, PRIMARY KEY (id), KEY cluster_events_at_idx (at), KEY cluster_events_channelt_idx (channel)) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC; channel的类型有: invalidations表示路由规则、插件配置的变更 balancer:targets表示负载均衡的targets列表发生变更 balancer:upstreams表示upstream对象发生变更 balancer:post_health表示target的健康状态发生变更。由于被动健康检查拉出实例后，kong不会在对该实例进行自动拉入，需要通过该事件来拉入实例。 &emsp;&emsp;调用cluster_events:broadcast方法会往cluster_events表中新增一条记录。在init_worker阶段通过调用cluster_events:subscribe会开启一个定时器，定时查询出cluster_events表中新增的记录。这里要注意的是同一台机器上只会有一个worker进程会对数据库进行查询(通过加锁实现，代码见cluster_events:303)，查询出来后再通过共享内存的方式通知给这台机器上的其他worker。&emsp;&emsp;配置参数db_update_frequency确定查询数据库的间隔，默认为5秒。数据范围根据at字段是否落在(起始时间, 结束时间]确定。起始时间第一次设置在init_worker阶段，调用ngx.now()获取当前时间(精确到毫秒)并放入key为cluster_events:at的共享内存中。之后抢到锁的worker会从共享内存中取出该时间，该时间需要减去db_update_propagation + 0.001来确定起始时间，以防止事件丢失。配置参数db_update_propagation默认为0。结束时间取ngx.now()的值。查询成功后会把结束时间覆盖之前的起始时间，并把该事件分发到本机的其他worker。对于设置了nbf的事件，kong如果发现还没到生效时间，就会通过ngx.timer设置一个定时器延后分发该事件。 Plugin概览&emsp;&emsp;kong的插件可以在不修改kong本身源码的情况下方便地添加一些功能。插件不仅可以处理请求，还可以定义API，操作数据库。kong本身提供了许多插件，支持鉴权认证、安全控制、流量调控和请求报文转换等。见plugins list 执行原理&emsp;&emsp;每个插件都需要放置在plugins目录下。这里有个base_plugin.lua文件，定义了一个每个插件都需要去继承的基类。该基类定义了一些每个子类都需要去实现的方法，kong在每个执行阶段会调用。插件需要定义一个handler.lua文件，在这个文件里面去实现子类。此外还需要定义一个schema.lua文件，在这里定义每个插件的配置数据。&emsp;&emsp;在nginx的master启动阶段，会扫描plugins目录下面的所有插件，加载handler.lua和schema.lua中定义的模块，见kong/init.lua:78。&emsp;&emsp;数据库中的plugins表定义了需要启用的插件。只有在这张表里面存在的插件，并且是开启状态的才会被使用。&emsp;&emsp;插件还可以定义一个api.lua文件，用于暴露一些api接口。如oauth2插件。kong在nginx的配置文件里面开启了8001端口，所有的管理api都暴露在这个端口上。它会调用kong/init.lua中的serve_admin_api方法，使用lapis模块加载api/routes/init.lua，初始化管理接口。这里也会加载插件的api.lua，加载插件的接口，见api/init.lua:158。&emsp;&emsp;在每个请求的执行阶段，都会先执行kong的前置处理方法，然后遍历所有启用的插件执行每个阶段对应的方法。如果读者看过base_plugin的文件话会发现基本上所有的方法都会传一个conf参数。这个就是在plugins表中定义的每个插件需要用到的配置。遍历插件的时候会从缓存里面加载插件配置，如果缓存失效就会从数据里面重新加载一遍。我们可以触发invalidations集群事件来动态的更新插件配置。见core/plugins_iterator.lua。]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>API网关</tag>
        <tag>nginx</tag>
        <tag>openresty</tag>
        <tag>kong</tag>
        <tag>lua</tag>
      </tags>
  </entry>
</search>
